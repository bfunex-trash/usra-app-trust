{"version":3,"sources":["utils/numbers.ts","state/reducer.ts","state/store.ts","AppHeader.tsx","ProjectList.tsx","state/actions.ts","utils/files.ts","utils/csv.ts","Besoins.tsx","utils/math.ts","components/ReadonlyUnitField.tsx","components/ChoiceBox.tsx","components/ReadonlyField.tsx","components/UnitField.tsx","components/NumberField.tsx","components/ModuleFields.tsx","dimentionement/PV.tsx","dimentionement/Battries.tsx","dimentionement/Onduleur.tsx","dimentionement/Regulateur.tsx","dimentionement/Cables.tsx","Report.tsx","ProjectContent.tsx","ProjectView.tsx","ModelsView.tsx","AppContent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["validate","n","isFinite","NaN","fixed","unit","trim","toFixed","percentage","state","saved","localStorage","getItem","initial","JSON","parse","projects","List","map","project","needs","mutateCalcProjectNeed","energy","hours","prolifiratedPower","quantity","power","reduceProjectNeedsTotalEnergy","total","need","reduceProjectNeedsProlifiratedPower","calculateTotalEnergy","reduce","calculateProlifiratedPower","projectID","maximum","Math","max","id","batteries","BatteryModules","model","vendor","Vnom","Cnom","Ƞ","pv","PVModules","name","type","Voc","Vmp","Pm","Isc","Imp","output","temperture","inverters","InverterModules","Pnom","PVmpp","Vmax","regulators","RegulatorModules","I","Vout","ρ","calcS","L","Vd","calcVd","V","SQRT3","sqrt","Vic","mutateUpdateProject","El","Ƞb","Kloss","Htilt","Vsystem","Pc","energyBesoinTotal","PV","module","Msc","ceil","Mpc","Mt","Nc","DODmax","Ƞout","battery","inverter","Cx","calculateCx","Bt","Bsc","Bpc","floor","Pi","Pf","nombreOnduleur","round","Irated","regulateur","regulator","Rc","Ƞbatterie","Lmr","Lbi","Lic","Vdmr","Vmr","calcVdmr","Smr","Ibi","calcIbi","Vbi","Sbi","Iic","calcIic","Sic","reducer","action","payload","value","get","set","projet","$needs","filter","site","push","encode","toArray","createStore","next","setItem","stringify","setTitle","document","title","AppHeader","useEffect","className","to","src","process","height","alt","ProjectListState","ButtonText","connect","current","create","edit","remove","useState","setName","setSite","Normal","setState","setProjectID","key","hidden","onClick","e","window","confirm","stopPropagation","requestAnimationFrame","role","aria-label","EditProject","onChange","target","preventDefault","CreateProject","selectFiles","options","a","createFileSelector","files","multiple","Array","from","file","input","createElement","form","appendChild","body","accept","Promise","resolve","reject","reset","click","onchange","parseCSV","content","decode","delimiter","separator","split","line","x","console","warn","reduceProjectTotalNeed","isNeedUnselected","selected","Besoins","setNeeds","scope","size","index","tabIndex","style","cursor","tagName","toggleNeedSelected","userSelect","pointerEvents","touchAction","setNeedName","min","step","setNeedHours","valueAsNumber","setNeedQuantity","setNeedPower","disabled","every","text","values","parseInt","parseFloat","addNeed","ReadonlyUnitField","label","readOnly","ChoiceBox","items","item","ReadonlyField","UnitField","setValue","field","props","NumberField","renderLabel","rowsCache","WeakMap","getRows","labels","has","names","Object","keys","rows","count","length","i","row","ModuleRecord","first","second","ModuleFields","DimBatteries","DimOnduleur","InverterModels","join","DimFieldsR","formatExponentialNumber","toExponential","F","E","Cables","getTimeStamp","Date","now","padInt","toString","padStart","formatDateStamp","stamp","date","getDate","getMonth","getFullYear","getHours","getMinutes","Report","setStamp","setInterval","clearInterval","PVPuissanceProduite","PVNombreSerie","PVNombreParallel","PVNombreTotal","BatCapacite","BatNombreSerie","BatNombreParallel","BatNombreTotal","RegCapacite","RegNombre","OndCapacite","OndBesoinEntre","undefined","OndNombre","CablePVReg","CableBatsOnd","CableOndCharge","print","width","replace","rowSpan","find","data-toggle","href","ProjectView","match","params","ProjectList","useSave","ref","toggle","removeItem","location","reload","pvId","battrieId","inverterId","regulatorId","Regulateurs","save","minWidth","splice","Onduleurs","Batteries","ModelsView","AppContent","exact","path","component","App","store","basename","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4NAAO,SAASA,EAASC,GACvB,OAAY,MAALA,GAAaC,SAASD,GAAKA,EAAIE,IAGjC,SAASF,EAAEA,GAA0C,IAAvBG,EAAsB,uDAAd,EAAGC,EAAW,uDAAJ,GAErD,OADAA,EAAOA,GAAI,WAAQA,EAAKC,QACZ,MAALL,GAAaC,SAASD,IACxBG,EAAQH,EAAEM,QAAQH,GAASH,GAAKI,EACjC,MAGC,SAASG,EAAWP,GACzB,MAAM,GAAN,QAAe,IAAJA,GAASM,QAAQ,GAA5B,KCUF,IA8WgBE,EA9WVC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAiBH,GA6WPD,EA5WLK,KAAKC,MAAML,GA6Wb,CACLM,SAAUC,YACRR,EAAMO,SAASE,KAAI,SAACC,GAAD,mBAAC,eACfA,GADc,IAEjBC,MAAOH,YAAKE,EAAQC,eAhXxB,CACEJ,SAAUC,eAGT,SAASI,EAAsBpB,GAEpC,OADAA,EAAEqB,OAASrB,EAAEsB,QAAUtB,EAAEuB,kBAAoBvB,EAAEwB,SAAWxB,EAAEyB,OAAS,KAC9DzB,EAGT,SAAS0B,EAA8BC,EAAeC,GACpD,OAAOD,EAAQC,EAAKP,OAGtB,SAASQ,EAAoCF,EAAeC,GAC1D,OAAOD,EAAQC,EAAKL,kBAGtB,SAASO,EAAqBX,GAC5B,OAAOA,EAAMY,OAAOL,EAA+B,GAGrD,SAASM,EAA2Bb,GAClC,OAAOA,EAAMY,OAAOF,EAAqC,GAG3D,IAAII,EAAYrB,EAAQG,SAASgB,QAAO,SAACG,EAAShB,GAChD,OAAOiB,KAAKC,IAAIF,EAAShB,EAAQmB,GAAK,KACrC,GAkBH,IAAMC,EAAY5B,aAAaC,QAAQ,aAC1B4B,EAAiCD,EAC1CzB,KAAKC,MAAMwB,GACX,CACE,CACEE,MAAO,WACPC,OAAQ,QACRC,KAAM,GACNC,KAAM,IACNC,SAAG,KAEL,CACEJ,MAAO,qBACPC,OAAQ,UACRC,KAAM,GACNC,KAAM,IACNC,SAAG,KAEL,CACEJ,MAAO,aACPC,OAAQ,QACRC,KAAM,GACNC,KAAM,IACNC,SAAG,MAILC,EAAKnC,aAAaC,QAAQ,MACnBmC,EAAuBD,EAChChC,KAAKC,MAAM+B,GACX,CACE,CACEE,KAAM,kBACNC,KAAM,kBACNC,IAAK,KACLC,IAAK,GACLC,GAAI,IACJC,IAAK,KACLC,IAAK,IACLC,OAAQ,MACRC,WAAY,EAAE,GAAI,KAEpB,CACER,KAAM,gBACNI,GAAI,IACJF,IAAK,KACLG,IAAK,IACLF,IAAK,KACLG,IAAK,KACLC,OAAQ,MACRC,WAAY,EAAE,GAAI,IAClBP,KAAM,mBAER,CACED,KAAM,cACNI,GAAI,IACJF,IAAK,KACLG,IAAK,KACLF,IAAK,KACLG,IAAK,KACLC,OAAQ,KACRC,WAAY,EAAE,GAAI,IAClBP,KAAM,oBAIRQ,EAAY9C,aAAaC,QAAQ,aAC1B8C,EAAmCD,EAC5C3C,KAAKC,MAAM0C,GACX,CACE,CACEf,OAAQ,qBACRiB,KAAM,GACNC,MAAO,CAAC,IAAK,KACbC,KAAM,IACNhB,SAAG,KAEL,CACEH,OAAQ,UACRiB,KAAM,EACNC,MAAO,CAAC,IAAK,KACbC,KAAM,IACNhB,SAAG,MAILiB,EAAanD,aAAaC,QAAQ,cAC3BmD,EAAsCD,EAC/ChD,KAAKC,MAAM+C,GACX,CACE,CACEd,KAAM,yBACNgB,EAAG,GACHC,KAAM,KAMDC,EAAI,SAEjB,SAASC,EAAMH,EAAWI,EAAWC,GACnC,OAAeH,EAAIF,EAAII,EAAKC,EAArB,IAGT,SAASC,EAAOC,GACd,MAAO,IAAOA,EAWhB,IAAMC,EAAQpC,KAAKqC,KAAK,GAOjB,IAAMC,EAAMJ,EANL,KAYd,SAASK,EAAoBxD,GAC3B,IAjJmByD,EAAYC,EAAYC,EAAeC,EAiJpDC,EAAU7D,EAAQ6D,QAElBC,EAAM9D,EAAQ8D,IAnJDL,EAoJjBzD,EAAQ+D,kBApJqBL,EAqJ7B1D,EAAQ0D,QArJiCC,EAsJzC3D,EAAQ2D,MAtJgDC,EAuJxD5D,EAAQ4D,MAtJFH,GAAMC,EAAKC,EAAQC,GAHjB,GA4JJI,EAAKpC,EAAU5B,EAAQiE,QAEvB/B,EAAMrD,EAAQ,OAACmF,QAAD,IAACA,OAAD,EAACA,EAAI9B,KAEnBgC,EAAOlE,EAAQkE,IAAMjD,KAAKkD,KAAKN,EAAUhF,EAAQ,OAACmF,QAAD,IAACA,OAAD,EAACA,EAAIhC,MACtDoC,EAAOpE,EAAQoE,IAAMnD,KAAKkD,KAAM,IAAOL,GAAOI,EAAMrF,EAAQ,OAACmF,QAAD,IAACA,OAAD,EAACA,EAAI/B,MAEvEjC,EAAQqE,GAAKD,EAAMF,EAEnB,IAAMI,EAAKtE,EAAQsE,GACbC,EAASvE,EAAQuE,OACjBC,EAAOxE,EAAQwE,UAEfC,EAAUpD,EAAerB,EAAQyE,SACjCC,EAAWnC,EAAgBvC,EAAQ0E,UAEnCC,EAAM3E,EAAQ2E,GAtKtB,SACEL,EACAb,EACAc,EACAV,EACAW,GAEA,OAAa,IAALF,EAAYb,GAAOc,EAASV,EAAUW,GA+JrBI,CACvBN,EACAtE,EAAQ+D,kBACRQ,EACAV,EACAW,GAGIK,EAAM7E,EAAQ6E,GAAK5D,KAAKkD,KAAKQ,EAAK9F,EAAQ,OAAC4F,QAAD,IAACA,OAAD,EAACA,EAAShD,OACpDqD,EAAO9E,EAAQ8E,IAAM7D,KAAKkD,KAAKN,EAAUhF,EAAQ,OAAC4F,QAAD,IAACA,OAAD,EAACA,EAASjD,OACjExB,EAAQ+E,IAAM9D,KAAK+D,MAAMH,EAAKC,GAE9B9E,EAAQiF,GAAmB,KAAbjF,EAAQkF,GAAa,IACnClF,EAAQmF,eAAiBlE,KAAKC,IAC5B,EACAD,KAAKmE,MAAMpF,EAAQiF,GAAKpG,EAAQ,OAAC6F,QAAD,IAACA,OAAD,EAACA,EAAUlC,QAG7C,IAAM6C,EAAUrF,EAAQqF,OAASnD,EAAMkC,EAAM,KAEvCkB,EAAa1C,EAAiB5C,EAAQuF,WAE5CvF,EAAQwF,GAAKvE,KAAKkD,KAAKkB,EAASxG,EAAQ,OAACyG,QAAD,IAACA,OAAD,EAACA,EAAYzC,IAErD,IAAMd,EAAMlD,EAAQ,OAACmF,QAAD,IAACA,OAAD,EAACA,EAAIjC,KACnB0D,EAAY5G,EAAQ,OAAC4F,QAAD,IAACA,OAAD,EAACA,EAAS/C,QAC9BuD,EAAKpG,EAAQ,OAAC6F,QAAD,IAACA,OAAD,EAACA,EAAUlC,MAExBkD,EAAM1F,EAAQ0F,IACdC,EAAM3F,EAAQ2F,IACdC,EAAM5F,EAAQ4F,IAEdC,EAAQ7F,EAAQ8F,IA/ExB,SAAkB/D,EAAamC,GAC7B,OAAOf,EAAOpB,EAAMmC,EAAM,MA8EE6B,CAAShE,EAAKmC,GAC1ClE,EAAQgG,IAAMhD,EAAMqC,EAAQK,EAAKG,GACjC,IAAMI,EAAOjG,EAAQiG,IA7EvB,SAAiBhB,EAAYvD,EAAWmC,GACtC,OAAQ,IAAOoB,GAAOvD,EAAImC,GA4ECqC,CAAQjB,EAAIQ,EAAW5B,GAC5CsC,EAAOnG,EAAQmG,IAAMhD,EAAOU,GAClC7D,EAAQoG,IAAMpD,EAAMiD,EAAKN,EAAKQ,GAC9B,IAAME,EAAOrG,EAAQqG,IAzEvB,SAAiBpB,GACf,OAAQ,IAAOA,GAHH,IAGkB5B,GAwEHiD,CAAQrB,GAGnC,OAFAjF,EAAQuG,IAAMvD,EAAMqD,EAAKT,EAAKrC,GAEvBvD,EAGT,SAASwG,IAAkD,IAA1ClH,EAAyC,uDAAjCI,EAAS+G,EAAwB,uCACxD,OAAQA,EAAO3E,MACb,IAAK,cAAgB,IAAD,EACU2E,EAAOC,QAA3BvF,EADU,EACVA,GAAIU,EADM,EACNA,KAAM8E,EADA,EACAA,MAEZ3G,EAAO,2BACRV,EAAMO,SAAS+G,IAAIzF,IADX,kBAEVU,EAAO8E,IAGV,OAAO,2BACFrH,GADL,IAEEO,SAAUP,EAAMO,SAASgH,IAAI1F,EAAIqC,EAAoBxD,MAGzD,IAAK,oBAAsB,IAAD,EACFyG,EAAOC,QAArBvF,EADgB,EAChBA,GAAIlB,EADY,EACZA,MACN6G,EAASxH,EAAMO,SAAS+G,IAAIzF,GAC5B4F,EAAS9G,EAAMF,KAAI,SAACW,GAAD,OAAUR,EAAsB,eAAKQ,OAC9D,OAAO,2BACFpB,GADL,IAEEO,SAAUP,EAAMO,SAASgH,IACvB1F,EACAqC,EAAoB,2BACfsD,GADc,IAEjB7G,MAAO8G,EACPhD,kBAAmBnD,EAAqBmG,GACxC7B,GAAIpE,EAA2BiG,SAKvC,IAAK,iBAAmB,IACd5F,EAAOsF,EAAOC,QAAdvF,GACR,OAAO,2BACF7B,GADL,IAEEO,SAAUP,EAAMO,SAASmH,QAAO,SAAChH,GAC/B,OAAOA,EAAQmB,KAAOA,OAI5B,IAAK,eAAiB,IAAD,EACQsF,EAAOC,QAA1BvF,EADW,EACXA,GAAIU,EADO,EACPA,KAAMoF,EADC,EACDA,KAClB,OAAO,2BACF3H,GADL,IAEEO,SAAUP,EAAMO,SAASgH,IAAI1F,EAAnB,2BACL7B,EAAMO,SAAS+G,IAAIzF,IADd,IAERA,KACAU,OACAoF,YAIN,IAAK,iBAAmB,IAAD,EACER,EAAOC,QAAtB7E,EADa,EACbA,KAAMoF,EADO,EACPA,KACd,OAAO,2BACF3H,GADL,IAEEO,SAAUP,EAAMO,SAASqH,KAAK,CAC5B/F,GAAIJ,IACJc,OACAoF,OACAhH,MAAOH,cACPiE,kBAAmB,EACnBmB,GAAI,EACJtB,MAAO,EACPD,MAAO,EACPS,IAAK,EACLF,IAAK,EACLG,GAAI,EACJP,GAAI,EACJD,QAAS,EACTI,QAAS,EACTQ,SAAU,EACVC,UAAW,EACXa,WAAY,EACZ7B,UAAI,EACJY,GAAI,EACJC,OAAQ,IACRC,YAAM,IACNG,GAAI,EACJI,IAAK,EACLD,IAAK,EACLD,GAAI,EACJI,GAAI,EACJE,eAAgBnG,IAChBqG,OAAQ,EACRG,GAAI,EACJE,IAAK,EACLI,IAAK9G,IACLgH,IAAKhH,IACL2G,IAAK,EACLM,IAAKjH,IACLmH,IAAKnH,IACLoH,IAAKpH,IACL4G,IAAK,EACLS,IAAKrH,IACLuH,IAAKvH,QAIX,QACE,OAAOM,GAIb,SAAS6H,EAAO7H,GACd,MAAO,CACLO,SAAUP,EAAMO,SACbE,KACC,SAACC,GAAD,mBAAC,eAEMA,GAFP,IAGIC,MAAOD,EAAQC,MAAMmH,eAG1BA,WA5LP1H,EAAQG,SAAWH,EAAQG,SAASE,KAAI,SAACC,GACvC,OAAOwD,EAAoBxD,MA0Md,IC7YAqH,eD6YA,WAA6C,IAAnC/H,EAAkC,uDAA1BI,EAAS+G,EAAiB,uCACnDa,EAAOd,EAAQlH,EAAOmH,GAE5B,OADAjH,aAAa+H,QAAQ,QAAS5H,KAAK6H,UAAUL,EAAOG,KAC7CA,K,eE7YT,SAASG,IACPC,SAASC,MAHE,gBAME,SAASC,IAEtB,OADAC,oBAAUJ,GAER,yBAAKK,UAAU,+DACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBACrB,yBACEE,IAAKC,kCACLC,OAAO,KACPC,IAAI,oB,ICTXC,E,wBAAAA,O,mBAAAA,I,6BAAAA,I,kCAAAA,M,KAML,IAAMC,EAAa,CAAC,6BAA2B,WAAY,YAE5CC,eACb,SAAChJ,EAAD,GACE,MAAO,CACLiJ,QAFgD,EAAnCA,QAGb1I,SAAUP,EAAMO,YAGpB,CACE2I,OCmCG,SAAuB3G,EAAcoF,GAC1C,MAAO,CAAEnF,KAAM,iBAAkB4E,QAAS,CAAE7E,OAAMoF,UDnChDwB,KCsCG,SACLtH,EACAU,EACAoF,GAEA,MAAO,CAAEnF,KAAM,eAAgB4E,QAAS,CAAEvF,KAAIU,OAAMoF,UD1ClDyB,OC6CG,SAAuBvH,GAC5B,MAAO,CAAEW,KAAM,iBAAkB4E,QAAS,CAAEvF,SDxD/BmH,EAYb,YAYE,IAXFC,EAWC,EAXDA,QACA1I,EAUC,EAVDA,SACA2I,EASC,EATDA,OACAC,EAQC,EARDA,KACAC,EAOC,EAPDA,OAOC,EACuBC,mBAAS,IADhC,mBACM9G,EADN,KACY+G,EADZ,OAEuBD,mBAAS,IAFhC,mBAEM1B,EAFN,KAEY4B,EAFZ,OAGyBF,mBAASP,EAAiBU,QAHnD,mBAGMxJ,EAHN,KAGayJ,EAHb,OAIiCJ,oBAAU,GAJ3C,mBAIM5H,EAJN,KAIiBiI,EAJjB,KAMD,OACE,oCACE,yBAAKlB,UAAU,iDACZjI,EAASE,KAAI,SAACC,GACb,OACE,kBAAC,IAAD,CACE+H,GAAE,aAAQ/H,EAAQmB,IAClB2G,UAAS,iDACPxI,IAAU8I,EAAiBU,OAAS,WAAa,GAD1C,YAGPP,IAAYvI,EAAQmB,GAAK,iCAAmC,IAE9D8H,IAAKjJ,EAAQmB,IAEb,yBAAK2G,UAAU,qDACb,4BACG9H,EAAQ6B,KACT,2BACEiG,UAAU,oBACVoB,OAAyB,KAAjBlJ,EAAQiH,MAEf,IAJH,IAKIjH,EAAQiH,KALZ,MAQF,yBAAKa,UAAU,0BACb,4BACEhG,KAAK,SACLgG,UAAU,MACVoB,OAAQ5J,IAAU8I,EAAiBU,OACnCK,QAAS,SAACC,GAENC,OAAOC,QACL,gDAGFF,EAAEG,kBACFb,EAAO1I,EAAQmB,IACfqI,uBAAsB,WACpBR,EAAaT,SAKnB,0BAAMkB,KAAK,MAAMC,aAAW,aAA5B,WAIF,4BACE5H,KAAK,SACLgG,UAAU,MACVoB,OAAQ5J,IAAU8I,EAAiBU,OACnCK,QAAS,WACPH,EAAahJ,EAAQmB,IACrByH,EAAQ5I,EAAQ6B,MAChBgH,EAAQ7I,EAAQiH,MAChB8B,EAASX,EAAiBuB,eAG5B,0BAAMF,KAAK,MAAMC,aAAW,YAA5B,wBAUd,0BAAM5B,UAAU,gBACd,yBAAKoB,OAAQ5J,IAAU8I,EAAiBU,QACtC,yBAAKhB,UAAU,OACb,2BAAOA,UAAU,wBAAjB,kBACA,yBAAKA,UAAU,SACb,2BACEhG,KAAK,OACL6E,MAAO9E,EACPiG,UAAU,+BACV8B,SAAU,SAACR,GAAD,OAAOR,EAAQQ,EAAES,OAAOlD,YAIxC,yBAAKmB,UAAU,OACb,2BAAOA,UAAU,wBAAjB,mBACA,yBAAKA,UAAU,SACb,2BACEhG,KAAK,OACL6E,MAAOM,EACPa,UAAU,+BACV8B,SAAU,SAACR,GAAD,OAAOP,EAAQO,EAAES,OAAOlD,aAK1C,yBAAKmB,UAAU,sCACb,4BACEhG,KAAK,SACLgG,UAAU,mCACVoB,OAAQ5J,IAAU8I,EAAiBU,OACnCK,QAAS,WACPJ,EAASX,EAAiBU,UAL9B,WAUA,4BACEhH,KAAK,SACLgG,UAAU,iCACVqB,QAAS,SAACC,GAER,OADAA,EAAEU,iBACMxK,GACN,KAAK8I,EAAiBU,OAIpB,OAHAF,EAAQ,IACRC,EAAQ,SACRE,EAASX,EAAiB2B,eAG5B,KAAK3B,EAAiB2B,cAGpB,OAFAvB,EAAO3G,EAAMoF,QACb8B,EAASX,EAAiBU,QAG5B,KAAKV,EAAiBuB,YAGpB,OAFAlB,EAAK1H,EAAWc,EAAMoF,QACtB8B,EAASX,EAAiBU,WAM/BT,EAAW/I,U,iCEzKjB,SAAe0K,EAAtB,mC,8CAAO,WAA2BC,GAA3B,uBAAAC,EAAA,6DAICF,EAEJX,OAAOW,cAAgBX,OAAOW,YAAcG,MANzC,SAOeH,EAAYC,GAP3B,UAOCG,EAPD,QAQDH,EAAQI,SARP,yCASID,GATJ,aAWgBE,MAAMC,KAAKH,GAX3B,gDAWQI,EAXR,uBAYMA,GAZN,wE,sBAiBP,SAASL,KACP,IAAMM,EAAQ/C,SAASgD,cAAc,SACrCD,EAAM3I,KAAO,OACb,IAAM6I,EAAOjD,SAASgD,cAAc,QAIpC,OAHAC,EAAKC,YAAYH,GACjBE,EAAKzB,QAAS,EACdxB,SAASmD,KAAKD,YAAYD,GACnB,YAMA,IAAD,IALJG,cAKI,MALK,GAKL,MAJJT,gBAII,SAGJ,OAFAI,EAAMK,OAASA,EACfL,EAAMJ,SAAWA,EACV,IAAIU,SAAkB,SAACC,EAASC,GACrCN,EAAKO,QACLT,EAAMU,QACNV,EAAMW,SAAW,WACI,MAAfX,EAAML,MAAea,EAAO,qBAC3BD,EAAQP,EAAML,OACnBK,EAAMW,SAAW,UC/ClB,SAASC,GACdC,EACAC,GAQM,IAAD,yDADD,GACC,IANHC,iBAMG,MANS,KAMT,MALHC,iBAKG,MALS,SAKT,EACL,OAAOH,EACJnM,OACAuM,MAAMF,GACNzL,KAAI,SAAC4L,GAAD,OAAUA,EAAKxM,UACnB6H,QAAO,SAAC4E,GAAD,OAAOA,KACd7L,KAAI,SAAC4L,GACJ,IACE,OAAOJ,EAAOI,EAAKD,MAAMD,GAAW1L,KAAI,SAAC4G,GAAD,OAAWA,EAAMxH,WACzD,MAAOiK,GAEP,OADAyC,QAAQC,KAAK1C,GACN,SAGVpC,QAAO,SAAC4E,GAAD,OAAOA,KCfnB,SAASG,GAAuBtL,EAAoBC,GAMlD,OALAD,EAAMJ,mBAAqBK,EAAKL,kBAChCI,EAAMH,UAAYI,EAAKJ,SACvBG,EAAMN,QAAUO,EAAKP,OACrBM,EAAML,OAASM,EAAKN,MACpBK,EAAMF,OAASG,EAAKH,MACbE,EAmET,SAASuL,GAAiBtL,GACxB,OAAQA,EAAKuL,SAGA,SAASC,GAAT,GAQX,IAPF3D,EAOC,EAPDA,QACAtI,EAMC,EANDA,MACAkM,EAKC,EALDA,SAMM1L,EAAQR,EAAMY,OAAOkL,GAAwB,CACjDlK,KAAM,QACN1B,OAAQ,EACRC,MAAO,EACPG,MAAO,EACPF,kBAAmB,EACnBC,SAAU,EACV2L,UAAU,IAGZ,OACE,oCACE,yBAAKnE,UAAU,oBACb,2BAAOA,UAAU,uDACf,+BACE,4BACE,wBAAIA,UAAU,gBAAd,wBACA,wBAAIsE,MAAM,MAAMzE,MAAM,uBAAtB,cAGA,wBAAIyE,MAAM,MAAMzE,MAAM,0CAAtB,qBAGA,wBAAIyE,MAAM,MAAMzE,MAAM,uCAAtB,eAGA,wBAAIyE,MAAM,MAAMzE,MAAM,yCAAtB,iBAGA,wBAAIyE,MAAM,MAAMzE,MAAM,yCAAtB,6BAGA,wBACEyE,MAAM,MACNzE,MAAM,qEAFR,qBAQH1H,EAAMoM,MAAQ,EACb,oCACE,+BACGpM,EAAMF,KAAI,SAACW,EAAM4L,GAAP,OACT,wBACErD,IAAKqD,EACLC,UAAW,EACXC,MAAO,CACLC,OAAQ,WAEV3E,UAAWpH,EAAKmB,KAAO,GAAK,gBAC5BsH,QAAS,SAACC,GAEiB,OAArBA,EAAES,OAAO6C,SACbP,EAAS5D,EA1F/B,SAA4BtI,EAA0BqM,GACpD,IAAM5L,EAAOT,EAAM2G,IAAI0F,GACvB,OAAOrM,EAAM4G,IACXyF,EACApM,EAAsB,2BACjBQ,GADgB,IAEnBuL,UAAWvL,EAAKuL,aAoFkBU,CAAmB1M,EAAOqM,MAG9C,wBAAIxE,UAAU,gBACXpH,EAAKuL,SACJ,0BACExC,KAAK,MACLC,aAAW,iBACX8C,MAAO,CACLI,WAAY,OACZC,cAAe,OACfC,YAAa,SANjB,gBAWE,MAEN,4BACE,2BACEhL,KAAK,OACLgG,UAAU,yBACVnB,MAAOjG,EAAKmB,KACZ+H,SAAU,SAACR,GAAD,OACR+C,EACE5D,EA5J5B,SAAqBtI,EAA0BqM,EAAezK,GAC5D,OAAO5B,EAAM4G,IAAIyF,EAAV,2BACFrM,EAAM2G,IAAI0F,IADR,IAELzK,UA0JwBkL,CAAY9M,EAAOqM,EAAOlD,EAAES,OAAOlD,YAK3C,4BACE,2BACE7E,KAAK,SACLkL,IAAI,IACJ9L,IAAI,KACJ+L,KAAK,IACLnF,UAAU,yBACVnB,MAAO1F,KAAKmE,MAAM1E,EAAKN,OACvBwJ,SAAU,SAACR,GAAD,OACR+C,EACE5D,EA7I5B,SAAsBtI,EAA0BqM,EAAelM,GAC7D,OAAOH,EAAM4G,IACXyF,EACApM,EAAsB,2BACjBD,EAAM2G,IAAI0F,IADM,IAEnBlM,YAyIsB8M,CAAajN,EAAOqM,EAAOlD,EAAES,OAAOsD,oBAK5C,4BACE,2BACErL,KAAK,SACLkL,IAAI,IACJC,KAAK,IACLnF,UAAU,yBACVnB,MAAO1F,KAAKmE,MAAM1E,EAAKJ,UACvBsJ,SAAU,SAACR,GAAD,OACR+C,EACE5D,EApL5B,SACEtI,EACAqM,EACAhM,GAEA,OAAOL,EAAM4G,IACXyF,EACApM,EAAsB,2BACjBD,EAAM2G,IAAI0F,IADM,IAEnBhM,eA4KsB8M,CACEnN,EACAqM,EACAlD,EAAES,OAAOsD,oBAMnB,4BACE,2BACErL,KAAK,SACLkL,IAAI,IACJC,KAAK,OACLnF,UAAU,yBACVnB,MAAOjG,EAAKH,MACZqJ,SAAU,SAACR,GAAD,OACR+C,EACE5D,EAzL5B,SAAsBtI,EAA0BqM,EAAe/L,GAC7D,OAAON,EAAM4G,IACXyF,EACApM,EAAsB,2BACjBD,EAAM2G,IAAI0F,IADM,IAEnB/L,YAqLsB8M,CAAapN,EAAOqM,EAAOlD,EAAES,OAAOsD,oBAK5C,4BAAKzM,EAAKL,mBACV,4BAAKK,EAAKP,OAAOf,QAAQ,SAI/B,+BACE,4BACE,wBAAI0I,UAAU,iBACd,wBAAIsE,MAAM,OAAV,SACA,4BAAKnL,KAAKmE,MAAM3E,EAAOL,QACvB,4BAAKa,KAAKmE,MAAM3E,EAAOH,WACvB,4BAAKG,EAAOF,MAAMnB,QAAQ,IAC1B,4BAAKqB,EAAOJ,kBAAkBjB,QAAQ,IACtC,4BAAKqB,EAAON,OAAOf,QAAQ,OAI/B,OAGR,yBAAK0I,UAAU,6DACb,4BACEwF,SAAUrN,EAAMsN,MAAMvB,IACtB7C,QAAS,WACHE,OAAOC,QAAQ,gDACjB6C,EAAS5D,EAAStI,EAAM+G,OAAOgF,MAGnClK,KAAK,SACLgG,UAAU,iBACVH,MAAM,0BATR,aAaA,4BACEwB,QAAO,sBAAE,gCAAAe,EAAA,+EAEcF,EAAY,CAC7Bc,OAAQ,OACRT,UAAU,IAJP,cAECG,EAFD,gBAOiBA,EAAKgD,OAPtB,OAOClC,EAPD,OAQCmC,EAAwBpC,GAC5BC,GACA,gBCnRM3E,EAAeqG,EAAa9L,EDmRlC,mBAAEW,EAAF,KAAQzB,EAAR,KAAeE,EAAf,KAAyBC,EAAzB,YACEL,EAAsB,CACpB2B,OACAzB,OCtREuG,EDsRW+G,SAAStN,GCtRL4M,EDsRa,ECtRA9L,EDsRG,GCrR5CD,KAAK+L,IAAI9L,EAAKD,KAAKC,IAAI8L,EAAKrG,KDsRjBrG,SAAUW,KAAKC,IAAI,EAAGwM,SAASpN,IAC/BC,MAAOU,KAAKC,IAAI,EAAGyM,WAAWpN,IAC9B0L,UAAU,OAGhBE,EAAS5D,EAAStI,EAAMiH,KAAN,MAAAjH,EAAK,YAASwN,KAnB3B,kDAqBL5B,QAAQC,KAAR,MArBK,0DAwBThK,KAAK,SACLgG,UAAU,mBA1BZ,YA8BA,4BACEqB,QAAS,kBAAMgD,EAAS5D,EAjOlC,SAAiBtI,GACf,OAAOA,EAAMiH,KACXhH,EAAsB,CACpB2B,KAAM,GACNzB,MAAO,EACPG,MAAO,EACPD,SAAU,EACV2L,UAAU,KA0N2B2B,CAAQ3N,KACzC6B,KAAK,SACLgG,UAAU,mBAHZ,aEpSO,SAAS+F,GAAT,GAQX,IAPFC,EAOC,EAPDA,MACAnH,EAMC,EANDA,MACAzH,EAKC,EALDA,KAMA,OACE,yBAAK4I,UAAU,YACb,2BAAOA,UAAU,uCACG,kBAAVgG,EAAqBA,EAAQA,IADvC,KAGA,yBAAKhG,UAAU,YACb,yBAAKA,UAAU,eACb,2BACEhG,KAAK,OACL6E,MAAOA,EACPoH,UAAQ,EACRjG,UAAU,iCAEZ,0BAAMA,UAAU,oBAAoB5I,MCjB/B,SAAS8O,GAAT,GAUX,IATFF,EASC,EATDA,MACAG,EAQC,EARDA,MACAtH,EAOC,EAPDA,MACAiD,EAMC,EANDA,SAOA,OACE,yBAAK9B,UAAU,YACb,2BAAOA,UAAU,uCAAuCgG,EAAxD,KACA,yBAAKhG,UAAU,YACb,yBAAKA,UAAU,eACb,4BACEA,UAAU,6BACVnB,MAAOA,EACPiD,SAAU,SAACR,GAAD,OAAOQ,EAAS8D,SAAStE,EAAES,OAAOlD,MAAO,OAEnD,4BAAQA,OAAQ,IACfsH,EAAMlO,KAAI,SAACmO,EAAM5B,GAChB,OACE,4BAAQrD,IAAKqD,EAAO3F,MAAO2F,GACxB4B,EAAKrM,UAKd,kBAAC,IAAD,CAAMkG,GAAG,UAAUD,UAAU,oCAA7B,aCnCK,SAASqG,GAAT,GAMX,IALFL,EAKC,EALDA,MACAnH,EAIC,EAJDA,MAKA,OACE,yBAAKmB,UAAU,YACb,2BAAOA,UAAU,uCAAuCgG,EAAxD,KACA,yBAAKhG,UAAU,YACb,2BACEhG,KAAK,OACLgG,UAAU,+BACViG,UAAQ,EACRpH,MAAOA,M,aCfF,SAASyH,GAAT,GAWX,IAVFzH,EAUC,EAVDA,MACA0H,EASC,EATDA,SACAC,EAQC,EARDA,MACApP,EAOC,EAPDA,KACGqP,EAMF,oDACD,OACE,yBAAKzG,UAAU,YACb,2BAAOA,UAAU,uCACG,kBAAVwG,EAAqBA,EAAQA,IADvC,KAGA,yBAAKxG,UAAU,YACb,yBAAKA,UAAU,oBACb,yCACEhG,KAAK,SACL6E,MAAOA,EACPiD,SAAU,SAACR,GAAD,OAAOiF,EAASjF,EAAES,OAAOsD,gBACnCrF,UAAU,gCACNyG,IAEN,0BAAMzG,UAAU,oBAAoB5I,MC1B/B,SAASsP,GAAT,GASX,IARF7H,EAQC,EARDA,MACA0H,EAOC,EAPDA,SACAC,EAMC,EANDA,MACGC,EAKF,6CACD,OACE,yBAAKzG,UAAU,YACb,2BAAOA,UAAU,uCACG,kBAAVwG,EAAqBA,EAAQA,IADvC,KAGA,yBAAKxG,UAAU,YACb,yCACEhG,KAAK,SACL6E,MAAOA,EACPiD,SAAU,SAACR,GAAD,OAAOiF,EAASjF,EAAES,OAAOsD,gBACnCrF,UAAU,gCACNyG,MCVd,SAASE,GAAYX,GACnB,MAAwB,kBAAVA,EAAqBA,EAAQA,IAG7C,IAAMY,GAAY,IAAIC,QAEtB,SAASC,GAAQC,GACf,GAAIH,GAAUI,IAAID,GAAS,OAAOH,GAAU9H,IAAIiI,GAMhD,IALA,IAAME,EAAQC,OAAOC,KAAKJ,GACpBpB,EAASuB,OAAOvB,OAAOoB,GACvBK,EAAyB,GACzBC,EAAQJ,EAAMK,OAEXC,EAAI,EAAGA,EAAIF,EAAOE,GAAK,EAAG,CACjC,IAAMC,EAAe,GACrBA,EAAIpI,KAAK,CACPrF,KAAMkN,EAAMM,GACZvB,MAAOL,EAAO4B,KAEZA,IAAMF,EAAQ,GAChBG,EAAIpI,KAAK,CACPrF,KAAMkN,EAAMM,EAAI,GAChBvB,MAAOL,EAAO4B,EAAI,KAGtBH,EAAKhI,KAAKoI,GAGZ,OADAZ,GAAU7H,IAAIgI,EAAQK,GACfA,EAGT,SAASK,GAAT,GAMI,IALFtL,EAKC,EALDA,OACAiL,EAIC,EAJDA,KAKA,OACE,oCACGA,EAAKnP,KAAI,WAAkBuM,GAAW,IAAD,mBAA1BkD,EAA0B,KAAnBC,EAAmB,KACpC,OACE,yBAAK3H,UAAU,WAAWmB,IAAKqD,GAC7B,yBAAKxE,UAAU,YACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,aAAa2G,GAAYe,EAAM1B,OAA9C,KACA,yBAAKhG,UAAU,wBAAwB7D,EAAOuL,EAAM3N,SAGvD4N,EACC,yBAAK3H,UAAU,YACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,aAAa2G,GAAYgB,EAAO3B,OAA/C,KACA,yBAAKhG,UAAU,wBACZ7D,EAAOwL,EAAO5N,SAInB,UAQD,SAAS6N,GAAT,GAMX,IALFzL,EAKC,EALDA,OACA4K,EAIC,EAJDA,OAKA,OACE,yBAAK/G,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACZ,IACA7D,EACC,kBAACsL,GAAD,CAActL,OAAQA,EAAQiL,KAAMN,GAAQC,KAE5C,2BACC,QCnFf,IAAMA,GAAS,CACb/M,KAAM,OACNG,GAAI,gBACJF,IAAK,4BACLG,IAAK,2BACLF,IAAK,2BACLG,IAAK,4BAGQ,SAAS6B,GAAT,GAMX,IALFhE,EAKC,EALDA,QACAqO,EAIC,EAJDA,SAKMrK,EAAKpC,EAAU5B,EAAQiE,QAE7B,OACE,oCACE,kBAAC4J,GAAD,CACEC,MAAM,eACNnH,MAAO7H,EAAEkB,EAAQ+D,kBAAmB,GACpC7E,KAAK,UAEP,kBAACsP,GAAD,CACEF,MAAO,kBACL,wCACG,uCAGL3H,MAAO7H,EAAEkB,EAAQ4D,OACjBoJ,IAAK,EACLC,KAAM,IACNoB,SAAU,SAAC1H,GAAD,OAAW0H,EAAS,QAAS1H,MAEzC,kBAAC6H,GAAD,CACEF,MAAO,kBACL,wCACG,uCAGL3H,MAAO7H,EAAEkB,EAAQ2D,OACjBqJ,IAAK,EACLC,KAAM,IACNoB,SAAU,SAAC1H,GAAD,OAAW0H,EAAS,QAAS1H,MAEzC,kBAAC6H,GAAD,CACEF,MAAM,yBACN3H,MAAO7H,EAAEkB,EAAQ0D,SACjBsJ,IAAK,EACLC,KAAM,IACNoB,SAAU,SAAC1H,GAAD,OAAW0H,EAAS,UAAM1H,MAEtC,6BACA,kBAACkH,GAAD,CACEC,MAAM,2BACNnH,MAAO7H,EAAEkB,EAAQ8D,GAAI,GACrB5E,KAAK,OAEP,kBAAC8O,GAAD,CACEF,MAAM,kBACNG,MAAOrM,EACP+E,MAAO3G,EAAQiE,OACf2F,SAAU,SAACjD,GAAD,OAAW0H,EAAS,SAAU1H,MAE1C,kBAAC+I,GAAD,CACEzL,OACED,EACI,CACElC,KAAMkC,EAAGlC,KACTG,GAAG,GAAD,OAAK+B,EAAG/B,GAAR,OACFF,IAAI,GAAD,OAAKiC,EAAGjC,IAAR,MACHG,IAAI,GAAD,OAAK8B,EAAG9B,IAAR,MACHF,IAAI,GAAD,OAAKgC,EAAGhC,IAAR,MACHG,IAAI,GAAD,OAAK6B,EAAG7B,IAAR,OAEL,KAEN0M,OAAQA,KAEV,kBAACT,GAAD,CACEzH,MAAO7H,EAAEkB,EAAQ6D,SACjB3E,KAAK,IACL8N,IAAK,EACL9L,IAAK,GACL+L,KAAM,GACNqB,MAAM,oBACND,SAAU,SAAC1H,GAAD,OAAW0H,EAAS,UAAW1H,MAE3C,kBAACwH,GAAD,CAAeL,MAAM,mBAAmBnH,MAAO7H,EAAEkB,EAAQkE,OACzD,kBAACiK,GAAD,CAAeL,MAAM,sBAAsBnH,MAAO7H,EAAEkB,EAAQoE,OAC5D,kBAAC+J,GAAD,CAAeL,MAAM,0BAA0BnH,MAAO7H,EAAEkB,EAAQqE,OC9FtE,IAAMwK,GAA6C,CACjDvN,MAAO,QACPC,OAAQ,SACRC,KAAM,oBACNC,KAAM,oBACNC,SAAG,aAGU,SAASiO,GAAT,GAMX,IALF3P,EAKC,EALDA,QACAqO,EAIC,EAJDA,SAKM/J,EAAKtE,EAAQsE,GACbC,EAASvE,EAAQuE,OACjBC,EAAOxE,EAAQwE,UAEf8H,EAAQtM,EAAQyE,QAChBA,GAAqB,IAAX6H,EAAe,KAAOjL,EAAeiL,GAE/C3H,EAAK7F,EAAEkB,EAAQ2E,GAAI,GACnBG,EAAM9E,EAAQ8E,IACdC,EAAM/E,EAAQ+E,IACdF,EAAK7E,EAAQ6E,GAEnB,OACE,oCACE,kBAAC2J,GAAD,CACEF,MAAM,KACNtB,IAAK,EACL9L,IAAK,GACLyF,MAAOrC,EACP+J,SAAU,SAAC1H,GAAD,OAAW0H,EAAS,KAAM1H,MAEtC,kBAAC6H,GAAD,CACEF,MAAM,SACNtB,IAAK,IACL9L,IAAK,EACL+L,KAAM,IACNtG,MAAOpC,EACP8J,SAAU,SAAC1H,GAAD,OAAW0H,EAAS,SAAU1H,MAE1C,kBAAC6H,GAAD,CACEF,MAAM,YACNtB,IAAK,IACL9L,IAAK,EACL+L,KAAM,IACNtG,MAAOnC,EACP6J,SAAU,SAAC1H,GAAD,OAAW0H,EAAS,YAAQ1H,MAExC,kBAACkH,GAAD,CACEC,MAAM,qCACNnH,MAAOhC,EACPzF,KAAK,OAEP,kBAAC8O,GAAD,CACEF,MAAM,oBACNlE,SAAU,SAACjD,GAAD,OAAW0H,EAAS,UAAW1H,IACzCA,MAAO3G,EAAQyE,QACfwJ,MAAO5M,EAAetB,KAAI,SAACkE,GAAD,mBAAC,eACtBA,GADqB,IAExBpC,KAAK,GAAD,OAAKoC,EAAOzC,KAAZ,eAAuByC,EAAOxC,KAA9B,eAAyCwC,EAAO1C,eAGxD,kBAACmO,GAAD,CACEb,OAAQA,GACR5K,OACEQ,EACI,CACEnD,MAAOmD,EAAQnD,MACfC,OAAQkD,EAAQlD,OAChBC,KAAK,GAAD,OAAKiD,EAAQjD,KAAb,MACJC,KAAK,GAAD,OAAKgD,EAAQhD,KAAb,OACJC,SAAE,GAAD,OAAKrC,EAAWoF,EAAQ/C,UAE3B,OAGR,kBAACyM,GAAD,CAAeL,MAAM,4BAA4BnH,MAAO7H,EAAE+F,KAC1D,kBAACsJ,GAAD,CAAeL,MAAM,gCAAgCnH,MAAO7H,EAAEgG,KAC9D,kBAACqJ,GAAD,CAAeL,MAAM,kCAAkCnH,MAAO7H,EAAEiG,MClFtE,IAAM8J,GAA8C,CAClDtN,OAAQ,SACRiB,KAAM,qBACNC,MAAO,uBACPC,KAAM,kBACNhB,SAAG,aAGU,SAASkO,GAAT,GAMX,IALF5P,EAKC,EALDA,QACAqO,EAIC,EAJDA,SAKM/B,EAAQtM,EAAQ0E,SAChBA,GAAsB,IAAX4H,EAAe,KAAOuD,EAAevD,GACtD,OACE,oCACE,kBAACuB,GAAD,CACElH,MAAO7H,EAAEkB,EAAQiF,GAAI,GACrB/F,KAAK,KACL4O,MAAM,yBAER,kBAACD,GAAD,CACElH,MAAO7H,EAAEkB,EAAQ6D,QAAS,GAC1B3E,KAAK,IACL4O,MAAM,uBAER,kBAACE,GAAD,CACErH,MAAO2F,EACP1C,SAAU,SAACjD,GAAD,OAAW0H,EAAS,WAAY1H,IAC1CsH,MAAO4B,EAAe9P,KAAI,SAACuB,GAAD,mBAAC,eACtBA,GADqB,IAExBO,KAAK,GAAD,OAAKP,EAAMC,OAAX,cAAuBD,EAAMkB,KAA7B,uBAENsL,MAAM,qBAER,kBAAC4B,GAAD,CACEb,OAAQA,GACR5K,OACES,EACI,CACEnD,OAAQmD,EAASnD,OACjBiB,KAAK,GAAD,OAAKkC,EAASlC,KAAd,QACJC,MAAM,MAAD,OAAQiC,EAASjC,MAAMqN,KAAK,OAA5B,MACLpN,KAAK,GAAD,OAAKgC,EAAShC,KAAd,MACJhB,SAAE,GAAD,OAAKrC,EAAWqF,EAAShD,UAE5B,OAGR,kBAACyM,GAAD,CACExH,MAAO7H,EAAEkB,EAAQmF,gBACjB2I,MAAM,uBCtDd,IAAMe,GAAgD,CACpDhN,KAAM,MACNgB,EAAG,UACHC,KAAM,6BAGO,SAASiN,GAAT,GAMX,IALF/P,EAKC,EALDA,QACAqO,EAIC,EAJDA,SAKM/B,EAAQtM,EAAQuF,UAChBA,GAAuB,IAAX+G,EAAe,KAAO1J,EAAiB0J,GACnD9G,EAAKxF,EAAQwF,GACbH,EAASrF,EAAQqF,OACvB,OACE,oCACE,kBAACwI,GAAD,CACElH,MAAO7H,EAAEuG,EAAQ,GACjBnG,KAAK,IACL4O,MAAO,kBACL,wCACG,0CAIP,kBAACE,GAAD,CACErH,MAAO2F,EACP1C,SAAU,SAACjD,GAAD,OAAW0H,EAAS,YAAa1H,IAC3CsH,MAAOrL,EACPkL,MAAM,wBAER,kBAAC4B,GAAD,CACEb,OAAQA,GACR5K,OACEsB,EACI,CACE1D,KAAM0D,EAAU1D,KAChBgB,EAAE,GAAD,OAAK0C,EAAU1C,EAAf,MACDC,KAAK,GAAD,OAAKyC,EAAUzC,KAAf,OAEN,OAGR,kBAACqL,GAAD,CAAexH,MAAO7H,EAAE0G,GAAKsI,MAAM,0BClDzC,SAASkC,GAAwBpE,GAAY,IAAD,EAC3BA,EAAEqE,cAAc,GAAGvE,MAAM,KADE,mBACnCwE,EADmC,KAChC9G,EADgC,KAEpC+G,EAAIzC,SAAStE,EAAG,IACtB,OACE,oCACG8G,EADH,SACc,6BAAMC,IAKT,SAASC,GAAT,GAMX,IALFpQ,EAKC,EALDA,QACAqO,EAIC,EAJDA,SAKA,OACE,oCACE,yBAAKvG,UAAU,oBACb,2BAAOA,UAAU,2CACf,+BACE,4BACE,6BACA,gDACA,qCACA,qCACA,gCACG,kCADH,QAGA,oCACO,kCADP,OAKJ,+BACE,4BACE,6DACA,4BAAKkI,GAAwBjN,IAC7B,4BACE,2BACEjB,KAAK,SACLkL,IAAI,IACJC,KAAK,OACLnF,UAAU,yBACVnB,MAAO3G,EAAQ0F,IACfkE,SAAU,SAACR,GAAD,OAAOiF,EAAS,MAAOjF,EAAES,OAAOsD,mBAG9C,4BAAKrO,EAAEkB,EAAQqF,OAAQ,IACvB,4BAAKvG,EAAEkB,EAAQ8F,IAAK,IACpB,4BAAKhH,EAAEkB,EAAQgG,IAAK,KAEtB,4BACE,uEACA,4BAAKgK,GAAwBjN,IAC7B,4BACE,2BACEjB,KAAK,SACLkL,IAAI,IACJC,KAAK,OACLnF,UAAU,yBACVnB,MAAO3G,EAAQ2F,IACfiE,SAAU,SAACR,GAAD,OAAOiF,EAAS,MAAOjF,EAAES,OAAOsD,mBAG9C,4BAAKrO,EAAEkB,EAAQiG,IAAK,IACpB,4BAAKnH,EAAEkB,EAAQmG,IAAK,IACpB,4BAAKrH,EAAEkB,EAAQoG,IAAK,KAEtB,4BACE,oEACA,4BAAK4J,GAAwBjN,IAC7B,4BACE,2BACEjB,KAAK,SACLkL,IAAI,IACJC,KAAK,OACLnF,UAAU,yBACVnB,MAAO3G,EAAQ4F,IACfgE,SAAU,SAACR,GAAD,OAAOiF,EAAS,MAAOjF,EAAES,OAAOsD,mBAG9C,4BAAKrO,EAAEkB,EAAQqG,IAAK,IACpB,4BAAKvH,EAAEyE,EAAK,IACZ,4BAAKzE,EAAEkB,EAAQuG,IAAK,SCvFlC,SAAS8J,KACP,OAAuC,IAAhCpP,KAAK+D,MAAMsL,KAAKC,MAAQ,KAGjC,SAASC,GAAO1R,GAAsB,IAAXuN,EAAU,uDAAH,EAChC,OAAOvN,EAAE2R,WAAWC,SAASrE,EAAM,KAmBrC,SAASsE,GAAgBC,GACvB,IAAMC,EAAO,IAAIP,KAAKM,GACtB,OACE,oCAfJ,SAAiBC,GACf,OAAOL,GAAOK,EAAKC,WAedA,CAAQD,GADX,IAnBJ,SAAkBA,GAChB,OAAOL,GAAOK,EAAKE,WAAa,GAmBXA,CAASF,GAD5B,IACoCA,EAAKG,cADzC,IAXJ,SAAkBH,GAChB,OAAOL,GAAOK,EAAKI,YAWwCA,CAASJ,GADlE,IAPJ,SAAoBA,GAClB,OAAOL,GAAOK,EAAKK,cAQdA,CAAWL,IAKH,SAASM,GAAT,GAAoD,IAAD,MAAjCnR,EAAiC,EAAjCA,QAAiC,EACtC2I,mBAAS0H,MAD6B,mBACzDO,EADyD,KAClDQ,EADkD,KAGhEvJ,qBAAU,WACR,IAAM1G,EAAKkQ,aAAY,kBAAMD,EAASf,QAAiB,KACvD,OAAO,kBAAMiB,cAAcnQ,MAC1B,CAACyP,IAEJ,IAAMW,EAAsBzS,EAAC,UAAC8C,EAAU5B,EAAQiE,eAAnB,aAAC,EAA2BhC,GAAI,EAAG,MAC1DuP,EAAgB1S,EAAEkB,EAAQkE,KAC1BuN,EAAmB3S,EAAEkB,EAAQoE,KAC7BsN,EAAgB5S,EAAEkB,EAAQqE,IAE1BsN,EAAc7S,EAAEkB,EAAQ2E,GAAI,EAAG,MAC/BiN,EAAiB9S,EAAEkB,EAAQ8E,KAC3B+M,EAAoB/S,EAAEkB,EAAQ+E,KAC9B+M,EAAiBhT,EAAEkB,EAAQ6E,IAE3BkN,EAAcjT,EAAC,UAAC8D,EAAiB5C,EAAQuF,kBAA1B,aAAC,EAAqC1C,EAAG,EAAG,KAC3DmP,EAAYlT,EAAEkB,EAAQwF,IAEtByM,EAAcnT,EAAC,UAACyD,EAAgBvC,EAAQ0E,iBAAzB,aAAC,EAAmClC,KAAM,EAAG,OAC5D0P,EAAiBpT,EAAEkB,EAAQ6D,aAASsO,EAAW,KAC/CC,EAAYtT,EAAEkB,EAAQmF,gBAEtBkN,EAAU,UAAMvT,EAAEkB,EAAQqF,OAAQ,EAAG,KAA3B,aAAoCvG,EAClDkB,EAAQgG,IACR,EACA,WAEIsM,EAAY,UAAMxT,EAAEkB,EAAQiG,IAAK,EAAG,KAAxB,aAAiCnH,EAAEkB,EAAQoG,IAAK,EAAG,WAC/DmM,EAAc,UAAMzT,EAAEkB,EAAQqG,IAAK,EAAG,KAAxB,aAAiCvH,EACnDkB,EAAQuG,IACR,EACA,WAGF,OACE,oCACE,yBAAKuB,UAAU,sDACb,yBAAKA,UAAU,uDACb,yBAAKA,UAAU,sEACb,yBACEE,IAAKC,kCACLC,OAAO,KACPC,IAAI,kBAGR,yBAAKL,UAAU,8BAAf,uBACuB6I,GAAgBC,IAEvC,yBAAK9I,UAAU,gBAAf,uBACuB6I,GAAgBC,GACrC,yBAAK9I,UAAU,qBACb,4BACEA,UAAU,kBACVqB,QAAS,kBAAME,OAAOmJ,UAFxB,cAQJ,yBAAK1K,UAAU,oEACb,yBACEE,IAAKC,oCACLC,OAAO,KACPC,IAAI,QAKZ,yBAAKL,UAAU,+CACb,yBAAKA,UAAU,6EACb,iEACA,sDAEF,2BACE,4CADF,KACyB9H,EAAQ6B,MAEjC,2BACE,gDADF,KAC6B7B,EAAQiH,MAErC,2BACE,oEADF,IACoD,IACjDjH,EAAQ+D,kBAFX,UAIA,2BACE,wDADF,KACqCwN,GAErC,2BACE,mDADF,KACgCI,GAEhC,4BAAQ7J,UAAU,mBAChB,yBACE2K,MAAM,MACN3K,UAAU,yCACVE,IAAK,8BAA0C0K,QAAQ,OAAQ,KAC/DvK,IAAI,6BAEN,gCAAYL,UAAU,kBAAtB,8BAIF,wDACA,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,yEACf,+BACE,wBAAIA,UAAU,2BAAd,aACA,wBAAIA,UAAU,2BAAd,4BAGA,wBAAIA,UAAU,2BAAd,cAEF,+BACE,4BACE,oDACA,wBAAIA,UAAU,aAAd,6CAGA,4BAAK9H,EAAQ+D,kBAAb,WAEF,4BACE,wBAAI4O,QAAS,GAAb,WACA,wBAAI7K,UAAU,aAAd,yBACA,4BAAKyJ,IAEP,4BACE,wBAAIzJ,UAAU,aAAd,yBACA,4BAAK0J,IAEP,4BACE,wBAAI1J,UAAU,aAAd,4BACA,4BAAK2J,IAEP,4BACE,wBAAI3J,UAAU,aAAd,6BACA,4BAAK4J,IAEP,4BACE,wBAAIiB,QAAS,GAAb,kBACA,wBAAI7K,UAAU,aAAd,6BACA,4BAAK6J,IAEP,4BACE,wBAAI7J,UAAU,aAAd,+BACA,4BAAK8J,IAEP,4BACE,wBAAI9J,UAAU,aAAd,mCACA,4BAAK+J,IAEP,4BACE,wBAAI/J,UAAU,aAAd,6BACA,4BAAKgK,IAEP,4BACE,wBAAIa,QAAS,GAAb,cACA,wBAAI7K,UAAU,aAAd,0BACA,4BAAKiK,IAEP,4BACE,wBAAIjK,UAAU,aAAd,wBACA,4BAAKkK,IAEP,4BACE,wBAAIW,QAAS,GAAb,YACA,wBAAI7K,UAAU,aAAd,uBACA,4BAAKmK,IAEP,4BACE,wBAAInK,UAAU,aAAd,mBACA,4BAAKoK,IAEP,4BACE,wBAAIpK,UAAU,aAAd,qBACA,4BAAKsK,IAEP,4BACE,wBAAIO,QAAS,GAAb,UACA,wBAAI7K,UAAU,aAAd,gCACA,4BAAKuK,IAEP,4BACE,wBAAIvK,UAAU,aAAd,8BACA,4BAAKwK,IAEP,4BACE,wBAAIxK,UAAU,aAAd,4BACA,4BAAKyK,OAKb,yBAAKzK,UAAU,4BACb,4BAAQA,UAAU,kBAAkBqB,QAAS,kBAAME,OAAOmJ,UAA1D,eC1NKlK,oBACb,SAAChJ,EAAD,GAAqD,IAApCiJ,EAAmC,EAAnCA,QACf,MAAO,CACLA,UACAvI,QAASV,EAAMO,SAAS+S,MAAK,SAAC5S,GAC5B,OAAOA,EAAQmB,KAAOoH,QAI5B,CACE4D,SjB4BG,SACLhL,EACAlB,GAEA,MAAO,CAAE6B,KAAM,oBAAqB4E,QAAS,CAAEvF,KAAIlB,WiB/BjDoO,SjBkEG,SACLlN,EACAU,EACA8E,GAEA,MAAO,CAAE7E,KAAM,cAAe4E,QAAS,CAAEvF,KAAIU,OAAM8E,YiBlFtC2B,EAab,YAQE,IAPFtI,EAOC,EAPDA,QACAmM,EAMC,EANDA,SACAkC,EAKC,EALDA,SAMA,OAAOrO,EACL,oCACE,yBAAK8H,UAAU,YACb,wBAAIA,UAAU,6BACZ,wBAAIA,UAAU,yBACZ,uBACEA,UAAU,+BACV+K,cAAY,MACZC,KAAK,UAHP,YAQF,wBAAIhL,UAAU,yBACZ,uBACEA,UAAU,wBACV+K,cAAY,MACZC,KAAK,WAHP,YAQF,wBAAIhL,UAAU,yBACZ,uBACEA,UAAU,wBACV+K,cAAY,MACZC,KAAK,YAHP,mBAQF,wBAAIhL,UAAU,yBACZ,uBACEA,UAAU,wBACV+K,cAAY,MACZC,KAAK,YAHP,kBAQF,wBAAIhL,UAAU,yBACZ,uBACEA,UAAU,wBACV+K,cAAY,MACZC,KAAK,YAHP,qBAQF,wBAAIhL,UAAU,yBACZ,uBACEA,UAAU,wBACV+K,cAAY,MACZC,KAAK,YAHP,gBAQF,wBAAIhL,UAAU,yBACZ,uBACEA,UAAU,wBACV+K,cAAY,MACZC,KAAK,YAHP,aASJ,yBAAKhL,UAAU,eACb,yBAAKA,UAAU,iCAAiC3G,GAAG,SACjD,kBAAC+K,GAAD,CACE3D,QAASvI,EAAQmB,GACjBlB,MAAOD,EAAQC,MACfkM,SAAUA,KAGd,yBAAKrE,UAAU,qBAAqB3G,GAAG,UACrC,kBAAC,GAAD,CACEnB,QAASA,EACTqO,SAAU,SAACxM,EAAM8E,GAAP,OAAiB0H,EAASrO,EAAQmB,GAAIU,EAAM8E,OAG1D,yBAAKmB,UAAU,qBAAqB3G,GAAG,WACrC,kBAACwO,GAAD,CACE3P,QAASA,EACTqO,SAAU,SAACxM,EAAM8E,GAAP,OAAiB0H,EAASrO,EAAQmB,GAAIU,EAAM8E,OAG1D,yBAAKmB,UAAU,qBAAqB3G,GAAG,WACrC,kBAACyO,GAAD,CACE5P,QAASA,EACTqO,SAAU,SAACxM,EAAM8E,GAAP,OAAiB0H,EAASrO,EAAQmB,GAAIU,EAAM8E,OAG1D,yBAAKmB,UAAU,qBAAqB3G,GAAG,WACrC,kBAAC4O,GAAD,CACE/P,QAASA,EACTqO,SAAU,SAACxM,EAAM8E,GAAP,OAAiB0H,EAASrO,EAAQmB,GAAIU,EAAM8E,OAG1D,yBAAKmB,UAAU,qBAAqB3G,GAAG,WACrC,kBAACiP,GAAD,CACEpQ,QAASA,EACTqO,SAAU,SAACxM,EAAM8E,GAAP,OAAiB0H,EAASrO,EAAQmB,GAAIU,EAAM8E,OAG1D,yBAAKmB,UAAU,qBAAqB3G,GAAG,WACrC,kBAACgQ,GAAD,CAAQnR,QAASA,QAMzB,oCACE,yBAAK8H,UAAU,iBClJN,SAASiL,GAAT,GAMV,IAJS5R,EAIV,EALF6R,MACEC,OAAU9R,GAKNoH,EAAUpH,EAAKuM,SAASvM,EAAI,KAAO,EACzC,OACE,oCACGpC,SAASwJ,KAAyB,IAAbA,EACpB,kBAAC,IAAD,CAAUR,GAAE,aAAQQ,KAEpB,kBAAC,IAAD,CAAUR,GAAG,MAEf,yBAAKD,UAAU,OACb,kBAAC,GAAD,CAAgBS,QAASA,IACzB,yBAAKT,UAAU,YACb,kBAACoL,EAAD,CAAa3K,QAASA,OCdhC,SAAS4K,GAAQtR,EAAcuR,GAAe,IAAD,EACrBzK,oBAAS,GADY,mBACpC0K,EADoC,KAC5BxM,EAD4B,KAE3C,MAAO,CACL,WACErH,aAAa+H,QAAQ,KAAM5H,KAAK6H,UAAU4L,IAC1CvM,GAAKwM,IAEP,WACE7T,aAAa8T,WAAW,MACxBjK,OAAOkK,SAASC,WAKtB,IAAIC,GAAO,EACTC,GAAY,EACZC,GAAa,EACbC,GAAc,EAEhB,SAASC,KAAe,IAAD,EACCV,GAAQ,EAAcvQ,GADvB,mBACdkR,EADc,KACR5I,EADQ,KAErB,OACE,iCACE,mDACA,4BACEpD,UAAU,+BACVqB,QAAS,SAACC,GACRxG,EAAiBsE,KAAK,CACpBrF,KAAK,cAAD,OAAgB+R,MACpB/Q,EAAG,EACHC,KAAM,IAERgR,MARJ,WAaA,4BAAQhM,UAAU,0BAA0BqB,QAAS+B,GAArD,iBAGA,yBAAKpD,UAAU,wBACb,2BACEA,UAAU,0DACV0E,MAAO,CAAEuH,SAAU,UAEnB,+BACE,4BACE,mCACA,uCACA,wDACA,+BAGJ,+BACGnR,EAAiB7C,KAAI,SAACuB,EAAOgL,GAAR,OACpB,wBAAIrD,IAAKqD,GACP,4BACE,2BACExK,KAAK,OACLgG,UAAU,8BACVnB,MAAOrF,EAAMO,KACb+H,SAAU,SAACR,GACT9H,EAAMO,KAAOuH,EAAES,OAAOlD,MACtBmN,QAIN,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMuB,EACb+G,SAAU,SAACR,GACT9H,EAAMuB,EAAIuG,EAAES,OAAOsD,cACnB2G,OAPN,MAaF,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMwB,KACb8G,SAAU,SAACR,GACT9H,EAAMwB,KAAOsG,EAAES,OAAOsD,cACtB2G,OAPN,MAaF,4BACE,4BACEhM,UAAU,8BACVqB,QAAS,WACHE,OAAOC,QAAP,oBAA4BhI,EAAMO,KAAlC,SACFe,EAAiBoR,OAAO1H,EAAO,GAC/BwH,OALN,sBAqBlB,SAASG,KAAa,IAAD,EACGd,GAAQ,EAAa5Q,GADxB,mBACZuR,EADY,KACN5I,EADM,KAEnB,OACE,iCACE,gDACA,4BACEpD,UAAU,+BACVqB,QAAS,SAACC,GACR7G,EAAgB2E,KAAK,CACnB3F,OAAO,YAAD,OAAcoS,MACpBlR,MAAO,CAAC,EAAG,GACXD,KAAM,EACNE,KAAM,EACNhB,SAAG,IAELoS,MAVJ,WAeA,4BAAQhM,UAAU,0BAA0BqB,QAAS+B,GAArD,iBAGA,yBAAKpD,UAAU,wBACb,2BACEA,UAAU,0DACV0E,MAAO,CAAEuH,SAAU,UAEnB,+BACE,4BACE,sCACA,oDACA,kDACA,+CACA,yCACA,+BAGJ,+BACGxR,EAAgBxC,KAAI,SAACuB,EAAOgL,GAAR,OACnB,wBAAIrD,IAAKqD,GACP,4BACE,2BACExK,KAAK,OACLgG,UAAU,8BACVnB,MAAOrF,EAAMC,OACbqI,SAAU,SAACR,GACT9H,EAAMC,OAAS6H,EAAES,OAAOlD,MACxBmN,QAIN,4BACE,yBAAKhM,UAAU,kCACZ,IACD,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMmB,MAAM,GACnBmH,SAAU,SAACR,GACT9H,EAAMmB,MAAM,GAAK2G,EAAES,OAAOsD,cAC1B2G,OAGH,MACD,2BACEhS,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMmB,MAAM,GACnBmH,SAAU,SAACR,GACT9H,EAAMmB,MAAM,GAAK2G,EAAES,OAAOsD,cAC1B2G,OAGH,OAGL,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMkB,KACboH,SAAU,SAACR,GACT9H,EAAMkB,KAAO4G,EAAES,OAAOsD,cACtB2G,OAPN,MAaF,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMoB,KACbkH,SAAU,SAACR,GACT9H,EAAMoB,KAAO0G,EAAES,OAAOsD,cACtB2G,OAPN,MAaF,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMI,OACbkI,SAAU,SAACR,GACT9H,EAAMI,OAAI0H,EAAES,OAAOsD,cACnB2G,OAPN,OAaF,4BACE,4BACEhM,UAAU,8BACVqB,QAAS,WACHE,OAAOC,QAAP,oBAA4BhI,EAAMC,OAAlC,SACFgB,EAAgByR,OAAO1H,EAAO,GAC9BwH,OALN,sBAqBlB,SAASI,KAAa,IAAD,EACGf,GAAQ,EAAY9R,GADvB,mBACZyS,EADY,KACN5I,EADM,KAEnB,OACE,iCACE,gDACA,4BACEpD,UAAU,+BACVqB,QAAS,SAACC,GACR/H,EAAe6F,KAAK,CAClB5F,MAAM,YAAD,OAAcoS,MACnBnS,OAAQ,OACRE,KAAM,EACND,KAAM,EACNE,SAAG,IAELoS,MAVJ,WAeA,4BAAQhM,UAAU,0BAA0BqB,QAAS+B,GAArD,iBAGA,yBAAKpD,UAAU,wBACb,2BACEA,UAAU,0DACV0E,MAAO,CAAEuH,SAAU,UAEnB,+BACE,4BACE,qCACA,sCACA,gDACA,iDACA,yCACA,+BAGJ,+BACG1S,EAAetB,KAAI,SAACuB,EAAOgL,GAAR,OAClB,wBAAIrD,IAAKqD,GACP,4BACE,2BACExK,KAAK,OACLgG,UAAU,yBACVnB,MAAOrF,EAAMA,MACbsI,SAAU,SAACR,GACT9H,EAAMA,MAAQ8H,EAAES,OAAOlD,MACvBmN,QAIN,4BACE,2BACEhS,KAAK,OACLgG,UAAU,8BACVnB,MAAOrF,EAAMC,OACbqI,SAAU,SAACR,GACT9H,EAAMC,OAAS6H,EAAES,OAAOlD,MACxBmN,QAIN,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAME,KACboI,SAAU,SAACR,GACT9H,EAAME,KAAO4H,EAAES,OAAOsD,cACtB2G,OAPN,MAaF,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMG,KACbmI,SAAU,SAACR,GACT9H,EAAMG,KAAO2H,EAAES,OAAOsD,cACtB2G,OAPN,MAaF,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMI,OACbkI,SAAU,SAACR,GACT9H,EAAMI,OAAI0H,EAAES,OAAOsD,cACnB2G,OAPN,OAaF,4BACE,4BACEhM,UAAU,8BACVqB,QAAS,WACHE,OAAOC,QAAP,oBAA4BhI,EAAMA,MAAlC,SACFD,EAAe2S,OAAO1H,EAAO,GAC7BwH,OALN,sBAqBlB,SAAS9P,KAAM,IAAD,EACUmP,GAAQ,EAAMvR,GADxB,mBACLkS,EADK,KACC5I,EADD,KAEZ,OACE,iCACE,0CACA,4BACEpD,UAAU,+BACVqB,QAAS,SAACC,GACRxH,EAAUsF,KAAK,CACbrF,KAAK,OAAD,OAAS4R,MACb3R,KAAM,kBACNK,IAAK,EACLD,IAAK,EACLD,GAAI,EACJD,IAAK,EACLD,IAAK,EACLK,OAAQ,EACRC,WAAY,CAAC,EAAG,KAElByR,MAdJ,WAmBA,4BAAQhM,UAAU,0BAA0BqB,QAAS+B,GAArD,iBAGA,yBAAKpD,UAAU,wBACb,2BACEA,UAAU,0DACV0E,MAAO,CAAEuH,SAAU,UAEnB,+BACE,4BACE,oCACA,oCACA,yDACA,wDACA,6CACA,wDACA,wDACA,sCACA,0CACA,+BAGJ,+BACGnS,EAAU7B,KAAI,SAACuB,EAAOgL,GAAR,OACb,wBAAIrD,IAAKqD,GACP,4BACE,2BACExK,KAAK,OACLgG,UAAU,yBACVnB,MAAOrF,EAAMO,KACb+H,SAAU,SAACR,GACT9H,EAAMO,KAAOuH,EAAES,OAAOlD,MACtBmN,QAIN,4BACE,2BACEhS,KAAK,OACLgG,UAAU,8BACVnB,MAAOrF,EAAMQ,KACb8H,SAAU,SAACR,GACT9H,EAAMQ,KAAOsH,EAAES,OAAOlD,MACtBmN,QAIN,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMS,IACb6H,SAAU,SAACR,GACT9H,EAAMS,IAAMqH,EAAES,OAAOsD,cACrB2G,OAPN,MAaF,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMU,IACb4H,SAAU,SAACR,GACT9H,EAAMU,IAAMoH,EAAES,OAAOsD,cACrB2G,OAPN,MAaF,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMW,GACb2H,SAAU,SAACR,GACT9H,EAAMW,GAAKmH,EAAES,OAAOsD,cACpB2G,OAPN,OAaF,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMY,IACb0H,SAAU,SAACR,GACT9H,EAAMY,IAAMkH,EAAES,OAAOsD,cACrB2G,OAPN,MAaF,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMa,IACbyH,SAAU,SAACR,GACT9H,EAAMa,IAAMiH,EAAES,OAAOsD,cACrB2G,OAPN,MAaF,4BACE,yBAAKhM,UAAU,kCACb,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMc,OACbwH,SAAU,SAACR,GACT9H,EAAMc,OAASgH,EAAES,OAAOsD,cACxB2G,SAKR,4BACE,yBAAKhM,UAAU,kCACZ,IACD,2BACEhG,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMe,WAAW,GACxBuH,SAAU,SAACR,GACT9H,EAAMe,WAAW,GAAK+G,EAAES,OAAOsD,cAC/B2G,OAGH,UACD,2BACEhS,KAAK,SACLgG,UAAU,oCACVnB,MAAOrF,EAAMe,WAAW,GACxBuH,SAAU,SAACR,GACT9H,EAAMe,WAAW,GAAK+G,EAAES,OAAOsD,cAC/B2G,OAGH,WAGL,4BACE,4BACEhM,UAAU,8BACVqB,QAAS,WACHE,OAAOC,QAAP,oBAA4BhI,EAAMO,KAAlC,SACFD,EAAUoS,OAAO1H,EAAO,GACxBwH,OALN,sBAqBH,SAASK,KACtB,OACE,oCACE,kBAACN,GAAD,MACA,kBAAC,GAAD,MACA,kBAACK,GAAD,MACA,kBAACD,GAAD,OCllBS,SAASG,KACtB,OACE,yBAAKtM,UAAU,gBACb,yBAAKA,UAAU,sBACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuM,OAAK,EAACC,KAAK,IAAIC,UAAWxB,KACjC,kBAAC,IAAD,CAAOuB,KAAK,SAASC,UAAWxB,KAChC,kBAAC,IAAD,CAAOuB,KAAK,UAAUC,UAAWJ,OCQ1BK,OAbf,WACE,OACE,oCACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,IAAD,CAAQC,SAAUzM,mBAChB,kBAACL,EAAD,MACA,kBAACwM,GAAD,UCHUO,QACW,cAA7BtL,OAAOkK,SAASqB,UAEe,UAA7BvL,OAAOkK,SAASqB,UAEhBvL,OAAOkK,SAASqB,SAAS5B,MACvB,2DCVN6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFrN,SAASsN,eAAe,SD+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3J,QAAQ2J,MAAMA,EAAMC,c","file":"static/js/main.8175a733.chunk.js","sourcesContent":["export function validate(n?: number | null) {\n  return n != null && isFinite(n) ? n : NaN;\n}\n\nexport function n(n?: number | null, fixed = 0, unit = \"\") {\n  unit = unit && ` ${unit.trim()}`;\n  return n != null && isFinite(n)\n    ? (fixed ? n.toFixed(fixed) : n) + unit\n    : \"N/A\";\n}\n\nexport function percentage(n: number) {\n  return `${(n * 100).toFixed(2)}%`;\n}\n","import State, {\n  Project,\n  ProjectNeed,\n  ModelPV,\n  ModelBattery,\n  ModelOnduleur,\n  ModelRegulateur,\n} from \"./State\";\nimport Actions from \"./actions\";\nimport { List } from \"immutable\";\nimport { validate } from \"../utils/numbers\";\n\ntype ProjectNeedJSON = ProjectNeed;\n\ntype ProjectJSON = Omit<State, \"projects\"> & {\n  needs: ProjectNeedJSON[];\n};\n\ntype StateJSON = Omit<State, \"projects\"> & {\n  projects: ProjectJSON[];\n};\n\nconst saved = localStorage.getItem(\"state\");\nconst initial: State = saved\n  ? decode(JSON.parse(saved))\n  : {\n      projects: List(),\n    };\n\nexport function mutateCalcProjectNeed(n: ProjectNeed) {\n  n.energy = n.hours * ((n.prolifiratedPower = n.quantity * n.power) / 1000);\n  return n;\n}\n\nfunction reduceProjectNeedsTotalEnergy(total: number, need: ProjectNeed) {\n  return total + need.energy;\n}\n\nfunction reduceProjectNeedsProlifiratedPower(total: number, need: ProjectNeed) {\n  return total + need.prolifiratedPower;\n}\n\nfunction calculateTotalEnergy(needs: List<ProjectNeed>) {\n  return needs.reduce(reduceProjectNeedsTotalEnergy, 0);\n}\n\nfunction calculateProlifiratedPower(needs: List<ProjectNeed>) {\n  return needs.reduce(reduceProjectNeedsProlifiratedPower, 0);\n}\n\nlet projectID = initial.projects.reduce((maximum, project) => {\n  return Math.max(maximum, project.id + 1);\n}, 0);\n\nconst PSI = 1;\n\nfunction calculatePc(El: number, Ƞb: number, Kloss: number, Htilt: number) {\n  return (El / (Ƞb * Kloss * Htilt)) * PSI;\n}\n\nfunction calculateCx(\n  Nc: number,\n  El: number,\n  DODmax: number,\n  Vsystem: number,\n  Ƞout: number\n) {\n  return (Nc * 1000 * El) / (DODmax * Vsystem * Ƞout);\n}\n\nconst batteries = localStorage.getItem(\"batteries\");\nexport const BatteryModules: ModelBattery[] = batteries\n  ? JSON.parse(batteries)\n  : [\n      {\n        model: \"12MD325P\",\n        vendor: \"Rolls\",\n        Vnom: 12,\n        Cnom: 325,\n        Ƞ: 0.98,\n      },\n      {\n        model: \"Solar 12V / 160 Ah\",\n        vendor: \"Generic\",\n        Vnom: 12,\n        Cnom: 160,\n        Ƞ: 0.98,\n      },\n      {\n        model: \"12-CS-11PS\",\n        vendor: \"Rolls\",\n        Vnom: 12,\n        Cnom: 296,\n        Ƞ: 0.98,\n      },\n    ];\n\nconst pv = localStorage.getItem(\"pv\");\nexport const PVModules: ModelPV[] = pv\n  ? JSON.parse(pv)\n  : [\n      {\n        name: \"ENP Sonne 180Wc\",\n        type: \"Polycristalline\",\n        Voc: 38.2,\n        Vmp: 24,\n        Pm: 180,\n        Isc: 5.38,\n        Imp: 5.2,\n        output: 0.1598,\n        temperture: [-40, +85],\n      },\n      {\n        name: \"SUNTECH 280Wc\",\n        Pm: 260,\n        Voc: 38.2,\n        Isc: 8.9,\n        Vmp: 30.7,\n        Imp: 8.47,\n        output: 0.1598,\n        temperture: [-40, +85],\n        type: \"Polycristalline\",\n      },\n      {\n        name: \"TESLA POWER\",\n        Pm: 280,\n        Voc: 38.2,\n        Isc: 9.38,\n        Vmp: 31.6,\n        Imp: 8.86,\n        output: 0.171,\n        temperture: [-40, +85],\n        type: \"Polycristalline\",\n      },\n    ];\n\nconst inverters = localStorage.getItem(\"inverters\");\nexport const InverterModules: ModelOnduleur[] = inverters\n  ? JSON.parse(inverters)\n  : [\n      {\n        vendor: \"15Kva Offgrid Solo\",\n        Pnom: 15,\n        PVmpp: [120, 440],\n        Vmax: 550,\n        Ƞ: 0.97,\n      },\n      {\n        vendor: \"Generic\",\n        Pnom: 3,\n        PVmpp: [125, 440],\n        Vmax: 550,\n        Ƞ: 0.97,\n      },\n    ];\n\nconst regulators = localStorage.getItem(\"regulators\");\nexport const RegulatorModules: ModelRegulateur[] = regulators\n  ? JSON.parse(regulators)\n  : [\n      {\n        name: \"Xantex - 60A - 12V/24V\",\n        I: 60,\n        Vout: 24,\n      },\n    ];\n\n// Ω\n\nexport const ρ = 1.724e-8;\n\nfunction calcS(I: number, L: number, Vd: number) {\n  return 2e6 * ((ρ * I * L) / Vd);\n}\n\nfunction calcVd(V: number) {\n  return 0.04 * V;\n}\n\nfunction calcVdmr(Voc: number, Msc: number) {\n  return calcVd(Voc * Msc * 1.15);\n}\n\nfunction calcIbi(Pi: number, Ƞ: number, Vsystem: number) {\n  return (1000 * Pi) / (Ƞ * Vsystem);\n}\n\nconst SQRT3 = Math.sqrt(3);\nconst VLOAD = 220;\n\nfunction calcIic(Pi: number) {\n  return (1000 * Pi) / (VLOAD * SQRT3);\n}\n\nexport const Vic = calcVd(VLOAD);\n\ninitial.projects = initial.projects.map((project) => {\n  return mutateUpdateProject(project);\n});\n\nfunction mutateUpdateProject(project: Project) {\n  const Vsystem = project.Vsystem;\n\n  const Pc = (project.Pc = calculatePc(\n    project.energyBesoinTotal,\n    project.Ƞb,\n    project.Kloss,\n    project.Htilt\n  ));\n\n  const PV = PVModules[project.module];\n\n  const Isc = validate(PV?.Isc);\n\n  const Msc = (project.Msc = Math.ceil(Vsystem / validate(PV?.Vmp)));\n  const Mpc = (project.Mpc = Math.ceil((1000 * Pc) / (Msc * validate(PV?.Pm))));\n\n  project.Mt = Mpc * Msc;\n\n  const Nc = project.Nc;\n  const DODmax = project.DODmax;\n  const Ƞout = project.Ƞout;\n\n  const battery = BatteryModules[project.battery];\n  const inverter = InverterModules[project.inverter];\n\n  const Cx = (project.Cx = calculateCx(\n    Nc,\n    project.energyBesoinTotal,\n    DODmax,\n    Vsystem,\n    Ƞout\n  ));\n\n  const Bt = (project.Bt = Math.ceil(Cx / validate(battery?.Cnom)));\n  const Bsc = (project.Bsc = Math.ceil(Vsystem / validate(battery?.Vnom)));\n  project.Bpc = Math.floor(Bt / Bsc);\n\n  project.Pi = (project.Pf * 1.25) / 1000;\n  project.nombreOnduleur = Math.max(\n    1,\n    Math.round(project.Pi / validate(inverter?.Pnom))\n  );\n\n  const Irated = (project.Irated = Isc * Mpc * 1.25);\n\n  const regulateur = RegulatorModules[project.regulator];\n\n  project.Rc = Math.ceil(Irated / validate(regulateur?.I));\n\n  const Voc = validate(PV?.Voc);\n  const Ƞbatterie = validate(battery?.Ƞ);\n  const Pi = validate(inverter?.Pnom);\n\n  const Lmr = project.Lmr;\n  const Lbi = project.Lbi;\n  const Lic = project.Lic;\n\n  const Vdmr = (project.Vmr = calcVdmr(Voc, Msc));\n  project.Smr = calcS(Irated, Lmr, Vdmr);\n  const Ibi = (project.Ibi = calcIbi(Pi, Ƞbatterie, Vsystem));\n  const Vbi = (project.Vbi = calcVd(Vsystem));\n  project.Sbi = calcS(Ibi, Lbi, Vbi);\n  const Iic = (project.Iic = calcIic(Pi));\n  project.Sic = calcS(Iic, Lic, Vic);\n\n  return project;\n}\n\nfunction reducer(state = initial, action: Actions): State {\n  switch (action.type) {\n    case \"project:set\": {\n      const { id, name, value } = action.payload;\n\n      const project = {\n        ...state.projects.get(id)!,\n        [name]: value,\n      } as Project;\n\n      return {\n        ...state,\n        projects: state.projects.set(id, mutateUpdateProject(project)),\n      };\n    }\n    case \"project.needs:set\": {\n      const { id, needs } = action.payload;\n      const projet = state.projects.get(id)!;\n      const $needs = needs.map((need) => mutateCalcProjectNeed({ ...need }));\n      return {\n        ...state,\n        projects: state.projects.set(\n          id,\n          mutateUpdateProject({\n            ...projet,\n            needs: $needs,\n            energyBesoinTotal: calculateTotalEnergy($needs),\n            Pf: calculateProlifiratedPower($needs),\n          } as Project)\n        ),\n      };\n    }\n    case \"project:delete\": {\n      const { id } = action.payload;\n      return {\n        ...state,\n        projects: state.projects.filter((project) => {\n          return project.id !== id;\n        }),\n      };\n    }\n    case \"project:edit\": {\n      const { id, name, site } = action.payload;\n      return {\n        ...state,\n        projects: state.projects.set(id, {\n          ...state.projects.get(id),\n          id,\n          name,\n          site,\n        } as Project),\n      };\n    }\n    case \"project:create\": {\n      const { name, site } = action.payload;\n      return {\n        ...state,\n        projects: state.projects.push({\n          id: projectID++,\n          name,\n          site,\n          needs: List(),\n          energyBesoinTotal: 0,\n          Pf: 0,\n          Htilt: 0,\n          Kloss: 0,\n          Mpc: 0,\n          Msc: 0,\n          Mt: 0,\n          Pc: 0,\n          Vsystem: 0,\n          module: -1,\n          battery: -1,\n          inverter: -1,\n          regulator: -1,\n          Ƞb: 0,\n          Nc: 1,\n          DODmax: 0.01,\n          Ƞout: 0.01,\n          Cx: 0,\n          Bpc: 0,\n          Bsc: 0,\n          Bt: 0,\n          Pi: 0,\n          nombreOnduleur: NaN,\n          Irated: 0,\n          Rc: 0,\n          Lmr: 0,\n          Vmr: NaN,\n          Smr: NaN,\n          Lbi: 0,\n          Ibi: NaN,\n          Vbi: NaN,\n          Sbi: NaN,\n          Lic: 0,\n          Iic: NaN,\n          Sic: NaN,\n        }),\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction encode(state: State): StateJSON {\n  return {\n    projects: state.projects\n      .map(\n        (project) =>\n          ({\n            ...project,\n            needs: project.needs.toArray(),\n          } as ProjectJSON)\n      )\n      .toArray(),\n  };\n}\n\nfunction decode(state: StateJSON): State {\n  return {\n    projects: List(\n      state.projects.map((project) => ({\n        ...project,\n        needs: List(project.needs),\n      }))\n    ) as List<Project>,\n  };\n}\n\nexport default function (state = initial, action: Actions) {\n  const next = reducer(state, action);\n  localStorage.setItem(\"state\", JSON.stringify(encode(next)));\n  return next;\n}\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\nexport default createStore(reducer);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NAME = \"Simulateur PV\";\n\nfunction setTitle() {\n  document.title = NAME;\n}\n\nexport default function AppHeader() {\n  useEffect(setTitle);\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-success d-print-none\">\n      <div className=\"container-md\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          <img\n            src={process.env.PUBLIC_URL + \"/Header-logo.png\"}\n            height=\"32\"\n            alt=\"Trust Energy\"\n          />\n        </Link>\n      </div>\n    </nav>\n  );\n}\n","import State, { Project } from \"./state/State\";\nimport React, { useState } from \"react\";\n\nimport { createProject, editProject, deleteProject } from \"./state/actions\";\n\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { List } from \"immutable\";\n\nenum ProjectListState {\n  Normal,\n  EditProject,\n  CreateProject,\n}\n\nconst ButtonText = [\"Créer un nouveau projet\", \"Renommer\", \"Créer\"];\n\nexport default connect(\n  (state: State, { current }: { current: number }) => {\n    return {\n      current,\n      projects: state.projects,\n    };\n  },\n  {\n    create: createProject,\n    edit: editProject,\n    remove: deleteProject,\n  }\n)(function ProjectListView({\n  current,\n  projects,\n  create,\n  edit,\n  remove,\n}: {\n  current: number;\n  projects: List<Project>;\n  create: typeof createProject;\n  edit: typeof editProject;\n  remove: typeof deleteProject;\n}) {\n  const [name, setName] = useState(\"\");\n  const [site, setSite] = useState(\"\");\n  const [state, setState] = useState(ProjectListState.Normal);\n  const [projectID, setProjectID] = useState(-1);\n\n  return (\n    <>\n      <div className=\"list-group list-group-flush d-print-none mb-3\">\n        {projects.map((project) => {\n          return (\n            <Link\n              to={`/p/${project.id}`}\n              className={`list-group-item list-group-item-action ${\n                state !== ProjectListState.Normal ? \"disabled\" : \"\"\n              } ${\n                current === project.id ? \"active list-group-item-success\" : \"\"\n              }`}\n              key={project.id}\n            >\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <h5>\n                  {project.name}\n                  <small\n                    className=\"font-weight-light\"\n                    hidden={project.site === \"\"}\n                  >\n                    {\" \"}\n                    ({project.site})\n                  </small>\n                </h5>\n                <div className=\"btn-group btn-group-sm\">\n                  <button\n                    type=\"button\"\n                    className=\"btn\"\n                    hidden={state !== ProjectListState.Normal}\n                    onClick={(e) => {\n                      if (\n                        window.confirm(\n                          \"Voulez vous vraiment supprimer le projet ?\"\n                        )\n                      ) {\n                        e.stopPropagation();\n                        remove(project.id);\n                        requestAnimationFrame(() => {\n                          setProjectID(current);\n                        });\n                      }\n                    }}\n                  >\n                    <span role=\"img\" aria-label=\"Supprimer\">\n                      ❌\n                    </span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn\"\n                    hidden={state !== ProjectListState.Normal}\n                    onClick={() => {\n                      setProjectID(project.id);\n                      setName(project.name);\n                      setSite(project.site);\n                      setState(ProjectListState.EditProject);\n                    }}\n                  >\n                    <span role=\"img\" aria-label=\"Ronommer\">\n                      ✏️\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n      <form className=\"d-print-none\">\n        <div hidden={state === ProjectListState.Normal}>\n          <div className=\"row\">\n            <label className=\"col-4 col-form-label\">Nom de projet:</label>\n            <div className=\"col-8\">\n              <input\n                type=\"text\"\n                value={name}\n                className=\"form-control form-control-sm\"\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <label className=\"col-4 col-form-label\">Site de projet:</label>\n            <div className=\"col-8\">\n              <input\n                type=\"text\"\n                value={site}\n                className=\"form-control form-control-sm\"\n                onChange={(e) => setSite(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-evenly mt-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-secondary btn-sm\"\n            hidden={state === ProjectListState.Normal}\n            onClick={() => {\n              setState(ProjectListState.Normal);\n            }}\n          >\n            Annuler\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn btn-outline-success btn-sm\"\n            onClick={(e) => {\n              e.preventDefault();\n              switch (state) {\n                case ProjectListState.Normal: {\n                  setName(\"\");\n                  setSite(\"\");\n                  setState(ProjectListState.CreateProject);\n                  return;\n                }\n                case ProjectListState.CreateProject: {\n                  create(name, site);\n                  setState(ProjectListState.Normal);\n                  return;\n                }\n                case ProjectListState.EditProject: {\n                  edit(projectID, name, site);\n                  setState(ProjectListState.Normal);\n                  return;\n                }\n              }\n            }}\n          >\n            {ButtonText[state]}\n          </button>\n        </div>\n      </form>\n    </>\n  );\n});\n","import { ProjectNeed } from \"./State\";\nimport { List } from \"immutable\";\n\nexport type Action<T, K extends string> = { type: K; payload: T };\n\ntype Actions =\n  | CreateProject\n  | EditProject\n  | DeleteProject\n  | SetProjectNeeds\n  | SetProjectValue;\n\nexport type CreateProject = Action<\n  {\n    name: string;\n    site: string;\n  },\n  \"project:create\"\n>;\n\nexport type EditProject = Action<\n  {\n    id: number;\n    name: string;\n    site: string;\n  },\n  \"project:edit\"\n>;\n\nexport type DeleteProject = Action<\n  {\n    id: number;\n  },\n  \"project:delete\"\n>;\n\nexport type SetProjectNeeds = Action<\n  {\n    id: number;\n    needs: List<ProjectNeed>;\n  },\n  \"project.needs:set\"\n>;\n\nexport type SetProjectValue = Action<\n  {\n    id: number;\n    name: ProjectValueName;\n    value: number;\n  },\n  \"project:set\"\n>;\n\nexport function setProjectNeeds(\n  id: number,\n  needs: List<ProjectNeed>\n): SetProjectNeeds {\n  return { type: \"project.needs:set\", payload: { id, needs } };\n}\n\nexport function createProject(name: string, site: string): CreateProject {\n  return { type: \"project:create\", payload: { name, site } };\n}\n\nexport function editProject(\n  id: number,\n  name: string,\n  site: string\n): EditProject {\n  return { type: \"project:edit\", payload: { id, name, site } };\n}\n\nexport function deleteProject(id: number): DeleteProject {\n  return { type: \"project:delete\", payload: { id } };\n}\n\nexport type ProjectValueName =\n  | \"Htilt\"\n  | \"Kloss\"\n  | \"Ƞb\"\n  | \"module\"\n  | \"battery\"\n  | \"inverter\"\n  | \"regulator\"\n  | \"Vsystem\"\n  | \"Nc\"\n  | \"DODmax\"\n  | \"Ƞout\"\n  | \"Lmr\"\n  | \"Lbi\"\n  | \"Lic\";\n\nexport function setProjectValue(\n  id: number,\n  name: ProjectValueName,\n  value: number\n): SetProjectValue {\n  return { type: \"project:set\", payload: { id, name, value } };\n}\n\nexport default Actions;\n","export async function selectFiles(options: {\n  accept?: string;\n  multiple?: true;\n}): Promise<FileList>;\nexport async function selectFiles(options: {\n  accept?: string;\n  multiple: false;\n}): Promise<File>;\nexport async function selectFiles(options: {\n  accept?: string;\n  multiple?: boolean;\n}) {\n  const selectFiles: ReturnType<typeof createFileSelector> =\n    // @ts-ignore\n    window.selectFiles || (window.selectFiles = createFileSelector());\n  const files = await selectFiles(options);\n  if (options.multiple) {\n    return files;\n  } else {\n    for (const file of Array.from(files)) {\n      return file;\n    }\n  }\n}\n\nfunction createFileSelector() {\n  const input = document.createElement(\"input\");\n  input.type = \"file\";\n  const form = document.createElement(\"form\");\n  form.appendChild(input);\n  form.hidden = true;\n  document.body.appendChild(form);\n  return ({\n    accept = \"\",\n    multiple = true,\n  }: {\n    accept?: string;\n    multiple?: boolean;\n  }) => {\n    input.accept = accept;\n    input.multiple = multiple;\n    return new Promise<FileList>((resolve, reject) => {\n      form.reset();\n      input.click();\n      input.onchange = () => {\n        if (input.files == null) reject(\"No files selected\");\n        else resolve(input.files);\n        input.onchange = null;\n      };\n    });\n  };\n}\n","export function parseCSV<T>(\n  content: string,\n  decode: (values: string[]) => T,\n  {\n    delimiter = \"\\n\",\n    separator = /[\\t,;]/,\n  }: {\n    delimiter?: string | RegExp;\n    separator?: string | RegExp;\n  } = {}\n): T[] {\n  return content\n    .trim()\n    .split(delimiter)\n    .map((line) => line.trim())\n    .filter((x) => x)\n    .map((line) => {\n      try {\n        return decode(line.split(separator).map((value) => value.trim()));\n      } catch (e) {\n        console.warn(e);\n        return null!;\n      }\n    })\n    .filter((x) => x);\n}\n","import React from \"react\";\n\nimport { ProjectNeed } from \"./state/State\";\nimport { mutateCalcProjectNeed } from \"./state/reducer\";\nimport { List } from \"immutable\";\nimport { selectFiles } from \"./utils/files\";\nimport { parseCSV } from \"./utils/csv\";\nimport { clamp } from \"./utils/math\";\n\nfunction reduceProjectTotalNeed(total: ProjectNeed, need: ProjectNeed) {\n  total.prolifiratedPower += need.prolifiratedPower;\n  total.quantity += need.quantity;\n  total.energy += need.energy;\n  total.hours += need.hours;\n  total.power += need.power;\n  return total;\n}\n\nfunction setNeedName(needs: List<ProjectNeed>, index: number, name: string) {\n  return needs.set(index, {\n    ...needs.get(index),\n    name,\n  } as ProjectNeed);\n}\n\nfunction setNeedQuantity(\n  needs: List<ProjectNeed>,\n  index: number,\n  quantity: number\n) {\n  return needs.set(\n    index,\n    mutateCalcProjectNeed({\n      ...needs.get(index),\n      quantity,\n    } as ProjectNeed)\n  );\n}\n\nfunction setNeedPower(needs: List<ProjectNeed>, index: number, power: number) {\n  return needs.set(\n    index,\n    mutateCalcProjectNeed({\n      ...needs.get(index),\n      power,\n    } as ProjectNeed)\n  );\n}\n\nfunction setNeedHours(needs: List<ProjectNeed>, index: number, hours: number) {\n  return needs.set(\n    index,\n    mutateCalcProjectNeed({\n      ...needs.get(index),\n      hours,\n    } as ProjectNeed)\n  );\n}\n\nfunction toggleNeedSelected(needs: List<ProjectNeed>, index: number) {\n  const need = needs.get(index)!;\n  return needs.set(\n    index,\n    mutateCalcProjectNeed({\n      ...need,\n      selected: !need.selected,\n    } as ProjectNeed)\n  );\n}\n\nfunction addNeed(needs: List<ProjectNeed>) {\n  return needs.push(\n    mutateCalcProjectNeed({\n      name: \"\",\n      hours: 0,\n      power: 0,\n      quantity: 0,\n      selected: false,\n    } as ProjectNeed)\n  );\n}\n\nfunction isNeedUnselected(need: ProjectNeed) {\n  return !need.selected;\n}\n\nexport default function Besoins({\n  current,\n  needs,\n  setNeeds,\n}: {\n  current: number;\n  needs: List<ProjectNeed>;\n  setNeeds(id: number, needs: List<ProjectNeed>): void;\n}) {\n  const total = needs.reduce(reduceProjectTotalNeed, {\n    name: \"Total\",\n    energy: 0,\n    hours: 0,\n    power: 0,\n    prolifiratedPower: 0,\n    quantity: 0,\n    selected: false,\n  });\n\n  return (\n    <>\n      <div className=\"table-responsive\">\n        <table className=\"table table-sm table-hover align-middle table-needs\">\n          <thead>\n            <tr>\n              <td className=\"d-print-none\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n              <th scope=\"col\" title=\"Nom de l'equipement\">\n                Equipement\n              </th>\n              <th scope=\"col\" title=\"Nombre d'heurs d'uitilisation par jour\">\n                Utilisation (h/j)\n              </th>\n              <th scope=\"col\" title=\"Quantité d'equipement utilisé\">\n                Quantité\n              </th>\n              <th scope=\"col\" title=\"Puissance de l'equipement en KiloWatt\">\n                Puissance (w)\n              </th>\n              <th scope=\"col\" title=\"Puissance des equipements en KiloWatt\">\n                Puissance foisonée (w)\n              </th>\n              <th\n                scope=\"col\"\n                title=\"Energie consomée par les equipements en KiloWatt-heur par jour\"\n              >\n                Energie (Kwh/j)\n              </th>\n            </tr>\n          </thead>\n          {needs.size >= 0 ? (\n            <>\n              <tbody>\n                {needs.map((need, index) => (\n                  <tr\n                    key={index}\n                    tabIndex={-1}\n                    style={{\n                      cursor: \"default\",\n                    }}\n                    className={need.name ? \"\" : \"table-warning\"}\n                    onClick={(e) => {\n                      // @ts-ignore\n                      if (e.target.tagName !== \"TD\") return;\n                      setNeeds(current, toggleNeedSelected(needs, index));\n                    }}\n                  >\n                    <td className=\"d-print-none\">\n                      {need.selected ? (\n                        <span\n                          role=\"img\"\n                          aria-label=\"Selectionné\"\n                          style={{\n                            userSelect: \"none\",\n                            pointerEvents: \"none\",\n                            touchAction: \"none\",\n                          }}\n                        >\n                          ✔️\n                        </span>\n                      ) : null}\n                    </td>\n                    <th>\n                      <input\n                        type=\"text\"\n                        className=\"form-control-plaintext\"\n                        value={need.name}\n                        onChange={(e) =>\n                          setNeeds(\n                            current,\n                            setNeedName(needs, index, e.target.value)\n                          )\n                        }\n                      />\n                    </th>\n                    <td>\n                      <input\n                        type=\"number\"\n                        min=\"1\"\n                        max=\"24\"\n                        step=\"0\"\n                        className=\"form-control-plaintext\"\n                        value={Math.round(need.hours)}\n                        onChange={(e) =>\n                          setNeeds(\n                            current,\n                            setNeedHours(needs, index, e.target.valueAsNumber)\n                          )\n                        }\n                      />\n                    </td>\n                    <td>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"1\"\n                        className=\"form-control-plaintext\"\n                        value={Math.round(need.quantity)}\n                        onChange={(e) =>\n                          setNeeds(\n                            current,\n                            setNeedQuantity(\n                              needs,\n                              index,\n                              e.target.valueAsNumber\n                            )\n                          )\n                        }\n                      />\n                    </td>\n                    <td>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.01\"\n                        className=\"form-control-plaintext\"\n                        value={need.power}\n                        onChange={(e) =>\n                          setNeeds(\n                            current,\n                            setNeedPower(needs, index, e.target.valueAsNumber)\n                          )\n                        }\n                      />\n                    </td>\n                    <td>{need.prolifiratedPower}</td>\n                    <td>{need.energy.toFixed(2)}</td>\n                  </tr>\n                ))}\n              </tbody>\n              <tfoot>\n                <tr>\n                  <td className=\"d-print-none\"></td>\n                  <th scope=\"row\">Total</th>\n                  <td>{Math.round(total!.hours)}</td>\n                  <td>{Math.round(total!.quantity)}</td>\n                  <td>{total!.power.toFixed(2)}</td>\n                  <td>{total!.prolifiratedPower.toFixed(2)}</td>\n                  <td>{total!.energy.toFixed(2)}</td>\n                </tr>\n              </tfoot>\n            </>\n          ) : null}\n        </table>\n      </div>\n      <div className=\"d-flex d-print-none flex-wrap justify-content-evenly mb-2\">\n        <button\n          disabled={needs.every(isNeedUnselected)}\n          onClick={() => {\n            if (window.confirm(\"Voulez vous vraiment supprimer les lignes ?\")) {\n              setNeeds(current, needs.filter(isNeedUnselected));\n            }\n          }}\n          type=\"button\"\n          className=\"btn btn-danger\"\n          title=\"Supprimer la selection\"\n        >\n          Supprimer\n        </button>\n        <button\n          onClick={async () => {\n            try {\n              const file = await selectFiles({\n                accept: \".csv\",\n                multiple: false,\n              });\n              // @ts-ignore\n              const content = await file.text();\n              const values: ProjectNeed[] = parseCSV(\n                content,\n                ([name, hours, quantity, power]) =>\n                  mutateCalcProjectNeed({\n                    name,\n                    hours: clamp(parseInt(hours), 1, 24),\n                    quantity: Math.max(1, parseInt(quantity)),\n                    power: Math.max(0, parseFloat(power)),\n                    selected: false,\n                  } as ProjectNeed)\n              );\n              setNeeds(current, needs.push(...values));\n            } catch (e) {\n              console.warn(e);\n            }\n          }}\n          type=\"button\"\n          className=\"btn btn-warning\"\n        >\n          Importer\n        </button>\n        <button\n          onClick={() => setNeeds(current, addNeed(needs))}\n          type=\"button\"\n          className=\"btn btn-success\"\n        >\n          Ajouter\n        </button>\n      </div>\n    </>\n  );\n}\n","export function clamp(value: number, min: number, max: number) {\n  return Math.min(max, Math.max(min, value));\n}\n","import React from \"react\";\n\nexport default function ReadonlyUnitField({\n  label,\n  value,\n  unit,\n}: {\n  unit: string;\n  label: string | (() => JSX.Element);\n  value: string | number;\n}) {\n  return (\n    <div className=\"mb-3 row\">\n      <label className=\"offset-sm-2 col-sm-4 col-form-label\">\n        {typeof label === \"string\" ? label : label()}:\n      </label>\n      <div className=\"col-sm-4\">\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            value={value}\n            readOnly\n            className=\"form-control form-control-sm\"\n          />\n          <span className=\"input-group-text\">{unit}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport interface ChoiceItem {\n  name: string;\n}\n\nexport default function ChoiceBox({\n  label,\n  items,\n  value,\n  onChange,\n}: {\n  label: string;\n  items: ChoiceItem[];\n  value: number;\n  onChange(value: number): void;\n}) {\n  return (\n    <div className=\"mb-3 row\">\n      <label className=\"offset-sm-2 col-sm-4 col-form-label\">{label}:</label>\n      <div className=\"col-sm-4\">\n        <div className=\"input-group\">\n          <select\n            className=\"form-select form-select-sm\"\n            value={value}\n            onChange={(e) => onChange(parseInt(e.target.value, 10))}\n          >\n            <option value={-1}></option>\n            {items.map((item, index) => {\n              return (\n                <option key={index} value={index}>\n                  {item.name}\n                </option>\n              );\n            })}\n          </select>\n          <Link to=\"/models\" className=\"btn btn-outline-secondary btn-sm\">\n            ⋮\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ReadonlyField({\n  label,\n  value,\n}: {\n  label: string;\n  value: string | number;\n}) {\n  return (\n    <div className=\"mb-3 row\">\n      <label className=\"offset-sm-2 col-sm-4 col-form-label\">{label}:</label>\n      <div className=\"col-sm-4\">\n        <input\n          type=\"text\"\n          className=\"form-control form-control-sm\"\n          readOnly\n          value={value}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { HTMLProps } from \"react\";\n\nexport default function UnitField({\n  value,\n  setValue,\n  field,\n  unit,\n  ...props\n}: HTMLProps<HTMLInputElement> & {\n  unit: string;\n  field: string | (() => JSX.Element);\n  value: number | string;\n  setValue(value: number): void;\n}) {\n  return (\n    <div className=\"mb-3 row\">\n      <label className=\"offset-sm-2 col-sm-4 col-form-label\">\n        {typeof field === \"string\" ? field : field()}:\n      </label>\n      <div className=\"col-sm-4\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"number\"\n            value={value}\n            onChange={(e) => setValue(e.target.valueAsNumber)}\n            className=\"form-control form-control-sm\"\n            {...props}\n          />\n          <span className=\"input-group-text\">{unit}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { HTMLProps } from \"react\";\n\nexport default function NumberField({\n  value,\n  setValue,\n  field,\n  ...props\n}: HTMLProps<HTMLInputElement> & {\n  field: string | (() => JSX.Element);\n  value: number | string;\n  setValue(value: number): void;\n}) {\n  return (\n    <div className=\"mb-1 row\">\n      <label className=\"offset-sm-2 col-sm-4 col-form-label\">\n        {typeof field === \"string\" ? field : field()}:\n      </label>\n      <div className=\"col-sm-4\">\n        <input\n          type=\"number\"\n          value={value}\n          onChange={(e) => setValue(e.target.valueAsNumber)}\n          className=\"form-control form-control-sm\"\n          {...props}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\ntype Label =\n  | {\n      (): JSX.Element;\n    }\n  | string;\n\ntype Field = {\n  name: string;\n  label: Label;\n};\n\nfunction renderLabel(label: Label) {\n  return typeof label === \"string\" ? label : label();\n}\n\nconst rowsCache = new WeakMap<Record<string, Label>, [Field, Field][]>();\n\nfunction getRows(labels: Record<string, Label>) {\n  if (rowsCache.has(labels)) return rowsCache.get(labels)!;\n  const names = Object.keys(labels);\n  const values = Object.values(labels);\n  const rows: [Field, Field][] = [];\n  const count = names.length;\n  // alert(count);\n  for (let i = 0; i < count; i += 2) {\n    const row: Field[] = [];\n    row.push({\n      name: names[i],\n      label: values[i],\n    });\n    if (i !== count - 1) {\n      row.push({\n        name: names[i + 1],\n        label: values[i + 1],\n      });\n    }\n    rows.push(row as any);\n  }\n  rowsCache.set(labels, rows);\n  return rows;\n}\n\nfunction ModuleRecord({\n  module,\n  rows,\n}: {\n  module: Record<string, number | string>;\n  rows: [Field, Field][];\n}) {\n  return (\n    <>\n      {rows.map(([first, second], index) => {\n        return (\n          <div className=\"mb-2 row\" key={index}>\n            <div className=\"col-sm-6\">\n              <div className=\"d-flex\">\n                <div className=\"flex-fill\">{renderLabel(first.label)}:</div>\n                <div className=\"flex-fill text-right\">{module[first.name]}</div>\n              </div>\n            </div>\n            {second ? (\n              <div className=\"col-sm-6\">\n                <div className=\"d-flex\">\n                  <div className=\"flex-fill\">{renderLabel(second.label)}:</div>\n                  <div className=\"flex-fill text-right\">\n                    {module[second.name]}\n                  </div>\n                </div>\n              </div>\n            ) : null}\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nexport default function ModuleFields({\n  module,\n  labels,\n}: {\n  module?: Record<string, number | string> | null;\n  labels: Record<string, Label>;\n}) {\n  return (\n    <div className=\"mb-3 row\">\n      <div className=\"offset-sm-1 col-sm-10\">\n        <div className=\"card bg-light\">\n          <div className=\"card-body\">\n            {\" \"}\n            {module ? (\n              <ModuleRecord module={module} rows={getRows(labels)} />\n            ) : (\n              \"Selectionner une module.\"\n            )}{\" \"}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Project } from \"../state/State\";\nimport { PVModules } from \"../state/reducer\";\nimport { ProjectValueName } from \"../state/actions\";\n\nimport ReadonlyUnitField from \"../components/ReadonlyUnitField\";\nimport ChoiceBox from \"../components/ChoiceBox\";\nimport ReadonlyField from \"../components/ReadonlyField\";\nimport UnitField from \"../components/UnitField\";\nimport NumberField from \"../components/NumberField\";\nimport ModuleFields from \"../components/ModuleFields\";\nimport { n } from \"../utils/numbers\";\n\nconst labels = {\n  type: \"Type\",\n  Pm: \"Puissance max\",\n  Voc: \"Tension en circuit ouvert\",\n  Isc: \"Courant de court-circuit\",\n  Vmp: \"Tension de puissance max\",\n  Imp: \"Courant de puissance max\",\n};\n\nexport default function PV({\n  project,\n  setValue,\n}: {\n  project: Project;\n  setValue(name: ProjectValueName, value: number): void;\n}) {\n  const PV = PVModules[project.module];\n\n  return (\n    <>\n      <ReadonlyUnitField\n        label=\"Energy total\"\n        value={n(project.energyBesoinTotal, 2)}\n        unit=\"Kwh/j\"\n      />\n      <NumberField\n        field={() => (\n          <>\n            H<sub>tilt</sub>\n          </>\n        )}\n        value={n(project.Htilt)}\n        min={0}\n        step={0.01}\n        setValue={(value) => setValue(\"Htilt\", value)}\n      />\n      <NumberField\n        field={() => (\n          <>\n            K<sub>loss</sub>\n          </>\n        )}\n        value={n(project.Kloss)}\n        min={0}\n        step={0.01}\n        setValue={(value) => setValue(\"Kloss\", value)}\n      />\n      <NumberField\n        field=\"Efficacite d'equilibre\"\n        value={n(project.Ƞb)}\n        min={0}\n        step={0.01}\n        setValue={(value) => setValue(\"Ƞb\", value)}\n      />\n      <hr />\n      <ReadonlyUnitField\n        label=\"Puissance à installer\"\n        value={n(project.Pc, 2)}\n        unit=\"Kw\"\n      />\n      <ChoiceBox\n        label=\"Choix de module\"\n        items={PVModules}\n        value={project.module}\n        onChange={(value) => setValue(\"module\", value)}\n      />\n      <ModuleFields\n        module={\n          PV\n            ? {\n                type: PV.type,\n                Pm: `${PV.Pm} Wc`,\n                Voc: `${PV.Voc} V`,\n                Isc: `${PV.Isc} A`,\n                Vmp: `${PV.Vmp} V`,\n                Imp: `${PV.Imp} A`,\n              }\n            : null\n        }\n        labels={labels}\n      />\n      <UnitField\n        value={n(project.Vsystem)}\n        unit=\"V\"\n        min={0}\n        max={48}\n        step={12}\n        field=\"Tension du system\"\n        setValue={(value) => setValue(\"Vsystem\", value)}\n      />\n      <ReadonlyField label=\"Modules en serie\" value={n(project.Msc)} />\n      <ReadonlyField label=\"Modules en parallel\" value={n(project.Mpc)} />\n      <ReadonlyField label=\"Nombre de modules total\" value={n(project.Mt)} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { ProjectValueName } from \"../state/actions\";\nimport ReadonlyUnitField from \"../components/ReadonlyUnitField\";\nimport ChoiceBox from \"../components/ChoiceBox\";\nimport { BatteryModules } from \"../state/reducer\";\nimport { Project, ModelBattery } from \"../state/State\";\nimport ModuleFields from \"../components/ModuleFields\";\nimport NumberField from \"../components/NumberField\";\nimport ReadonlyField from \"../components/ReadonlyField\";\nimport { n, percentage } from \"../utils/numbers\";\n\nconst labels: Record<keyof ModelBattery, string> = {\n  model: \"Model\",\n  vendor: \"Marque\",\n  Vnom: \"Tension norminale\",\n  Cnom: \"Capacite nominale\",\n  Ƞ: \"Rendement\",\n};\n\nexport default function DimBatteries({\n  project,\n  setValue,\n}: {\n  project: Project;\n  setValue(name: ProjectValueName, value: number): void;\n}) {\n  const Nc = project.Nc;\n  const DODmax = project.DODmax;\n  const Ƞout = project.Ƞout;\n\n  const index = project.battery;\n  const battery = index === -1 ? null : BatteryModules[index];\n\n  const Cx = n(project.Cx, 2);\n  const Bsc = project.Bsc;\n  const Bpc = project.Bpc;\n  const Bt = project.Bt;\n\n  return (\n    <>\n      <NumberField\n        field=\"Nc\"\n        min={1}\n        max={10}\n        value={Nc}\n        setValue={(value) => setValue(\"Nc\", value)}\n      />\n      <NumberField\n        field=\"DODmax\"\n        min={0.01}\n        max={1}\n        step={0.01}\n        value={DODmax}\n        setValue={(value) => setValue(\"DODmax\", value)}\n      />\n      <NumberField\n        field=\"Ƞout\"\n        min={0.01}\n        max={1}\n        step={0.01}\n        value={Ƞout}\n        setValue={(value) => setValue(\"Ƞout\", value)}\n      />\n      <ReadonlyUnitField\n        label=\"Capacite des batteries a installer\"\n        value={Cx}\n        unit=\"Ah\"\n      />\n      <ChoiceBox\n        label=\"Choix de battries\"\n        onChange={(value) => setValue(\"battery\", value)}\n        value={project.battery}\n        items={BatteryModules.map((module) => ({\n          ...module,\n          name: `${module.Vnom}V / ${module.Cnom} Ah ${module.vendor}`,\n        }))}\n      />\n      <ModuleFields\n        labels={labels}\n        module={\n          battery\n            ? {\n                model: battery.model,\n                vendor: battery.vendor,\n                Vnom: `${battery.Vnom} V`,\n                Cnom: `${battery.Cnom} Ah`,\n                Ƞ: `${percentage(battery.Ƞ)}`,\n              }\n            : null\n        }\n      />\n      <ReadonlyField label=\"Nombre des battries total\" value={n(Bt)} />\n      <ReadonlyField label=\"Nombre des battries en series\" value={n(Bsc)} />\n      <ReadonlyField label=\"Nombre des battries en parallel\" value={n(Bpc)} />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { ProjectValueName } from \"../state/actions\";\nimport { Project, ModelOnduleur } from \"../state/State\";\nimport ReadonlyUnitField from \"../components/ReadonlyUnitField\";\nimport ChoiceBox from \"../components/ChoiceBox\";\nimport { InverterModules as InverterModels } from \"../state/reducer\";\nimport ModuleFields from \"../components/ModuleFields\";\nimport { percentage, n } from \"../utils/numbers\";\nimport ReadonlyField from \"../components/ReadonlyField\";\n\nconst labels: Record<keyof ModelOnduleur, string> = {\n  vendor: \"Marque\",\n  Pnom: \"Puissance nominale\",\n  PVmpp: \"Plage de tension MPP\",\n  Vmax: \"Tension maximal\",\n  Ƞ: \"Rendement\",\n};\n\nexport default function DimOnduleur({\n  project,\n  setValue,\n}: {\n  project: Project;\n  setValue(name: ProjectValueName, value: number): void;\n}) {\n  const index = project.inverter;\n  const inverter = index === -1 ? null : InverterModels[index];\n  return (\n    <>\n      <ReadonlyUnitField\n        value={n(project.Pi, 2)}\n        unit=\"Kw\"\n        label=\"Puissance d'onduleur\"\n      />\n      <ReadonlyUnitField\n        value={n(project.Vsystem, 2)}\n        unit=\"V\"\n        label=\"Tension d'onduleur\"\n      />\n      <ChoiceBox\n        value={index}\n        onChange={(value) => setValue(\"inverter\", value)}\n        items={InverterModels.map((model) => ({\n          ...model,\n          name: `${model.vendor} - ${model.Pnom} Kw - Inverter`,\n        }))}\n        label=\"Choix d'onduleur\"\n      />\n      <ModuleFields\n        labels={labels}\n        module={\n          inverter\n            ? {\n                vendor: inverter.vendor,\n                Pnom: `${inverter.Pnom} KVA`,\n                PVmpp: `de ${inverter.PVmpp.join(\" a \")} V`,\n                Vmax: `${inverter.Vmax} V`,\n                Ƞ: `${percentage(inverter.Ƞ)}`,\n              }\n            : null\n        }\n      />\n      <ReadonlyField\n        value={n(project.nombreOnduleur)}\n        label=\"Nombre d'onduleur\"\n      />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { ProjectValueName } from \"../state/actions\";\nimport { Project, ModelRegulateur } from \"../state/State\";\nimport ReadonlyUnitField from \"../components/ReadonlyUnitField\";\nimport ReadonlyField from \"../components/ReadonlyField\";\nimport ChoiceBox from \"../components/ChoiceBox\";\nimport { RegulatorModules } from \"../state/reducer\";\nimport ModuleFields from \"../components/ModuleFields\";\nimport { n } from \"../utils/numbers\";\n\nconst labels: Record<keyof ModelRegulateur, string> = {\n  name: \"Nom\",\n  I: \"Courant\",\n  Vout: \"Tension de parc batteries\",\n};\n\nexport default function DimFieldsR({\n  project,\n  setValue,\n}: {\n  project: Project;\n  setValue(name: ProjectValueName, value: number): void;\n}) {\n  const index = project.regulator;\n  const regulator = index === -1 ? null : RegulatorModules[index];\n  const Rc = project.Rc;\n  const Irated = project.Irated;\n  return (\n    <>\n      <ReadonlyUnitField\n        value={n(Irated, 2)}\n        unit=\"A\"\n        label={() => (\n          <>\n            I<sub>rated</sub>\n          </>\n        )}\n      />\n      <ChoiceBox\n        value={index}\n        onChange={(value) => setValue(\"regulator\", value)}\n        items={RegulatorModules}\n        label=\"Choix de regulateur\"\n      />\n      <ModuleFields\n        labels={labels}\n        module={\n          regulator\n            ? {\n                name: regulator.name,\n                I: `${regulator.I} A`,\n                Vout: `${regulator.Vout} V`,\n              }\n            : null\n        }\n      />\n      <ReadonlyField value={n(Rc)} label=\"Nombre de regulateur\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport { Project } from \"../state/State\";\nimport { ProjectValueName } from \"../state/actions\";\n\nimport { ρ, Vic } from \"../state/reducer\";\nimport { n } from \"../utils/numbers\";\n\nfunction formatExponentialNumber(x: number) {\n  const [F, e] = x.toExponential(2).split(\"e\");\n  const E = parseInt(e, 10);\n  return (\n    <>\n      {F}&times;10<sup>{E}</sup>\n    </>\n  );\n}\n\nexport default function Cables({\n  project,\n  setValue,\n}: {\n  project: Project;\n  setValue(name: ProjectValueName, value: number): void;\n}) {\n  return (\n    <>\n      <div className=\"table-responsive\">\n        <table className=\"table table-sm table-hover align-middle\">\n          <thead>\n            <tr>\n              <th></th>\n              <th>ρ (Ωm)</th>\n              <th>L (m)</th>\n              <th>I (A)</th>\n              <th>\n                V<sub>d</sub> (V)\n              </th>\n              <th>\n                S (mm<sup>2</sup>)\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>Cables entre PV et regulateur</th>\n              <td>{formatExponentialNumber(ρ)}</td>\n              <td>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  step=\"0.01\"\n                  className=\"form-control-plaintext\"\n                  value={project.Lmr}\n                  onChange={(e) => setValue(\"Lmr\", e.target.valueAsNumber)}\n                />\n              </td>\n              <td>{n(project.Irated, 2)}</td>\n              <td>{n(project.Vmr, 2)}</td>\n              <td>{n(project.Smr, 2)}</td>\n            </tr>\n            <tr>\n              <th>Cables entre parc battries et l'oduleur</th>\n              <td>{formatExponentialNumber(ρ)}</td>\n              <td>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  step=\"0.01\"\n                  className=\"form-control-plaintext\"\n                  value={project.Lbi}\n                  onChange={(e) => setValue(\"Lbi\", e.target.valueAsNumber)}\n                />\n              </td>\n              <td>{n(project.Ibi, 2)}</td>\n              <td>{n(project.Vbi, 2)}</td>\n              <td>{n(project.Sbi, 2)}</td>\n            </tr>\n            <tr>\n              <th>Cables entre L'onduleur et la charge</th>\n              <td>{formatExponentialNumber(ρ)}</td>\n              <td>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  step=\"0.01\"\n                  className=\"form-control-plaintext\"\n                  value={project.Lic}\n                  onChange={(e) => setValue(\"Lic\", e.target.valueAsNumber)}\n                />\n              </td>\n              <td>{n(project.Iic, 2)}</td>\n              <td>{n(Vic, 2)}</td>\n              <td>{n(project.Sic, 2)}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Project } from \"./state/State\";\nimport { PVModules, RegulatorModules, InverterModules } from \"./state/reducer\";\nimport { n } from \"./utils/numbers\";\n\nfunction getTimeStamp() {\n  return Math.floor(Date.now() / 1000) * 1000;\n}\n\nfunction padInt(n: number, size = 2) {\n  return n.toString().padStart(size, \"0\");\n}\n\nfunction getMonth(date: Date) {\n  return padInt(date.getMonth() + 1);\n}\n\nfunction getDate(date: Date) {\n  return padInt(date.getDate());\n}\n\nfunction getHours(date: Date) {\n  return padInt(date.getHours());\n}\n\nfunction getMinutes(date: Date) {\n  return padInt(date.getMinutes());\n}\n\nfunction formatDateStamp(stamp: number) {\n  const date = new Date(stamp);\n  return (\n    <>\n      {getDate(date)}/{getMonth(date)}/{date.getFullYear()} {getHours(date)}:\n      {getMinutes(date)}\n    </>\n  );\n}\n\nexport default function Report({ project }: { project: Project }) {\n  const [stamp, setStamp] = useState(getTimeStamp());\n\n  useEffect(() => {\n    const id = setInterval(() => setStamp(getTimeStamp()), 1000);\n    return () => clearInterval(id);\n  }, [stamp]);\n\n  const PVPuissanceProduite = n(PVModules[project.module]?.Pm, 2, \"Kw\");\n  const PVNombreSerie = n(project.Msc);\n  const PVNombreParallel = n(project.Mpc);\n  const PVNombreTotal = n(project.Mt);\n\n  const BatCapacite = n(project.Cx, 2, \"Ah\");\n  const BatNombreSerie = n(project.Bsc);\n  const BatNombreParallel = n(project.Bpc);\n  const BatNombreTotal = n(project.Bt);\n\n  const RegCapacite = n(RegulatorModules[project.regulator]?.I, 2, \"A\");\n  const RegNombre = n(project.Rc);\n\n  const OndCapacite = n(InverterModules[project.inverter]?.Pnom, 2, \"KVA\");\n  const OndBesoinEntre = n(project.Vsystem, undefined, \"V\");\n  const OndNombre = n(project.nombreOnduleur);\n\n  const CablePVReg = `${n(project.Irated, 2, \"A\")}; ${n(\n    project.Smr,\n    2,\n    \"mm²\"\n  )}`;\n  const CableBatsOnd = `${n(project.Ibi, 2, \"A\")}; ${n(project.Sbi, 2, \"mm²\")}`;\n  const CableOndCharge = `${n(project.Iic, 2, \"A\")}; ${n(\n    project.Sic,\n    2,\n    \"mm²\"\n  )}`;\n\n  return (\n    <>\n      <div className=\"border rounded-sm border-secondary text-center p-2\">\n        <div className=\"row justify-content-between align-items-center mb-3\">\n          <div className=\"d-none d-print-flex col-3 align-items-center justify-content-start\">\n            <img\n              src={process.env.PUBLIC_URL + \"/Header-logo.png\"}\n              height=\"32\"\n              alt=\"Trust Energy\"\n            />\n          </div>\n          <div className=\"d-none d-print-block col-6\">\n            Date de simulation: {formatDateStamp(stamp)}\n          </div>\n          <div className=\"d-print-none\">\n            Date de simulation: {formatDateStamp(stamp)}\n            <div className=\"d-print-none my-1\">\n              <button\n                className=\"btn btn-success\"\n                onClick={() => window.print()}\n              >\n                Imprimer\n              </button>\n            </div>\n          </div>\n          <div className=\"d-none d-print-flex col-3 align-items-center justify-content-end\">\n            <img\n              src={process.env.PUBLIC_URL + \"/logo-carré.png\"}\n              height=\"32\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"border rounded-sm border-secondary mt-1 p-2\">\n        <div className=\"d-flex flex-column justify-content-center align-items-stretch text-center\">\n          <h1>Syst&egrave;me isol&eacute; avec battries</h1>\n          <h3>rapport de simulation</h3>\n        </div>\n        <p>\n          <b>Nom du projet</b>: {project.name}\n        </p>\n        <p>\n          <b>Site geographique</b>: {project.site}\n        </p>\n        <p>\n          <b>La consomation moyenne journali&egrave;re</b>:{\" \"}\n          {project.energyBesoinTotal} Kwh/j\n        </p>\n        <p>\n          <b>La production energetique</b>: {PVPuissanceProduite}\n        </p>\n        <p>\n          <b>Capacite de stockage</b>: {BatCapacite}\n        </p>\n        <figure className=\"text-center p-1\">\n          <img\n            width=\"60%\"\n            className=\"border rounded-sm border-secondary p-3\"\n            src={(process.env.PUBLIC_URL + \"/diagram.svg\").replace(/\\/\\//, \"/\")}\n            alt=\"Schema de l'installation\"\n          />\n          <figcaption className=\"figure-caption\">\n            Schema de l'installation.\n          </figcaption>\n        </figure>\n        <h5>Bilan de dimensionnement</h5>\n        <div className=\"table-responsive\">\n          <table className=\"table table-bordered border border-secondary text-center align-middle\">\n            <thead>\n              <th className=\"border border-secondary\">Composant</th>\n              <th className=\"border border-secondary\">\n                Description du composant\n              </th>\n              <th className=\"border border-secondary\">Resultats</th>\n            </thead>\n            <tbody>\n              <tr>\n                <th>Estimation du besoin</th>\n                <td className=\"text-left\">\n                  L'energie moyenne journaliere a consommer\n                </td>\n                <td>{project.energyBesoinTotal} Kwh/j</td>\n              </tr>\n              <tr>\n                <th rowSpan={4}>ChampPV</th>\n                <td className=\"text-left\">La puissance produite</td>\n                <td>{PVPuissanceProduite}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Nombre de PV en serie</td>\n                <td>{PVNombreSerie}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Nombre de PV en parallel</td>\n                <td>{PVNombreParallel}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Nombre total des panneaux</td>\n                <td>{PVNombreTotal}</td>\n              </tr>\n              <tr>\n                <th rowSpan={4}>Parc batteries</th>\n                <td className=\"text-left\">La capacite des batteries</td>\n                <td>{BatCapacite}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Nombre de battries en serie</td>\n                <td>{BatNombreSerie}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Nombre des battries en parallel</td>\n                <td>{BatNombreParallel}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Nombre total des battries</td>\n                <td>{BatNombreTotal}</td>\n              </tr>\n              <tr>\n                <th rowSpan={2}>Regulateur</th>\n                <td className=\"text-left\">Capacite du regulateur</td>\n                <td>{RegCapacite}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Nombre de regulateur</td>\n                <td>{RegNombre}</td>\n              </tr>\n              <tr>\n                <th rowSpan={3}>Onduleur</th>\n                <td className=\"text-left\">Capacite d'onduleur</td>\n                <td>{OndCapacite}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Besoin d'entree</td>\n                <td>{OndBesoinEntre}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Nombre d'onduleur</td>\n                <td>{OndNombre}</td>\n              </tr>\n              <tr>\n                <th rowSpan={3}>Cables</th>\n                <td className=\"text-left\">Entre champ PV et regulateur</td>\n                <td>{CablePVReg}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Entre battries et onduleur</td>\n                <td>{CableBatsOnd}</td>\n              </tr>\n              <tr>\n                <td className=\"text-left\">Entre onduleur et charge</td>\n                <td>{CableOndCharge}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className=\"d-print-none text-center\">\n          <button className=\"btn btn-success\" onClick={() => window.print()}>\n            Imprimer\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport State, { Project } from \"./state/State\";\n\nimport { connect } from \"react-redux\";\nimport { setProjectNeeds, setProjectValue } from \"./state/actions\";\n\nimport Besoins from \"./Besoins\";\nimport PV from \"./dimentionement/PV\";\nimport DimBatteries from \"./dimentionement/Battries\";\nimport DimOnduleur from \"./dimentionement/Onduleur\";\nimport DimFieldsR from \"./dimentionement/Regulateur\";\nimport Cables from \"./dimentionement/Cables\";\nimport Report from \"./Report\";\n\nexport default connect(\n  (state: State, { current }: { current: number }) => {\n    return {\n      current,\n      project: state.projects.find((project) => {\n        return project.id === current;\n      }),\n    };\n  },\n  {\n    setNeeds: setProjectNeeds,\n    setValue: setProjectValue,\n  }\n)(function ProjectContent({\n  project,\n  setNeeds,\n  setValue,\n}: {\n  project?: Project;\n  setNeeds: typeof setProjectNeeds;\n  setValue: typeof setProjectValue;\n}) {\n  return project ? (\n    <>\n      <div className=\"col-xl-8\">\n        <ul className=\"nav nav-tabs d-print-none\">\n          <li className=\"nav-item flex-sm-fill\">\n            <a\n              className=\"nav-link link-success active\"\n              data-toggle=\"tab\"\n              href=\"#needs\"\n            >\n              Besoins\n            </a>\n          </li>\n          <li className=\"nav-item flex-sm-fill\">\n            <a\n              className=\"nav-link link-success\"\n              data-toggle=\"tab\"\n              href=\"#dim-pv\"\n            >\n              Dim. PV\n            </a>\n          </li>\n          <li className=\"nav-item flex-sm-fill\">\n            <a\n              className=\"nav-link link-success\"\n              data-toggle=\"tab\"\n              href=\"#dim-bat\"\n            >\n              Dim. Batteries\n            </a>\n          </li>\n          <li className=\"nav-item flex-sm-fill\">\n            <a\n              className=\"nav-link link-success\"\n              data-toggle=\"tab\"\n              href=\"#dim-ond\"\n            >\n              Dim. Onduleur\n            </a>\n          </li>\n          <li className=\"nav-item flex-sm-fill\">\n            <a\n              className=\"nav-link link-success\"\n              data-toggle=\"tab\"\n              href=\"#dim-reg\"\n            >\n              Dim. Regulateurs\n            </a>\n          </li>\n          <li className=\"nav-item flex-sm-fill\">\n            <a\n              className=\"nav-link link-success\"\n              data-toggle=\"tab\"\n              href=\"#dim-cab\"\n            >\n              Dim. Cables\n            </a>\n          </li>\n          <li className=\"nav-item flex-sm-fill\">\n            <a\n              className=\"nav-link link-success\"\n              data-toggle=\"tab\"\n              href=\"#dim-rep\"\n            >\n              Rapport\n            </a>\n          </li>\n        </ul>\n        <div className=\"tab-content\">\n          <div className=\"tab-pane py-4 fade show active\" id=\"needs\">\n            <Besoins\n              current={project.id}\n              needs={project.needs}\n              setNeeds={setNeeds}\n            />\n          </div>\n          <div className=\"tab-pane py-4 fade\" id=\"dim-pv\">\n            <PV\n              project={project}\n              setValue={(name, value) => setValue(project.id, name, value)}\n            />\n          </div>\n          <div className=\"tab-pane py-4 fade\" id=\"dim-bat\">\n            <DimBatteries\n              project={project}\n              setValue={(name, value) => setValue(project.id, name, value)}\n            />\n          </div>\n          <div className=\"tab-pane py-4 fade\" id=\"dim-ond\">\n            <DimOnduleur\n              project={project}\n              setValue={(name, value) => setValue(project.id, name, value)}\n            />\n          </div>\n          <div className=\"tab-pane py-4 fade\" id=\"dim-reg\">\n            <DimFieldsR\n              project={project}\n              setValue={(name, value) => setValue(project.id, name, value)}\n            />\n          </div>\n          <div className=\"tab-pane py-4 fade\" id=\"dim-cab\">\n            <Cables\n              project={project}\n              setValue={(name, value) => setValue(project.id, name, value)}\n            />\n          </div>\n          <div className=\"tab-pane py-4 fade\" id=\"dim-rep\">\n            <Report project={project} />\n          </div>\n        </div>\n      </div>\n    </>\n  ) : (\n    <>\n      <div className=\"col-xl-4\"></div>\n    </>\n  );\n});\n","import React from \"react\";\nimport ProjectList from \"./ProjectList\";\nimport ProjectContent from \"./ProjectContent\";\nimport { RouteComponentProps, Redirect } from \"react-router\";\n\nexport default function ProjectView({\n  match: {\n    params: { id },\n  },\n}: RouteComponentProps<{\n  id?: string;\n}>) {\n  const current = id ? parseInt(id, 10) : -1;\n  return (\n    <>\n      {isFinite(current) && current !== -1 ? (\n        <Redirect to={`/p/${current}`} />\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n      <div className=\"row\">\n        <ProjectContent current={current} />\n        <div className=\"col-xl-4\">\n          <ProjectList current={current} />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport {\n  BatteryModules,\n  InverterModules,\n  PVModules,\n  RegulatorModules,\n} from \"./state/reducer\";\n\nfunction useSave(name: string, ref: unknown) {\n  const [toggle, set] = useState(false);\n  return [\n    () => {\n      localStorage.setItem(\"pv\", JSON.stringify(ref));\n      set(!toggle);\n    },\n    () => {\n      localStorage.removeItem(\"pv\");\n      window.location.reload();\n    },\n  ];\n}\n\nlet pvId = 0,\n  battrieId = 0,\n  inverterId = 0,\n  regulatorId = 0;\n\nfunction Regulateurs() {\n  const [save, reset] = useSave(\"regulators\", RegulatorModules);\n  return (\n    <section>\n      <h2>Modules Regulateurs</h2>\n      <button\n        className=\"btn btn-outline-success mr-1\"\n        onClick={(e) => {\n          RegulatorModules.push({\n            name: `Regulator #${regulatorId++}`,\n            I: 0,\n            Vout: 0,\n          });\n          save();\n        }}\n      >\n        Ajouter\n      </button>\n      <button className=\"btn btn-outline-warning\" onClick={reset}>\n        Reinitialiser\n      </button>\n      <div className=\"table-responsive-xxl\">\n        <table\n          className=\"table table-sm table-hover align-middle table-needs p-1\"\n          style={{ minWidth: \"60rem\" }}\n        >\n          <thead>\n            <tr>\n              <td>Nom</td>\n              <td>Courant</td>\n              <td>Tension de parc battries</td>\n              <td></td>\n            </tr>\n          </thead>\n          <tbody>\n            {RegulatorModules.map((model, index) => (\n              <tr key={index}>\n                <th>\n                  <input\n                    type=\"text\"\n                    className=\"form-control-plaintext ml-1\"\n                    value={model.name}\n                    onChange={(e) => {\n                      model.name = e.target.value;\n                      save();\n                    }}\n                  />\n                </th>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.I}\n                      onChange={(e) => {\n                        model.I = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    A\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Vout}\n                      onChange={(e) => {\n                        model.Vout = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    V\n                  </div>\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-outline-danger ml-1\"\n                    onClick={() => {\n                      if (window.confirm(`Supprimer ${model.name} ?`)) {\n                        RegulatorModules.splice(index, 1);\n                        save();\n                      }\n                    }}\n                  >\n                    Supprimer\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </section>\n  );\n}\n\nfunction Onduleurs() {\n  const [save, reset] = useSave(\"inverters\", InverterModules);\n  return (\n    <section>\n      <h2>Modules Battries</h2>\n      <button\n        className=\"btn btn-outline-success mr-1\"\n        onClick={(e) => {\n          InverterModules.push({\n            vendor: `Generic #${inverterId++}`,\n            PVmpp: [0, 0],\n            Pnom: 0,\n            Vmax: 0,\n            Ƞ: 0,\n          });\n          save();\n        }}\n      >\n        Ajouter\n      </button>\n      <button className=\"btn btn-outline-warning\" onClick={reset}>\n        Reinitialiser\n      </button>\n      <div className=\"table-responsive-xxl\">\n        <table\n          className=\"table table-sm table-hover align-middle table-needs p-1\"\n          style={{ minWidth: \"60rem\" }}\n        >\n          <thead>\n            <tr>\n              <td>Marque</td>\n              <td>Plage de tension MPP</td>\n              <td>Puissance nominale</td>\n              <td>Tension maximal</td>\n              <td>Rendement</td>\n              <td></td>\n            </tr>\n          </thead>\n          <tbody>\n            {InverterModules.map((model, index) => (\n              <tr key={index}>\n                <th>\n                  <input\n                    type=\"text\"\n                    className=\"form-control-plaintext ml-1\"\n                    value={model.vendor}\n                    onChange={(e) => {\n                      model.vendor = e.target.value;\n                      save();\n                    }}\n                  />\n                </th>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    {\"[\"}\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.PVmpp[0]}\n                      onChange={(e) => {\n                        model.PVmpp[0] = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    {\"V, \"}\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.PVmpp[1]}\n                      onChange={(e) => {\n                        model.PVmpp[1] = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    {\"V]\"}\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Pnom}\n                      onChange={(e) => {\n                        model.Pnom = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    V\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Vmax}\n                      onChange={(e) => {\n                        model.Vmax = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    V\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Ƞ}\n                      onChange={(e) => {\n                        model.Ƞ = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    Wc\n                  </div>\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-outline-danger ml-1\"\n                    onClick={() => {\n                      if (window.confirm(`Supprimer ${model.vendor} ?`)) {\n                        InverterModules.splice(index, 1);\n                        save();\n                      }\n                    }}\n                  >\n                    Supprimer\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </section>\n  );\n}\n\nfunction Batteries() {\n  const [save, reset] = useSave(\"battries\", BatteryModules);\n  return (\n    <section>\n      <h2>Modules Battries</h2>\n      <button\n        className=\"btn btn-outline-success mr-1\"\n        onClick={(e) => {\n          BatteryModules.push({\n            model: `Battrie #${battrieId++}`,\n            vendor: \"ACMA\",\n            Cnom: 0,\n            Vnom: 0,\n            Ƞ: 0,\n          });\n          save();\n        }}\n      >\n        Ajouter\n      </button>\n      <button className=\"btn btn-outline-warning\" onClick={reset}>\n        Reinitialiser\n      </button>\n      <div className=\"table-responsive-xxl\">\n        <table\n          className=\"table table-sm table-hover align-middle table-needs p-1\"\n          style={{ minWidth: \"60rem\" }}\n        >\n          <thead>\n            <tr>\n              <td>Model</td>\n              <td>Marque</td>\n              <td>Tension nominale</td>\n              <td>Capacite nominale</td>\n              <td>Rendement</td>\n              <td></td>\n            </tr>\n          </thead>\n          <tbody>\n            {BatteryModules.map((model, index) => (\n              <tr key={index}>\n                <th>\n                  <input\n                    type=\"text\"\n                    className=\"form-control-plaintext\"\n                    value={model.model}\n                    onChange={(e) => {\n                      model.model = e.target.value;\n                      save();\n                    }}\n                  />\n                </th>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"form-control-plaintext ml-1\"\n                    value={model.vendor}\n                    onChange={(e) => {\n                      model.vendor = e.target.value;\n                      save();\n                    }}\n                  />\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Vnom}\n                      onChange={(e) => {\n                        model.Vnom = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    V\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Cnom}\n                      onChange={(e) => {\n                        model.Cnom = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    V\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Ƞ}\n                      onChange={(e) => {\n                        model.Ƞ = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    Wc\n                  </div>\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-outline-danger ml-1\"\n                    onClick={() => {\n                      if (window.confirm(`Supprimer ${model.model} ?`)) {\n                        BatteryModules.splice(index, 1);\n                        save();\n                      }\n                    }}\n                  >\n                    Supprimer\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </section>\n  );\n}\n\nfunction PV() {\n  const [save, reset] = useSave(\"pv\", PVModules);\n  return (\n    <section>\n      <h2>Modules PV</h2>\n      <button\n        className=\"btn btn-outline-success mr-1\"\n        onClick={(e) => {\n          PVModules.push({\n            name: `PV #${pvId++}`,\n            type: \"Polycristalline\",\n            Imp: 0,\n            Isc: 0,\n            Pm: 0,\n            Vmp: 0,\n            Voc: 0,\n            output: 0,\n            temperture: [0, 0],\n          });\n          save();\n        }}\n      >\n        Ajouter\n      </button>\n      <button className=\"btn btn-outline-warning\" onClick={reset}>\n        Reinitialiser\n      </button>\n      <div className=\"table-responsive-xxl\">\n        <table\n          className=\"table table-sm table-hover align-middle table-needs p-1\"\n          style={{ minWidth: \"60rem\" }}\n        >\n          <thead>\n            <tr>\n              <td>Name</td>\n              <td>Type</td>\n              <td>Tension en circuit ouvert</td>\n              <td>Tension de puissance max</td>\n              <td>Puissance max</td>\n              <td>Courant de court-circuit</td>\n              <td>Courant de puissance max</td>\n              <td>Sortie</td>\n              <td>Temperture</td>\n              <td></td>\n            </tr>\n          </thead>\n          <tbody>\n            {PVModules.map((model, index) => (\n              <tr key={index}>\n                <th>\n                  <input\n                    type=\"text\"\n                    className=\"form-control-plaintext\"\n                    value={model.name}\n                    onChange={(e) => {\n                      model.name = e.target.value;\n                      save();\n                    }}\n                  />\n                </th>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"form-control-plaintext ml-1\"\n                    value={model.type}\n                    onChange={(e) => {\n                      model.type = e.target.value;\n                      save();\n                    }}\n                  />\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Voc}\n                      onChange={(e) => {\n                        model.Voc = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    V\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Vmp}\n                      onChange={(e) => {\n                        model.Vmp = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    V\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Pm}\n                      onChange={(e) => {\n                        model.Pm = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    Wc\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Isc}\n                      onChange={(e) => {\n                        model.Isc = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    A\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.Imp}\n                      onChange={(e) => {\n                        model.Imp = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    A\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.output}\n                      onChange={(e) => {\n                        model.output = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex align-items-center ml-1\">\n                    {\"[\"}\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.temperture[0]}\n                      onChange={(e) => {\n                        model.temperture[0] = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    {\"°C, \"}\n                    <input\n                      type=\"number\"\n                      className=\"form-control-plaintext text-right\"\n                      value={model.temperture[1]}\n                      onChange={(e) => {\n                        model.temperture[1] = e.target.valueAsNumber;\n                        save();\n                      }}\n                    />\n                    {\"°C]\"}\n                  </div>\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-outline-danger ml-1\"\n                    onClick={() => {\n                      if (window.confirm(`Supprimer ${model.name} ?`)) {\n                        PVModules.splice(index, 1);\n                        save();\n                      }\n                    }}\n                  >\n                    Supprimer\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </section>\n  );\n}\n\nexport default function ModelsView() {\n  return (\n    <>\n      <Regulateurs />\n      <PV />\n      <Batteries />\n      <Onduleurs />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router\";\n\nimport ProjectView from \"./ProjectView\";\nimport ModelsView from \"./ModelsView\";\n\nexport default function AppContent() {\n  return (\n    <div className=\"container-md\">\n      <div className=\"d-print-none mt-3\"></div>\n      <Switch>\n        <Route exact path=\"/\" component={ProjectView} />\n        <Route path=\"/p/:id\" component={ProjectView} />\n        <Route path=\"/models\" component={ModelsView} />\n      </Switch>\n    </div>\n  );\n}\n","import React from \"react\";\nimport store from \"./state/store\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport AppHeader from \"./AppHeader\";\nimport AppContent from \"./AppContent\";\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <AppHeader />\n          <AppContent />\n        </Router>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}