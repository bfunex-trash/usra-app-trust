{"version":3,"sources":["utils/numbers.ts","state/reducer.ts","state/store.ts","AppHeader.tsx","ProjectList.tsx","state/actions.ts","utils/files.ts","utils/csv.ts","Besoins.tsx","utils/math.ts","components/ReadonlyUnitField.tsx","components/ChoiceBox.tsx","components/ReadonlyField.tsx","components/UnitField.tsx","components/TextField.tsx","components/ModuleFields.tsx","dimentionement/PV.tsx","dimentionement/Battries.tsx","dimentionement/Onduleur.tsx","dimentionement/Regulateur.tsx","dimentionement/Cables.tsx","Report.tsx","ProjectContent.tsx","ProjectView.tsx","AppContent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["validate","n","isFinite","NaN","fixed","unit","trim","toFixed","percentage","state","saved","localStorage","getItem","initial","JSON","parse","projects","List","map","project","needs","mutateCalcProjectNeed","energy","hours","prolifiratedPower","quantity","power","reduceProjectNeedsTotalEnergy","total","need","reduceProjectNeedsProlifiratedPower","calculateTotalEnergy","reduce","calculateProlifiratedPower","projectID","maximum","Math","max","id","BatteryModules","model","vendor","Vnom","Cnom","Ƞ","PVModels","name","type","Voc","Vmp","Pm","Isc","Imp","output","temperture","InverterModules","Pnom","PVmpp","Vmax","RegulatorModels","I","Vout","ρ","calcS","L","Vd","calcVd","V","SQRT3","sqrt","Vic","mutateUpdateProject","El","Ƞb","Kloss","Htilt","Vsystem","Pc","energyBesoinTotal","PV","module","Msc","ceil","Mpc","Mt","Nc","DODmax","Ƞout","battery","inverter","Cx","calculateCx","Bt","Bsc","Bpc","floor","Pi","Pf","nombreOnduleur","round","Irated","regulateur","regulator","Rc","Ƞbatterie","Lmr","Lbi","Lic","Vdmr","Vmr","calcVdmr","Smr","Ibi","calcIbi","Vbi","Sbi","Iic","calcIic","Sic","reducer","action","payload","value","get","set","projet","$needs","filter","site","push","encode","toArray","createStore","next","setItem","stringify","NAME","setTitle","document","title","AppHeader","useEffect","className","to","ProjectListState","ButtonText","connect","current","create","edit","remove","useState","setName","setSite","Normal","setState","setProjectID","key","hidden","onClick","e","window","confirm","stopPropagation","requestAnimationFrame","role","aria-label","EditProject","onChange","target","preventDefault","CreateProject","selectFiles","options","a","createFileSelector","files","multiple","Array","from","file","input","createElement","form","appendChild","body","accept","Promise","resolve","reject","reset","click","onchange","parseCSV","content","decode","delimiter","separator","split","line","x","console","warn","reduceProjectTotalNeed","isNeedUnselected","selected","Besoins","setNeeds","scope","size","index","tabIndex","style","cursor","tagName","toggleNeedSelected","userSelect","pointerEvents","touchAction","setNeedName","min","step","setNeedHours","valueAsNumber","setNeedQuantity","setNeedPower","disabled","every","text","values","parseInt","parseFloat","addNeed","ReadonlyUnitField","label","readOnly","ChoiceBox","items","item","ReadonlyField","UnitField","setValue","field","props","TextField","renderLabel","rowsCache","WeakMap","getRows","labels","has","names","Object","keys","rows","count","length","i","row","ModuleRecord","first","second","ModuleFields","DimBatteries","DimOnduleur","InverterModels","join","DimFieldsR","formatExponentialNumber","toExponential","F","E","Cables","getTimeStamp","Date","now","padInt","toString","padStart","formatDateStamp","stamp","date","getDate","getMonth","getFullYear","getHours","getMinutes","Report","setStamp","setInterval","clearInterval","PVPuissanceProduite","PVNombreSerie","PVNombreParallel","PVNombreTotal","BatCapacite","BatNombreSerie","BatNombreParallel","BatNombreTotal","RegCapacite","RegNombre","OndCapacite","OndBesoinEntre","undefined","OndNombre","CablePVReg","CableBatsOnd","CableOndCharge","print","width","src","replace","alt","rowSpan","find","data-toggle","href","ProjectView","match","params","ProjectList","AppContent","exact","path","component","App","store","basename","process","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.13c4377c.chunk.js","sourcesContent":["export function validate(n?: number | null) {\n  return (n != null) && isFinite(n) ? n : NaN;\n}\n\nexport function n(n?: number | null, fixed = 0, unit = \"\") {\n  unit = unit && ` ${unit.trim()}`;\n  return (n != null) && isFinite(n) ? (fixed ? n.toFixed(fixed) : n) + unit : \"N/A\";\n}\n\nexport function percentage(n: number) {\n  return `${(n * 100).toFixed(2)}%`;\n}\n","import State, {\n  Project, ProjectNeed,\n  ModelPV,\n  ModelBattery,\n  ModelOnduleur,\n  ModelRegulateur\n} from \"./State\";\nimport Actions from \"./actions\";\nimport { List } from \"immutable\";\nimport { validate } from \"../utils/numbers\";\n\ntype ProjectNeedJSON = ProjectNeed;\n\ntype ProjectJSON = Omit<State, 'projects'> & {\n  needs: ProjectNeedJSON[];\n}\n\ntype StateJSON = Omit<State, 'projects'> & {\n  projects: ProjectJSON[]\n};\n\nconst saved = localStorage.getItem(\"state\");\nconst initial: State = saved ? decode(JSON.parse(saved)) : {\n  projects: List()\n};\n\nexport function mutateCalcProjectNeed(n: ProjectNeed) {\n  n.energy = n.hours * ((n.prolifiratedPower = n.quantity * n.power) / 1000);\n  return n;\n}\n\nfunction reduceProjectNeedsTotalEnergy(total: number, need: ProjectNeed) {\n  return total + need.energy;\n}\n\nfunction reduceProjectNeedsProlifiratedPower(total: number, need: ProjectNeed) {\n  return total + need.prolifiratedPower;\n}\n\nfunction calculateTotalEnergy(needs: List<ProjectNeed>) {\n  return needs.reduce(reduceProjectNeedsTotalEnergy, 0);\n}\n\nfunction calculateProlifiratedPower(needs: List<ProjectNeed>) {\n  return needs.reduce(reduceProjectNeedsProlifiratedPower, 0);\n}\n\nlet projectID = initial.projects.reduce((maximum, project) => {\n  return Math.max(maximum, project.id + 1);\n}, 0);\n\nconst PSI = 1;\n\nfunction calculatePc(El: number, Ƞb: number, Kloss: number, Htilt: number) {\n  return (El / (Ƞb * Kloss * Htilt)) * PSI;\n}\n\nfunction calculateCx(Nc: number, El: number, DODmax: number, Vsystem: number, Ƞout: number) {\n  return (Nc * 1000 * El) / (DODmax * Vsystem * Ƞout);\n}\n\nexport const BatteryModules: ModelBattery[] = [{\n  model: \"12MD325P\",\n  vendor: \"Rolls\",\n  Vnom: 12,\n  Cnom: 325,\n  Ƞ: 0.98\n}, {\n  model: \"Solar 12V / 160 Ah\",\n  vendor: \"Generic\",\n  Vnom: 12,\n  Cnom: 160,\n  Ƞ: 0.98\n}, {\n  model: \"12-CS-11PS\",\n  vendor: \"Rolls\",\n  Vnom: 12,\n  Cnom: 296,\n  Ƞ: 0.98\n}];\n\nexport const PVModels: ModelPV[] = [{\n  name: \"ENP Sonne 180Wc\",\n  type: \"Polycristalline\",\n  Voc: 38.2,\n  Vmp: 24,\n  Pm: 180,\n  Isc: 5.38,\n  Imp: 5.20,\n  output: 0.1598,\n  temperture: [-40, +85]\n}, {\n  name: \"SUNTECH 280Wc\",\n  Pm: 260,\n  Voc: 38.2,\n  Isc: 8.90,\n  Vmp: 30.7,\n  Imp: 8.47,\n  output: 0.1598,\n  temperture: [-40, +85],\n  type: \"Polycristalline\"\n}, {\n  name: \"TESLA POWER\",\n  Pm: 280,\n  Voc: 38.2,\n  Isc: 9.38,\n  Vmp: 31.6,\n  Imp: 8.86,\n  output: 0.1710,\n  temperture: [-40, +85],\n  type: \"Polycristalline\"\n}];\n\nexport const InverterModules: ModelOnduleur[] = [{\n  vendor: \"15Kva Offgrid Solo Inverter\",\n  Pnom: 15,\n  PVmpp: [120, 440],\n  Vmax: 550,\n  Ƞ: 0.97\n}, {\n  vendor: \"Generic\",\n  Pnom: 3,\n  PVmpp: [125, 440],\n  Vmax: 550,\n  Ƞ: 0.97\n}];\n\nexport const RegulatorModels: ModelRegulateur[] = [{\n  name: \"Xantex - 60A - 12V/24V\",\n  I: 60,\n  Vout: 24\n}];\n\n// Ω\n\nexport const ρ = 1.724e-8;\n\nfunction calcS(I: number, L: number, Vd: number) {\n  return 2e6 * ((ρ * I * L) / Vd);\n}\n\nfunction calcVd(V: number) {\n  return 0.04 * V;\n}\n\nfunction calcVdmr(Voc: number, Msc: number) {\n  return calcVd(Voc * Msc * 1.15);\n}\n\nfunction calcIbi(Pi: number, Ƞ: number, Vsystem: number) {\n  return 1000 * Pi / (Ƞ * Vsystem);\n}\n\nconst SQRT3 = Math.sqrt(3);\nconst VLOAD = 220;\n\nfunction calcIic(Pi: number) {\n  return 1000 * Pi / (VLOAD * SQRT3);\n}\n\nexport const Vic = calcVd(VLOAD);\n\nfunction mutateUpdateProject(project: Project) {\n\n  const Vsystem = project.Vsystem;\n\n  const Pc = project.Pc = calculatePc(\n    project.energyBesoinTotal,\n    project.Ƞb,\n    project.Kloss, project.Htilt\n  );\n\n  const PV = PVModels[project.module];\n\n  const Isc = validate(PV?.Isc);\n\n  const Msc = project.Msc = Math.ceil(Vsystem / validate(PV?.Vmp));\n  const Mpc = project.Mpc = Math.ceil((1000 * Pc) / (Msc * validate(PV?.Pm)));\n  project.Mt = Mpc * Msc;\n\n  const Nc = project.Nc;\n  const DODmax = project.DODmax;\n  const Ƞout = project.Ƞout;\n\n  const battery = BatteryModules[project.battery];\n  const inverter = InverterModules[project.inverter];\n\n  const Cx = project.Cx = calculateCx(Nc, project.energyBesoinTotal, DODmax, Vsystem, Ƞout);\n\n  const Bt = project.Bt = Math.ceil(Cx / validate(battery?.Cnom));\n  const Bsc = project.Bsc = Math.ceil(Vsystem / validate(battery?.Vnom));\n  project.Bpc = Math.floor(Bt / Bsc);\n\n  project.Pi = (project.Pf * 1.25) / 1000;\n  project.nombreOnduleur = Math.max(1, Math.round(project.Pi / validate(inverter?.Pnom)));\n\n  const Irated = project.Irated = Isc * Mpc * 1.25;\n\n  const regulateur = RegulatorModels[project.regulator];\n\n  project.Rc = Math.ceil(Irated / validate(regulateur?.I));\n\n  const Voc = validate(PV?.Voc);\n  const Ƞbatterie = validate(battery?.Ƞ);\n  const Pi = validate(inverter?.Pnom);\n\n  const Lmr = project.Lmr;\n  const Lbi = project.Lbi;\n  const Lic = project.Lic;\n\n  const Vdmr = project.Vmr = calcVdmr(Voc, Msc);\n  project.Smr = calcS(Irated, Lmr, Vdmr);\n  const Ibi = project.Ibi = calcIbi(Pi, Ƞbatterie, Vsystem);\n  const Vbi = project.Vbi = calcVd(Vsystem);\n  project.Sbi = calcS(Ibi, Lbi, Vbi);\n  const Iic = project.Iic = calcIic(Pi);\n  project.Sic = calcS(Iic, Lic, Vic);\n\n  return project;\n\n}\n\nfunction reducer(state = initial, action: Actions): State {\n  switch (action.type) {\n    case \"project:set\": {\n      const { id, name, value } = action.payload;\n\n      const project = {\n        ...state.projects.get(id)!,\n        [name]: value\n      } as Project;\n\n      return {\n        ...state,\n        projects: state.projects.set(id,\n          mutateUpdateProject(project)\n        )\n      };\n\n    }\n    case \"project.needs:set\": {\n      const { id, needs } = action.payload;\n      const projet = state.projects.get(id)!;\n      const $needs = needs.map(need => mutateCalcProjectNeed({ ...need }));\n      return {\n        ...state,\n        projects: state.projects.set(id, mutateUpdateProject({\n          ...projet,\n          needs: $needs,\n          energyBesoinTotal: calculateTotalEnergy($needs),\n          Pf: calculateProlifiratedPower($needs),\n        } as Project))\n      };\n    }\n    case \"project:delete\": {\n      const { id } = action.payload;\n      return {\n        ...state,\n        projects: state.projects.filter(project => {\n          return project.id !== id;\n        })\n      };\n    };\n    case \"project:edit\": {\n      const { id, name, site } = action.payload;\n      return {\n        ...state,\n        projects: state.projects.set(id, {\n          ...state.projects.get(id),\n          id, name, site\n        } as Project)\n      };\n    };\n    case \"project:create\": {\n      const { name, site } = action.payload;\n      return {\n        ...state,\n        projects: state.projects.push({\n          id: projectID++,\n          name, site,\n          needs: List(),\n          energyBesoinTotal: 0,\n          Pf: 0,\n          Htilt: 0,\n          Kloss: 0,\n          Mpc: 0,\n          Msc: 0,\n          Mt: 0,\n          Pc: 0,\n          Vsystem: 0,\n          module: -1,\n          battery: -1,\n          inverter: -1,\n          regulator: -1,\n          Ƞb: 0,\n          Nc: 1,\n          DODmax: 0.01,\n          Ƞout: 0.01,\n          Cx: 0,\n          Bpc: 0,\n          Bsc: 0,\n          Bt: 0,\n          Pi: 0,\n          nombreOnduleur: NaN,\n          Irated: 0,\n          Rc: 0,\n          Lmr: 0,\n          Vmr: NaN,\n          Smr: NaN,\n          Lbi: 0,\n          Ibi: NaN,\n          Vbi: NaN,\n          Sbi: NaN,\n          Lic: 0,\n          Iic: NaN,\n          Sic: NaN,\n        })\n      };\n    };\n    default: return state;\n  }\n}\n\nfunction encode(state: State): StateJSON {\n  return {\n    projects: state.projects.map(project => ({\n      ...project,\n      needs: project.needs.toArray()\n    } as ProjectJSON)).toArray()\n  };\n}\n\nfunction decode(state: StateJSON): State {\n  return {\n    projects: List(state.projects.map(project => ({\n      ...project,\n      needs: List(project.needs)\n    }))) as List<Project>\n  };\n}\n\nexport default function (state = initial, action: Actions) {\n  const next = reducer(state, action);\n  localStorage.setItem(\"state\", JSON.stringify(encode(next)));\n  return next;\n};\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\nexport default createStore(reducer);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NAME = \"Simulateur PV\";\n\nfunction setTitle() {\n  document.title = NAME;\n}\n\nexport default function AppHeader() {\n  useEffect(setTitle);\n  return <nav className=\"navbar navbar-expand-lg navbar-dark bg-success d-print-none\">\n    <div className=\"container-md\">\n      <Link to=\"/\" className=\"navbar-brand\">{NAME}</Link>\n    </div>\n  </nav>;\n}\n","import State, { Project } from './state/State';\nimport React, { useState } from 'react';\n\nimport {\n  createProject,\n  editProject,\n  deleteProject\n} from './state/actions';\n\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { List } from 'immutable';\n\nenum ProjectListState {\n  Normal,\n  EditProject,\n  CreateProject\n}\n\nconst ButtonText = [\n  \"Créer un nouveau projet\",\n  \"Renommer\",\n  \"Créer\"\n];\n\nexport default connect(\n  (state: State, { current }: { current: number }) => {\n    return {\n      current,\n      projects: state.projects\n    };\n  },\n  {\n    create: createProject,\n    edit: editProject,\n    remove: deleteProject\n  }\n)(function ProjectListView({\n  current, projects,\n  create, edit, remove\n}: {\n  current: number,\n  projects: List<Project>,\n  create: typeof createProject,\n  edit: typeof editProject,\n  remove: typeof deleteProject,\n}) {\n\n  const [name, setName] = useState(\"\");\n  const [site, setSite] = useState(\"\");\n  const [state, setState] = useState(ProjectListState.Normal);\n  const [projectID, setProjectID] = useState(-1);\n\n  return <>\n    <div className=\"list-group list-group-flush d-print-none mb-3\">\n      {\n        projects.map(project => {\n          return <Link\n            to={`/${project.id}`}\n            className={\n              `list-group-item list-group-item-action ${\n              state !== ProjectListState.Normal\n                ? \"disabled\"\n                : \"\"\n              } ${\n              current === project.id\n                ? \"active list-group-item-success\"\n                : \"\"\n              }`\n            }\n            key={project.id}\n          >\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <h5>\n                {project.name}\n                <small className=\"font-weight-light\" hidden={project.site === \"\"}> ({project.site})</small>\n              </h5>\n              <div className=\"btn-group btn-group-sm\">\n                <button\n                  type=\"button\"\n                  className=\"btn\"\n                  hidden={state !== ProjectListState.Normal}\n                  onClick={e => {\n                    if (window.confirm(\"Voulez vous vraiment supprimer le projet ?\")) {\n                      e.stopPropagation();\n                      remove(project.id);\n                      requestAnimationFrame(() => {\n                        setProjectID(current);\n                      });\n                    }\n                  }}\n                ><span role=\"img\" aria-label=\"Supprimer\">❌</span></button>\n                <button\n                  type=\"button\"\n                  className=\"btn\"\n                  hidden={state !== ProjectListState.Normal}\n                  onClick={() => {\n                    setProjectID(project.id);\n                    setName(project.name);\n                    setSite(project.site);\n                    setState(ProjectListState.EditProject);\n                  }}\n                ><span role=\"img\" aria-label=\"Ronommer\">✏️</span></button>\n              </div>\n            </div>\n          </Link>;\n        })\n      }\n    </div>\n    <form className=\"d-print-none\">\n      <div hidden={state === ProjectListState.Normal}>\n        <div className=\"row\">\n          <label className=\"col-4 col-form-label\">\n            Nom de projet:\n        </label>\n          <div className=\"col-8\">\n            <input\n              type=\"text\" value={name}\n              className=\"form-control form-control-sm\"\n              onChange={e => setName(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <label className=\"col-4 col-form-label\">\n            Site de projet:\n        </label>\n          <div className=\"col-8\">\n            <input\n              type=\"text\"\n              value={site}\n              className=\"form-control form-control-sm\"\n              onChange={e => setSite(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-evenly mt-2\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-secondary btn-sm\"\n          hidden={state === ProjectListState.Normal}\n          onClick={() => {\n            setState(ProjectListState.Normal);\n          }}\n        >Annuler</button>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-success btn-sm\"\n          onClick={e => {\n            e.preventDefault();\n            switch (state) {\n              case ProjectListState.Normal: {\n                setName(\"\");\n                setSite(\"\");\n                setState(ProjectListState.CreateProject);\n                return;\n              }\n              case ProjectListState.CreateProject: {\n                create(name, site);\n                setState(ProjectListState.Normal);\n                return;\n              }\n              case ProjectListState.EditProject: {\n                edit(projectID, name, site);\n                setState(ProjectListState.Normal);\n                return;\n              }\n            }\n          }}\n        >{ButtonText[state]}</button>\n      </div>\n    </form>\n  </>;\n\n});\n","import { ProjectNeed } from \"./State\";\nimport { List } from \"immutable\";\n\nexport type Action<T, K extends string> = { type: K; payload: T; };\n\ntype Actions = (\n  CreateProject |\n  EditProject |\n  DeleteProject |\n  SetProjectNeeds |\n  SetProjectValue\n);\n\nexport type CreateProject = Action<{\n  name: string;\n  site: string;\n}, \"project:create\">;\n\nexport type EditProject = Action<{\n  id: number;\n  name: string;\n  site: string;\n}, \"project:edit\">;\n\nexport type DeleteProject = Action<{\n  id: number;\n}, \"project:delete\">;\n\nexport type SetProjectNeeds = Action<{\n  id: number;\n  needs: List<ProjectNeed>;\n}, \"project.needs:set\">;\n\nexport type SetProjectValue = Action<{\n  id: number;\n  name: ProjectValueName;\n  value: number;\n}, \"project:set\">;\n\nexport function setProjectNeeds(id: number, needs: List<ProjectNeed>): SetProjectNeeds {\n  return { type: \"project.needs:set\", payload: { id, needs } };\n}\n\nexport function createProject(name: string, site: string): CreateProject {\n  return { type: \"project:create\", payload: { name, site } };\n}\n\nexport function editProject(id: number, name: string, site: string): EditProject {\n  return { type: \"project:edit\", payload: { id, name, site } };\n}\n\nexport function deleteProject(id: number): DeleteProject {\n  return { type: \"project:delete\", payload: { id } };\n}\n\nexport type ProjectValueName = (\n  \"Htilt\" |\n  \"Kloss\" |\n  \"Ƞb\" |\n  \"module\" |\n  \"battery\" |\n  \"inverter\" |\n  \"regulator\" |\n  \"Vsystem\" |\n  \"Nc\" |\n  \"DODmax\" |\n  \"Ƞout\" |\n  \"Lmr\" |\n  \"Lbi\" |\n  \"Lic\"\n);\n\nexport function setProjectValue(id: number, name: ProjectValueName, value: number): SetProjectValue {\n  return { type: \"project:set\", payload: { id, name, value } };\n}\n\nexport default Actions;\n","export async function selectFiles(options: {\n  accept?: string;\n  multiple?: true;\n}): Promise<FileList>;\nexport async function selectFiles(options: {\n  accept?: string;\n  multiple: false;\n}): Promise<File>;\nexport async function selectFiles(options: {\n  accept?: string;\n  multiple?: boolean;\n}) {\n  const selectFiles: ReturnType<typeof createFileSelector> = (\n    // @ts-ignore\n    window.selectFiles || (window.selectFiles = createFileSelector())\n  );\n  const files = await selectFiles(options);\n  if (options.multiple) {\n    return files;\n  } else {\n    for (const file of Array.from(files)) {\n      return file;\n    }\n  }\n}\n\nfunction createFileSelector() {\n  const input = document.createElement(\"input\");\n  input.type = 'file';\n  const form = document.createElement('form');\n  form.appendChild(input);\n  form.hidden = true;\n  document.body.appendChild(form);\n  return ({\n    accept = '',\n    multiple = true\n  }: {\n    accept?: string;\n    multiple?: boolean;\n  }) => {\n    input.accept = accept;\n    input.multiple = multiple;\n    return new Promise<FileList>((resolve, reject) => {\n      form.reset();\n      input.click();\n      input.onchange = () => {\n        if (input.files == null)\n          reject(\"No files selected\");\n        else\n          resolve(input.files);\n        input.onchange = null;\n      };\n    });\n  };\n}\n","export function parseCSV<T>(\n  content: string,\n  decode: (values: string[]) => T, {\n    delimiter = '\\n',\n    separator = /[\\t,;]/\n  }: {\n    delimiter?: string | RegExp,\n    separator?: string | RegExp\n  } = {}\n): T[] {\n  return (\n    content\n      .trim()\n      .split(delimiter)\n      .map(line => line.trim())\n      .filter(x => x)\n      .map(line => {\n        try {\n          return decode(line.split(separator).map(value => value.trim()));\n        } catch (e) {\n          console.warn(e);\n          return null!;\n        }\n      })\n      .filter(x => x)\n  );\n}\n","import React from \"react\";\n\nimport { ProjectNeed } from \"./state/State\";\nimport { mutateCalcProjectNeed } from \"./state/reducer\";\nimport { List } from \"immutable\";\nimport { selectFiles } from \"./utils/files\";\nimport { parseCSV } from \"./utils/csv\";\nimport { clamp } from \"./utils/math\";\n\nfunction reduceProjectTotalNeed(total: ProjectNeed, need: ProjectNeed) {\n  total.prolifiratedPower += need.prolifiratedPower;\n  total.quantity += need.quantity;\n  total.energy += need.energy;\n  total.hours += need.hours;\n  total.power += need.power;\n  return total;\n}\n\nfunction setNeedName(needs: List<ProjectNeed>, index: number, name: string) {\n  return needs.set(index, {\n    ...needs.get(index),\n    name\n  } as ProjectNeed);\n}\n\nfunction setNeedQuantity(needs: List<ProjectNeed>, index: number, quantity: number) {\n  return needs.set(index, mutateCalcProjectNeed({\n    ...needs.get(index),\n    quantity\n  } as ProjectNeed));\n}\n\nfunction setNeedPower(needs: List<ProjectNeed>, index: number, power: number) {\n  return needs.set(index, mutateCalcProjectNeed({\n    ...needs.get(index),\n    power\n  } as ProjectNeed));\n}\n\nfunction setNeedHours(needs: List<ProjectNeed>, index: number, hours: number) {\n  return needs.set(index, mutateCalcProjectNeed({\n    ...needs.get(index),\n    hours\n  } as ProjectNeed));\n}\n\nfunction toggleNeedSelected(needs: List<ProjectNeed>, index: number) {\n  const need = needs.get(index)!;\n  return needs.set(index, mutateCalcProjectNeed({\n    ...need,\n    selected: !need.selected\n  } as ProjectNeed));\n}\n\nfunction addNeed(needs: List<ProjectNeed>) {\n  return needs.push(mutateCalcProjectNeed({\n    name: \"\",\n    hours: 0,\n    power: 0,\n    quantity: 0,\n    selected: false\n  } as ProjectNeed))\n}\n\nfunction isNeedUnselected(need: ProjectNeed) {\n  return !need.selected;\n}\n\nexport default function Besoins({\n  current, needs, setNeeds\n}: {\n  current: number;\n  needs: List<ProjectNeed>;\n  setNeeds(id: number, needs: List<ProjectNeed>): void;\n}) {\n\n  const total = needs.reduce(reduceProjectTotalNeed, {\n    name: \"Total\",\n    energy: 0,\n    hours: 0,\n    power: 0,\n    prolifiratedPower: 0,\n    quantity: 0,\n    selected: false\n  });\n\n  return <>\n    <div className=\"table-responsive\">\n      <table className=\"table table-sm table-hover align-middle table-needs\">\n        <thead>\n          <tr>\n            <td className=\"d-print-none\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n            <th scope=\"col\" title=\"Nom de l'equipement\">Equipement</th>\n            <th scope=\"col\" title=\"Nombre d'heurs d'uitilisation par jour\">Utilisation (h/j)</th>\n            <th scope=\"col\" title=\"Quantité d'equipement utilisé\">Quantité</th>\n            <th scope=\"col\" title=\"Puissance de l'equipement en KiloWatt\">Puissance (w)</th>\n            <th scope=\"col\" title=\"Puissance des equipements en KiloWatt\">Puissance foisonée (w)</th>\n            <th scope=\"col\" title=\"Energie consomée par les equipements en KiloWatt-heur par jour\">Energie (Kwh/j)</th>\n          </tr>\n        </thead>\n        {\n          needs.size >= 0 ? <>\n            <tbody>{\n              needs.map((need, index) => (\n                <tr\n                  key={index}\n                  tabIndex={-1}\n                  style={{\n                    cursor: \"default\"\n                  }}\n                  className={need.name ? \"\" : \"table-warning\"}\n                  onClick={e => {\n                    // @ts-ignore\n                    if (e.target.tagName !== \"TD\") return;\n                    setNeeds(current, toggleNeedSelected(needs, index))\n                  }}\n                >\n                  <td className=\"d-print-none\">{\n                    need.selected\n                      ? <span role=\"img\" aria-label=\"Selectionné\" style={{\n                        userSelect: \"none\",\n                        pointerEvents: \"none\",\n                        touchAction: \"none\"\n                      }}>✔️</span>\n                      : null\n                  }</td>\n                  <th><input\n                    type=\"text\"\n                    className=\"form-control-plaintext\"\n                    value={need.name}\n                    onChange={e => setNeeds(current, setNeedName(needs, index, e.target.value))}\n                  /></th>\n                  <td><input\n                    type=\"number\"\n                    min=\"1\" max=\"24\" step=\"0\"\n                    className=\"form-control-plaintext\"\n                    value={Math.round(need.hours)}\n                    onChange={e => setNeeds(current, setNeedHours(needs, index, e.target.valueAsNumber))}\n                  /></td>\n                  <td><input\n                    type=\"number\"\n                    min=\"0\" step=\"1\"\n                    className=\"form-control-plaintext\"\n                    value={Math.round(need.quantity)}\n                    onChange={e => setNeeds(current, setNeedQuantity(needs, index, e.target.valueAsNumber))}\n                  /></td>\n                  <td><input\n                    type=\"number\"\n                    min=\"0\" step=\"0.01\"\n                    className=\"form-control-plaintext\"\n                    value={need.power}\n                    onChange={e => setNeeds(current, setNeedPower(needs, index, e.target.valueAsNumber))}\n                  /></td>\n                  <td>{need.prolifiratedPower}</td>\n                  <td>{need.energy.toFixed(2)}</td>\n                </tr>\n              ))\n            }</tbody><tfoot>\n              <tr>\n                <td className=\"d-print-none\"></td>\n                <th scope=\"row\">Total</th>\n                <td>{Math.round(total!.hours)}</td>\n                <td>{Math.round(total!.quantity)}</td>\n                <td>{total!.power.toFixed(2)}</td>\n                <td>{total!.prolifiratedPower.toFixed(2)}</td>\n                <td>{total!.energy.toFixed(2)}</td>\n              </tr>\n            </tfoot>\n          </> : null\n        }\n      </table>\n    </div>\n    <div className=\"d-flex d-print-none flex-wrap justify-content-evenly mb-2\">\n      <button\n        disabled={needs.every(isNeedUnselected)}\n        onClick={() => {\n          if (window.confirm(\"Voulez vous vraiment supprimer les lignes ?\")) {\n            setNeeds(current, needs.filter(isNeedUnselected));\n          }\n        }}\n        type=\"button\"\n        className=\"btn btn-danger\"\n        title=\"Supprimer la selection\"\n      >Supprimer</button>\n      <button\n        onClick={async () => {\n          try {\n            const file = await selectFiles({\n              accept: '.csv',\n              multiple: false\n            });\n            // @ts-ignore\n            const content = await file.text();\n            const values: ProjectNeed[] = parseCSV(content, ([name, hours, quantity, power]) => mutateCalcProjectNeed({\n              name,\n              hours: clamp(parseInt(hours), 1, 24),\n              quantity: Math.max(1, parseInt(quantity)),\n              power: Math.max(0, parseFloat(power)),\n              selected: false\n            } as ProjectNeed));\n            setNeeds(current, needs.push(...values));\n          } catch (e) {\n            console.warn(e);\n          }\n        }}\n        type=\"button\"\n        className=\"btn btn-warning\"\n      >Importer</button>\n      <button\n        onClick={() => setNeeds(current, addNeed(needs))}\n        type=\"button\"\n        className=\"btn btn-success\"\n      >Ajouter</button>\n    </div>\n  </>;\n\n};\n","export function clamp(value: number, min: number, max: number) {\n  return Math.min(max, Math.max(min, value));\n}\n","import React from \"react\";\n\nexport default function ReadonlyUnitField({\n  label, value, unit\n}: {\n  unit: string;\n  label: string | (() => JSX.Element);\n  value: string | number;\n}) {\n  return <div className=\"mb-3 row\">\n    <label className=\"offset-sm-2 col-sm-4 col-form-label\">{\n      typeof label === \"string\" ? label : label()\n    }:</label>\n    <div className=\"col-sm-4\">\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          value={value} readOnly\n          className=\"form-control form-control-sm\"\n        />\n        <span className=\"input-group-text\">{unit}</span>\n      </div>\n    </div>\n  </div>;\n}\n","import React from \"react\";\n\nexport interface ChoiceItem {\n  name: string;\n}\n\nexport default function ChoiceBox({\n  label, items, value, onChange\n}: {\n  label: string;\n  items: ChoiceItem[];\n  value: number;\n  onChange(value: number): void;\n}) {\n  return <div className=\"mb-3 row\">\n    <label className=\"offset-sm-2 col-sm-4 col-form-label\">{label}:</label>\n    <div className=\"col-sm-4\">\n      <select\n        className=\"form-select form-select-sm\"\n        value={value}\n        onChange={e => onChange(parseInt(e.target.value, 10))}>\n        <option value={-1}></option>\n        {items.map((item, index) => {\n          return <option key={index} value={index}>{item.name}</option>\n        })}\n      </select>\n    </div>\n  </div>;\n}\n","import React from \"react\";\n\nexport default function ReadonlyField({\n  label, value\n}: {\n  label: string;\n  value: string | number;\n}) {\n  return <div className=\"mb-3 row\">\n    <label className=\"offset-sm-2 col-sm-4 col-form-label\">{label}:</label>\n    <div className=\"col-sm-4\">\n      <input type=\"text\" className=\"form-control form-control-sm\" readOnly value={value} />\n    </div>\n  </div>;\n}\n","import React, { HTMLProps } from \"react\";\n\nexport default function UnitField({\n  value, setValue, field, unit,\n  ...props\n}: HTMLProps<HTMLInputElement> & {\n  unit: string;\n  field: string | (() => JSX.Element);\n  value: number | string;\n  setValue(value: number): void;\n}) {\n  return <div className=\"mb-3 row\">\n    <label className=\"offset-sm-2 col-sm-4 col-form-label\">{\n      typeof field === \"string\" ? field : field()\n    }:</label>\n    <div className=\"col-sm-4\">\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"number\"\n          value={value}\n          onChange={e => setValue(e.target.valueAsNumber)}\n          className=\"form-control form-control-sm\"\n          {...props}\n        />\n        <span className=\"input-group-text\">{unit}</span>\n      </div>\n    </div>\n  </div>\n}","import React, { HTMLProps } from \"react\";\n\nexport default function TextField({\n  value, setValue, field,\n  ...props\n}: HTMLProps<HTMLInputElement> & {\n  field: string | (() => JSX.Element);\n  value: number | string;\n  setValue(value: number): void;\n}) {\n  return <div className=\"mb-1 row\">\n    <label className=\"offset-sm-2 col-sm-4 col-form-label\">{\n      typeof field === \"string\" ? field : field()\n    }:</label>\n    <div className=\"col-sm-4\">\n      <input\n        type=\"number\"\n        value={value}\n        onChange={e => setValue(e.target.valueAsNumber)}\n        className=\"form-control form-control-sm\"\n        {...props}\n      />\n    </div>\n  </div>;\n}","import React from \"react\";\n\ntype Label = {\n  (): JSX.Element;\n} | string;\n\ntype Field = {\n  name: string;\n  label: Label;\n};\n\nfunction renderLabel(label: Label) {\n  return typeof label === \"string\" ? label : label();\n}\n\nconst rowsCache = new WeakMap<Record<string, Label>, [Field, Field][]>();\n\nfunction getRows(labels: Record<string, Label>) {\n  if (rowsCache.has(labels))\n    return rowsCache.get(labels)!;\n  const names = Object.keys(labels);\n  const values = Object.values(labels);\n  const rows: [Field, Field][] = [];\n  const count = names.length;\n  // alert(count);\n  for (let i = 0; i < count; i += 2) {\n    const row: Field[] = [];\n    row.push({\n      name: names[i],\n      label: values[i]\n    });\n    if (i !== count - 1) {\n      row.push({\n        name: names[i + 1],\n        label: values[i + 1]\n      });\n    }\n    rows.push(row as any);\n  }\n  rowsCache.set(labels, rows);\n  return rows;\n}\n\nfunction ModuleRecord({\n  module, rows\n}: {\n  module: Record<string, number | string>,\n  rows: [Field, Field][]\n}) {\n  return <>{\n    rows.map(([first, second], index) => {\n      return <div className=\"mb-2 row\" key={index}>\n        <div className=\"col-sm-6\">\n          <div className=\"d-flex\">\n            <div className=\"flex-fill\">{renderLabel(first.label)}:</div>\n            <div className=\"flex-fill text-right\">{module[first.name]}</div>\n          </div>\n        </div>\n        {\n          second\n            ? <div className=\"col-sm-6\">\n              <div className=\"d-flex\">\n                <div className=\"flex-fill\">{renderLabel(second.label)}:</div>\n                <div className=\"flex-fill text-right\">{module[second.name]}</div>\n              </div>\n            </div>\n            : null\n        }\n      </div>;\n    })\n  }</>;\n}\n\nexport default function ModuleFields({\n  module, labels\n}: {\n  module?: Record<string, number | string> | null,\n  labels: Record<string, Label>\n}) {\n  return <div className=\"mb-3 row\">\n    <div className=\"offset-sm-1 col-sm-10\">\n      <div className=\"card bg-light\">\n        <div className=\"card-body\"> {\n          module\n            ? <ModuleRecord module={module} rows={getRows(labels)} />\n            : \"Selectionner une module.\"\n        } </div>\n      </div>\n    </div>\n  </div>;\n}\n","import React from \"react\";\nimport { Project } from \"../state/State\";\nimport { PVModels } from \"../state/reducer\";\nimport { ProjectValueName } from \"../state/actions\";\n\nimport ReadonlyUnitField from \"../components/ReadonlyUnitField\";\nimport ChoiceBox from \"../components/ChoiceBox\";\nimport ReadonlyField from \"../components/ReadonlyField\";\nimport UnitField from \"../components/UnitField\";\nimport TextField from \"../components/TextField\";\nimport ModuleFields from \"../components/ModuleFields\";\nimport { n } from \"../utils/numbers\";\n\nconst labels = {\n  type: \"Type\",\n  Pm: \"Puissance max\",\n  Voc: \"Tension en circuit ouvert\",\n  Isc: \"Courant de court-circuit\",\n  Vmp: \"Tension de puissance max\",\n  Imp: \"Courant de puissance max\",\n};\n\nexport default function PV({\n  project, setValue\n}: {\n  project: Project,\n  setValue(name: ProjectValueName, value: number): void;\n}) {\n\n  const PV = PVModels[project.module];\n\n  return <>\n    <ReadonlyUnitField\n      label=\"Energy total\"\n      value={n(project.energyBesoinTotal, 2)}\n      unit=\"Kwh/j\"\n    />\n    <TextField\n      field={() => <>H<sub>tilt</sub></>}\n      value={n(project.Htilt)}\n      min={0} step={0.01}\n      setValue={value => setValue(\"Htilt\", value)}\n    />\n    <TextField\n      field={() => <>K<sub>loss</sub></>}\n      value={n(project.Kloss)}\n      min={0} step={0.01}\n      setValue={value => setValue(\"Kloss\", value)}\n    />\n    <TextField\n      field=\"Efficacite d'equilibre\"\n      value={n(project.Ƞb)}\n      min={0} step={0.01}\n      setValue={value => setValue(\"Ƞb\", value)}\n    />\n    <hr />\n    <ReadonlyUnitField\n      label=\"Puissance à installer\"\n      value={n(project.Pc, 2)}\n      unit=\"Kw\"\n    />\n    <ChoiceBox\n      label=\"Choix de module\"\n      items={PVModels}\n      value={project.module}\n      onChange={value => setValue(\"module\", value)}\n    />\n    <ModuleFields\n      module={PV ? {\n        type: PV.type,\n        Pm: `${PV.Pm} Wc`,\n        Voc: `${PV.Voc} V`,\n        Isc: `${PV.Isc} A`,\n        Vmp: `${PV.Vmp} V`,\n        Imp: `${PV.Imp} A`,\n      } : null}\n      labels={labels}\n    />\n    <UnitField\n      value={n(project.Vsystem)} unit=\"V\"\n      min={0} max={48} step={12}\n      field=\"Tension du system\"\n      setValue={value => setValue(\"Vsystem\", value)}\n    />\n    <ReadonlyField\n      label=\"Modules en serie\"\n      value={n(project.Msc)}\n    />\n    <ReadonlyField\n      label=\"Modules en parallel\"\n      value={n(project.Mpc)}\n    />\n    <ReadonlyField\n      label=\"Nombre de modules total\"\n      value={n(project.Mt)}\n    />\n  </>;\n};\n","import React from \"react\";\nimport { ProjectValueName } from \"../state/actions\";\nimport ReadonlyUnitField from \"../components/ReadonlyUnitField\";\nimport ChoiceBox from \"../components/ChoiceBox\";\nimport { BatteryModules } from \"../state/reducer\";\nimport { Project, ModelBattery } from \"../state/State\";\nimport ModuleFields from \"../components/ModuleFields\";\nimport TextField from \"../components/TextField\";\nimport ReadonlyField from \"../components/ReadonlyField\";\nimport { n, percentage } from \"../utils/numbers\";\n\nconst labels: Record<keyof ModelBattery, string> = {\n  model: \"Model\",\n  vendor: \"Marque\",\n  Vnom: \"Tension norminale\",\n  Cnom: \"Capacite nominale\",\n  Ƞ: \"Rendement\"\n};\n\nexport default function DimBatteries({\n  project, setValue\n}: {\n  project: Project;\n  setValue(name: ProjectValueName, value: number): void;\n}) {\n\n  const Nc = project.Nc;\n  const DODmax = project.DODmax;\n  const Ƞout = project.Ƞout;\n\n  const index = project.battery;\n  const battery = index === -1 ? null : BatteryModules[index];\n\n  const Cx = n(project.Cx, 2);\n  const Bsc = project.Bsc;\n  const Bpc = project.Bpc;\n  const Bt = project.Bt;\n\n  return <>\n    <TextField\n      field=\"Nc\"\n      min={1} max={10}\n      value={Nc}\n      setValue={value => setValue(\"Nc\", value)}\n    />\n    <TextField\n      field=\"DODmax\"\n      min={0.01} max={1} step={0.01}\n      value={DODmax}\n      setValue={value => setValue(\"DODmax\", value)}\n    />\n    <TextField\n      field=\"Ƞout\"\n      min={0.01} max={1} step={0.01}\n      value={Ƞout}\n      setValue={value => setValue(\"Ƞout\", value)}\n    />\n    <ReadonlyUnitField\n      label=\"Capacite des batteries a installer\"\n      value={Cx} unit=\"Ah\"\n    />\n    <ChoiceBox\n      label=\"Choix de battries\"\n      onChange={value => setValue(\"battery\", value)}\n      value={project.battery}\n      items={BatteryModules.map(module => ({\n        ...module,\n        name: `${module.Vnom}V / ${module.Cnom} Ah ${module.vendor}`\n      }))}\n    />\n    <ModuleFields\n      labels={labels}\n      module={battery ? {\n        model: battery.model,\n        vendor: battery.vendor,\n        Vnom: `${battery.Vnom} V`,\n        Cnom: `${battery.Cnom} Ah`,\n        Ƞ: `${percentage(battery.Ƞ)}`,\n      } : null}\n    />\n    <ReadonlyField\n      label=\"Nombre des battries total\"\n      value={n(Bt)}\n    />\n    <ReadonlyField\n      label=\"Nombre des battries en series\"\n      value={n(Bsc)}\n    />\n    <ReadonlyField\n      label=\"Nombre des battries en parallel\"\n      value={n(Bpc)}\n    />\n  </>;\n\n}\n","import React from \"react\";\n\nimport { ProjectValueName } from \"../state/actions\";\nimport { Project, ModelOnduleur } from \"../state/State\";\nimport ReadonlyUnitField from \"../components/ReadonlyUnitField\";\nimport ChoiceBox from \"../components/ChoiceBox\";\nimport { InverterModules as InverterModels } from \"../state/reducer\";\nimport ModuleFields from \"../components/ModuleFields\";\nimport { percentage, n } from \"../utils/numbers\";\nimport ReadonlyField from \"../components/ReadonlyField\";\n\nconst labels: Record<keyof ModelOnduleur, string> = {\n  vendor: \"Marque\",\n  Pnom: \"Puissance nominale\",\n  PVmpp: \"Plage de tension MPP\",\n  Vmax: \"Tension maximal\",\n  Ƞ: \"Rendement\",\n};\n\nexport default function DimOnduleur({\n  project, setValue\n}: {\n  project: Project;\n  setValue(name: ProjectValueName, value: number): void;\n}) {\n  const index = project.inverter;\n  const inverter = index === -1 ? null : InverterModels[index];\n  return <>\n    <ReadonlyUnitField\n      value={n(project.Pi, 2)} unit=\"Kw\"\n      label=\"Puissance d'onduleur\"\n    />\n    <ReadonlyUnitField\n      value={n(project.Vsystem, 2)} unit=\"V\"\n      label=\"Tension d'onduleur\"\n    />\n    <ChoiceBox\n      value={index}\n      onChange={value => setValue(\"inverter\", value)}\n      items={InverterModels.map(model => ({\n        ...model,\n        name: `${model.vendor} - ${model.Pnom} Kw - Inverter`\n      }))}\n      label=\"Choix d'onduleur\"\n    />\n    <ModuleFields\n      labels={labels}\n      module={inverter ? {\n        vendor: inverter.vendor,\n        Pnom: `${inverter.Pnom} KVA`,\n        PVmpp: `de ${inverter.PVmpp.join(\" a \")} V`,\n        Vmax: `${inverter.Vmax} V`,\n        Ƞ: `${percentage(inverter.Ƞ)}`,\n      } : null}\n    />\n    <ReadonlyField\n      value={n(project.nombreOnduleur)}\n      label=\"Nombre d'onduleur\"\n    />\n  </>;\n}\n","import React from \"react\";\n\nimport { ProjectValueName } from \"../state/actions\";\nimport { Project, ModelRegulateur } from \"../state/State\";\nimport ReadonlyUnitField from \"../components/ReadonlyUnitField\";\nimport ReadonlyField from \"../components/ReadonlyField\";\nimport ChoiceBox from \"../components/ChoiceBox\";\nimport { RegulatorModels } from \"../state/reducer\";\nimport ModuleFields from \"../components/ModuleFields\";\nimport { n } from \"../utils/numbers\";\n\nconst labels: Record<keyof ModelRegulateur, string> = {\n  name: \"Nom\",\n  I: \"Courant\",\n  Vout: \"Tension de parc batteries\",\n};\n\nexport default function DimFieldsR({\n  project, setValue\n}: {\n  project: Project;\n  setValue(name: ProjectValueName, value: number): void;\n}) {\n  const index = project.regulator;\n  const regulator = index === -1 ? null : RegulatorModels[index];\n  const Rc = project.Rc;\n  const Irated = project.Irated;\n  return <>\n    <ReadonlyUnitField\n      value={n(Irated, 2)} unit=\"A\"\n      label={() => <>I<sub>rated</sub></>}\n    />\n    <ChoiceBox\n      value={index}\n      onChange={value => setValue(\"regulator\", value)}\n      items={RegulatorModels}\n      label=\"Choix de regulateur\"\n    />\n    <ModuleFields\n      labels={labels}\n      module={regulator ? {\n        name: regulator.name,\n        I: `${regulator.I} A`,\n        Vout: `${regulator.Vout} V`\n      } : null}\n    />\n    <ReadonlyField\n      value={n(Rc)}\n      label=\"Nombre de regulateur\"\n    />\n  </>;\n}\n","import React from \"react\";\nimport { Project } from \"../state/State\";\nimport { ProjectValueName } from \"../state/actions\";\n\nimport { ρ, Vic } from \"../state/reducer\";\nimport { n } from \"../utils/numbers\";\n\nfunction formatExponentialNumber(x: number) {\n  const [F, e] = x.toExponential(2).split(\"e\");\n  const E = parseInt(e, 10);\n  return <>{F}&times;10<sup>{E}</sup></>;\n}\n\nexport default function Cables({\n  project, setValue\n}: {\n  project: Project;\n  setValue(name: ProjectValueName, value: number): void;\n}) {\n  return <>\n    <div className=\"table-responsive\">\n      <table className=\"table table-sm table-hover align-middle\">\n        <thead>\n          <tr>\n            <th></th>\n            <th>ρ (Ωm)</th>\n            <th>L (m)</th>\n            <th>I (A)</th>\n            <th>V<sub>d</sub> (V)</th>\n            <th>S (mm<sup>2</sup>)</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th>Cables entre PV et regulateur</th>\n            <td>{formatExponentialNumber(ρ)}</td>\n            <td><input\n              type=\"number\"\n              min=\"0\" step=\"0.01\"\n              className=\"form-control-plaintext\"\n              value={project.Lmr}\n              onChange={e => setValue(\"Lmr\", e.target.valueAsNumber)}\n            /></td>\n            <td>{n(project.Irated, 2)}</td>\n            <td>{n(project.Vmr, 2)}</td>\n            <td>{n(project.Smr, 2)}</td>\n          </tr>\n          <tr>\n            <th>Cables entre parc battries et l'oduleur</th>\n            <td>{formatExponentialNumber(ρ)}</td>\n            <td><input\n              type=\"number\"\n              min=\"0\" step=\"0.01\"\n              className=\"form-control-plaintext\"\n              value={project.Lbi}\n              onChange={e => setValue(\"Lbi\", e.target.valueAsNumber)}\n            /></td>\n            <td>{n(project.Ibi, 2)}</td>\n            <td>{n(project.Vbi, 2)}</td>\n            <td>{n(project.Sbi, 2)}</td>\n          </tr>\n          <tr>\n            <th>Cables entre L'onduleur et la charge</th>\n            <td>{formatExponentialNumber(ρ)}</td>\n            <td><input\n              type=\"number\"\n              min=\"0\" step=\"0.01\"\n              className=\"form-control-plaintext\"\n              value={project.Lic}\n              onChange={e => setValue(\"Lic\", e.target.valueAsNumber)}\n            /></td>\n            <td>{n(project.Iic, 2)}</td>\n            <td>{n(Vic, 2)}</td>\n            <td>{n(project.Sic, 2)}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Project } from \"./state/State\";\nimport { PVModels, RegulatorModels, InverterModules } from \"./state/reducer\";\nimport { n } from \"./utils/numbers\";\n\nfunction getTimeStamp() {\n  return Math.floor(Date.now() / 1000) * 1000;\n}\n\nfunction padInt(n: number, size = 2) {\n  return n.toString().padStart(size, '0');\n}\n\nfunction getMonth(date: Date) {\n  return padInt(date.getMonth() + 1);\n}\n\nfunction getDate(date: Date) {\n  return padInt(date.getDate());\n}\n\nfunction getHours(date: Date) {\n  return padInt(date.getHours());\n}\n\nfunction getMinutes(date: Date) {\n  return padInt(date.getMinutes());\n}\n\nfunction formatDateStamp(stamp: number) {\n  const date = new Date(stamp);\n  return <>{getDate(date)}/{getMonth(date)}/{date.getFullYear()} {getHours(date)}:{getMinutes(date)}</>;\n}\n\nexport default function Report({\n  project\n}: {\n  project: Project\n}) {\n\n  const [stamp, setStamp] = useState(getTimeStamp());\n\n  useEffect(() => {\n    const id = setInterval(() => setStamp(getTimeStamp()), 1000);\n    return () => clearInterval(id);\n  }, [stamp]);\n\n  const PVPuissanceProduite = n(PVModels[project.module]?.Pm, 2, \"Kw\");\n  const PVNombreSerie = n(project.Msc);\n  const PVNombreParallel = n(project.Mpc);\n  const PVNombreTotal = n(project.Mt);\n\n  const BatCapacite = n(project.Cx, 2, \"Ah\");\n  const BatNombreSerie = n(project.Bsc);\n  const BatNombreParallel = n(project.Bpc);\n  const BatNombreTotal = n(project.Bt);\n\n  const RegCapacite = n(RegulatorModels[project.regulator]?.I, 2, \"A\");\n  const RegNombre = n(project.Rc);\n\n  const OndCapacite = n(InverterModules[project.inverter]?.Pnom, 2, \"KVA\");\n  const OndBesoinEntre = n(project.Vsystem, undefined, \"V\");\n  const OndNombre = n(project.nombreOnduleur);\n\n  const CablePVReg = `${n(project.Irated, 2, \"A\")}; ${n(project.Smr, 2, \"mm²\")}`;\n  const CableBatsOnd = `${n(project.Ibi, 2, \"A\")}; ${n(project.Sbi, 2, \"mm²\")}`;\n  const CableOndCharge = `${n(project.Iic, 2, \"A\")}; ${n(project.Sic, 2, \"mm²\")}`;\n\n  return <>\n    <div className=\"border rounded-sm border-secondary text-center p-2\">\n      Date de simulation: {formatDateStamp(stamp)}\n      <div className=\"d-print-none my-1\">\n        <button\n          className=\"btn btn-success\"\n          onClick={() => window.print()}\n        >Imprimer</button>\n      </div>\n    </div>\n    <div className=\"border rounded-sm border-secondary mt-1 p-2\">\n      <div className=\"d-flex justify-content-between align-items-stretch mb-3\">\n        {/* <img src=\"https://via.placeholder.com/150\" className=\"rounded float-left\" /> */}\n        <div className=\"d-flex flex-grow-1 flex-column justify-content-center align-items-stretch text-center\">\n          <h1>Syst&egrave;me isol&eacute; avec battries</h1>\n          <h3>rapport de simulation</h3>\n        </div>\n        {/* <img src=\"https://via.placeholder.com/150\" className=\"rounded float-left\" /> */}\n      </div>\n      <p><b>Nom du projet</b>: {project.name}</p>\n      <p><b>Site geographique</b>: {project.site}</p>\n      <p><b>La consomation moyenne journali&egrave;re</b>: {project.energyBesoinTotal} Kwh/j</p>\n      <p><b>La production energetique</b>: {PVPuissanceProduite}</p>\n      <p><b>Capacite de stockage</b>: {BatCapacite}</p>\n      <figure className=\"text-center p-1\">\n        <img width=\"60%\" className=\"border rounded-sm border-secondary p-3\" src={(process.env.PUBLIC_URL + \"/diagram.svg\").replace(/\\/\\//, \"/\")} alt=\"Schema de l'installation\" />\n        <figcaption className=\"figure-caption\">Schema de l'installation.</figcaption>\n      </figure>\n      <h5>Bilan de dimensionnement</h5>\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered border border-secondary text-center align-middle\">\n          <thead>\n            <th className=\"border border-secondary\">Composant</th>\n            <th className=\"border border-secondary\">Description du composant</th>\n            <th className=\"border border-secondary\">Resultats</th>\n          </thead>\n          <tbody>\n            <tr>\n              <th>Estimation du besoin</th>\n              <td className=\"text-right\">L'energie moyenne journaliere a consommer</td>\n              <td>{project.energyBesoinTotal} Kwh/j</td>\n            </tr>\n            <tr>\n              <th rowSpan={4}>ChampPV</th>\n              <td className=\"text-right\">La puissance produite</td>\n              <td>{PVPuissanceProduite}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Nombre de PV en serie</td>\n              <td>{PVNombreSerie}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Nombre de PV en parallel</td>\n              <td>{PVNombreParallel}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Nombre total des panneaux</td>\n              <td>{PVNombreTotal}</td>\n            </tr>\n            <tr>\n              <th rowSpan={4}>Parc batteries</th>\n              <td className=\"text-right\">La capacite des batteries</td>\n              <td>{BatCapacite}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Nombre de battries en serie</td>\n              <td>{BatNombreSerie}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Nombre des battries en parallel</td>\n              <td>{BatNombreParallel}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Nombre total des battries</td>\n              <td>{BatNombreTotal}</td>\n            </tr>\n            <tr>\n              <th rowSpan={2}>Regulateur</th>\n              <td className=\"text-right\">Capacite du regulateur</td>\n              <td>{RegCapacite}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Nombre de regulateur</td>\n              <td>{RegNombre}</td>\n            </tr>\n            <tr>\n              <th rowSpan={3}>Onduleur</th>\n              <td className=\"text-right\">Capacite d'onduleur</td>\n              <td>{OndCapacite}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Besoin d'entree</td>\n              <td>{OndBesoinEntre}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Nombre d'onduleur</td>\n              <td>{OndNombre}</td>\n            </tr>\n            <tr>\n              <th rowSpan={3}>Cables</th>\n              <td className=\"text-right\">Entre champ PV et regulateur</td>\n              <td>{CablePVReg}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Entre battries et onduleur</td>\n              <td>{CableBatsOnd}</td>\n            </tr>\n            <tr>\n              <td className=\"text-right\">Entre onduleur et charge</td>\n              <td>{CableOndCharge}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div className=\"d-print-none text-center\">\n        <button\n          className=\"btn btn-success\"\n          onClick={() => window.print()}\n        >Imprimer</button>\n      </div>\n    </div>\n  </>;\n}\n","import React from \"react\";\n\nimport State, { Project } from \"./state/State\";\n\nimport { connect } from \"react-redux\";\nimport { setProjectNeeds, setProjectValue } from \"./state/actions\";\n\nimport Besoins from \"./Besoins\";\nimport PV from \"./dimentionement/PV\";\nimport DimBatteries from \"./dimentionement/Battries\";\nimport DimOnduleur from \"./dimentionement/Onduleur\";\nimport DimFieldsR from \"./dimentionement/Regulateur\";\nimport Cables from \"./dimentionement/Cables\";\nimport Report from \"./Report\";\n\nexport default connect((state: State, { current }: { current: number }) => {\n  return {\n    current, project: state.projects.find(project => {\n      return project.id === current;\n    })\n  };\n}, {\n  setNeeds: setProjectNeeds,\n  setValue: setProjectValue\n})(function ProjectContent({\n  project,\n  setNeeds,\n  setValue\n}: {\n  project?: Project;\n  setNeeds: typeof setProjectNeeds;\n  setValue: typeof setProjectValue;\n}) {\n  return project ? <>\n    <div className=\"col-xl-8\">\n      <ul className=\"nav nav-tabs d-print-none\">\n        <li className=\"nav-item flex-sm-fill\">\n          <a className=\"nav-link link-success active\" data-toggle=\"tab\" href=\"#needs\">Besoins</a>\n        </li>\n        <li className=\"nav-item flex-sm-fill\">\n          <a className=\"nav-link link-success\" data-toggle=\"tab\" href=\"#dim-pv\">Dim. PV</a>\n        </li>\n        <li className=\"nav-item flex-sm-fill\">\n          <a className=\"nav-link link-success\" data-toggle=\"tab\" href=\"#dim-bat\">Dim. Batteries</a>\n        </li>\n        <li className=\"nav-item flex-sm-fill\">\n          <a className=\"nav-link link-success\" data-toggle=\"tab\" href=\"#dim-ond\">Dim. Onduleur</a>\n        </li>\n        <li className=\"nav-item flex-sm-fill\">\n          <a className=\"nav-link link-success\" data-toggle=\"tab\" href=\"#dim-reg\">Dim. Regulateurs</a>\n        </li>\n        <li className=\"nav-item flex-sm-fill\">\n          <a className=\"nav-link link-success\" data-toggle=\"tab\" href=\"#dim-cab\">Dim. Cables</a>\n        </li>\n        <li className=\"nav-item flex-sm-fill\">\n          <a className=\"nav-link link-success\" data-toggle=\"tab\" href=\"#dim-rep\">Rapport</a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        <div className=\"tab-pane py-4 fade show active\" id=\"needs\">\n          <Besoins\n            current={project.id}\n            needs={project.needs}\n            setNeeds={setNeeds}\n          />\n        </div>\n        <div className=\"tab-pane py-4 fade\" id=\"dim-pv\">\n          <PV\n            project={project}\n            setValue={(name, value) => setValue(project.id, name, value)}\n          />\n        </div>\n        <div className=\"tab-pane py-4 fade\" id=\"dim-bat\">\n          <DimBatteries\n            project={project}\n            setValue={(name, value) => setValue(project.id, name, value)}\n          />\n        </div>\n        <div className=\"tab-pane py-4 fade\" id=\"dim-ond\">\n          <DimOnduleur\n            project={project}\n            setValue={(name, value) => setValue(project.id, name, value)}\n          />\n        </div>\n        <div className=\"tab-pane py-4 fade\" id=\"dim-reg\">\n          <DimFieldsR\n            project={project}\n            setValue={(name, value) => setValue(project.id, name, value)}\n          />\n        </div>\n        <div className=\"tab-pane py-4 fade\" id=\"dim-cab\">\n          <Cables\n            project={project}\n            setValue={(name, value) => setValue(project.id, name, value)}\n          />\n        </div>\n        <div className=\"tab-pane py-4 fade\" id=\"dim-rep\">\n          <Report\n            project={project}\n          />\n        </div>\n      </div>\n    </div>\n  </> : <>\n      <div className=\"col-xl-4\">\n      </div>\n    </>;\n});\n","import React from \"react\";\nimport ProjectList from \"./ProjectList\";\nimport ProjectContent from \"./ProjectContent\";\nimport { RouteComponentProps, Redirect } from \"react-router\";\n\nexport default function ProjectView({ match: { params: { id } } }: RouteComponentProps<{\n  id?: string;\n}>) {\n  const current = id ? parseInt(id, 10) : -1;\n  return <>\n    {\n      isFinite(current) && current !== -1\n        ? <Redirect to={`/${current}`} />\n        : <Redirect to=\"/\" />\n    }\n    <div className=\"row\">\n      <ProjectContent current={current} />\n      <div className=\"col-xl-4\">\n        <ProjectList current={current} />\n      </div>\n    </div>\n  </>;\n}\n","import React from 'react';\nimport ProjectView from './ProjectView';\n\nimport { Route } from 'react-router';\n\nexport default function AppContent() {\n  return <div className=\"container-md\">\n    <div className=\"d-print-none mt-3\"></div>\n    <Route\n      exact\n      path=\"/\"\n      component={ProjectView}\n    />\n    <Route\n      path=\"/:id\"\n      component={ProjectView}\n    />\n  </div>;\n}\n","import React from 'react';\nimport store from './state/store';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport AppHeader from './AppHeader';\nimport AppContent from './AppContent';\n\nfunction App() {\n  return <>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <AppHeader />\n        <AppContent />\n      </Router>\n    </Provider>\n  </>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}